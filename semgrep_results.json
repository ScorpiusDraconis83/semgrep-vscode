{
  "errors": [
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/TODO/misc_export_default_ext.js:1:\n `from` was unexpected",
      "path": "tests/TODO/misc_export_default_ext.js",
      "spans": [
        {
          "end": { "col": 20, "line": 1, "offset": 4 },
          "file": "tests/TODO/misc_export_default_ext.js",
          "start": { "col": 16, "line": 1, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 20, "line": 1, "offset": 4 },
            "path": "tests/TODO/misc_export_default_ext.js",
            "start": { "col": 16, "line": 1, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/php/sgrep/xhp.php:3:\n `=` was unexpected",
      "path": "tests/patterns/php/sgrep/xhp.php",
      "spans": [
        {
          "end": { "col": 5, "line": 3, "offset": 1 },
          "file": "tests/patterns/php/sgrep/xhp.php",
          "start": { "col": 4, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 11, "line": 5, "offset": 29 },
          "file": "tests/patterns/php/sgrep/xhp.php",
          "start": { "col": 7, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 4, "line": 7, "offset": 11 },
          "file": "tests/patterns/php/sgrep/xhp.php",
          "start": { "col": 8, "line": 6, "offset": 0 }
        },
        {
          "end": { "col": 7, "line": 7, "offset": 2 },
          "file": "tests/patterns/php/sgrep/xhp.php",
          "start": { "col": 5, "line": 7, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 5, "line": 3, "offset": 1 },
            "path": "tests/patterns/php/sgrep/xhp.php",
            "start": { "col": 4, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 11, "line": 5, "offset": 29 },
            "path": "tests/patterns/php/sgrep/xhp.php",
            "start": { "col": 7, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 4, "line": 7, "offset": 11 },
            "path": "tests/patterns/php/sgrep/xhp.php",
            "start": { "col": 8, "line": 6, "offset": 0 }
          },
          {
            "end": { "col": 7, "line": 7, "offset": 2 },
            "path": "tests/patterns/php/sgrep/xhp.php",
            "start": { "col": 5, "line": 7, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/parsing_errors/err.ts:2:\n `return 1+` was unexpected",
      "path": "tests/parsing_errors/err.ts",
      "spans": [
        {
          "end": { "col": 19, "line": 2, "offset": 9 },
          "file": "tests/parsing_errors/err.ts",
          "start": { "col": 10, "line": 2, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 19, "line": 2, "offset": 9 },
            "path": "tests/parsing_errors/err.ts",
            "start": { "col": 10, "line": 2, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/java/errors/unrecoverable_error1.java:1:\n `class A {\n}\n\nclass Foo {\n    int foo() {\n\t\n` was unexpected",
      "path": "tests/patterns/java/errors/unrecoverable_error1.java",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/php/sgrep/xhp_metavar.php:5:\n `<x:frag label={$o->toString()}></x:frag>` was unexpected",
      "path": "tests/patterns/php/sgrep/xhp_metavar.php",
      "spans": [
        {
          "end": { "col": 48, "line": 5, "offset": 40 },
          "file": "tests/patterns/php/sgrep/xhp_metavar.php",
          "start": { "col": 8, "line": 5, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 48, "line": 5, "offset": 40 },
            "path": "tests/patterns/php/sgrep/xhp_metavar.php",
            "start": { "col": 8, "line": 5, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/dockerfile/todo/string-fragments.dockerfile:5:\n `\"a\"b` was unexpected",
      "path": "tests/patterns/dockerfile/todo/string-fragments.dockerfile",
      "spans": [
        {
          "end": { "col": 11, "line": 5, "offset": 4 },
          "file": "tests/patterns/dockerfile/todo/string-fragments.dockerfile",
          "start": { "col": 7, "line": 5, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 11, "line": 5, "offset": 4 },
            "path": "tests/patterns/dockerfile/todo/string-fragments.dockerfile",
            "start": { "col": 7, "line": 5, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/php/spatch/todo/ui_form.php:3:\n `=` was unexpected",
      "path": "tests/patterns/php/spatch/todo/ui_form.php",
      "spans": [
        {
          "end": { "col": 5, "line": 3, "offset": 1 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 4, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 22, "line": 3, "offset": 15 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 7, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 29, "line": 3, "offset": 2 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 27, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 5, "line": 5, "offset": 1 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 4, "line": 5, "offset": 0 }
        },
        {
          "end": { "col": 19, "line": 5, "offset": 12 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 7, "line": 5, "offset": 0 }
        },
        {
          "end": { "col": 26, "line": 5, "offset": 2 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 24, "line": 5, "offset": 0 }
        },
        {
          "end": { "col": 5, "line": 7, "offset": 1 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 4, "line": 7, "offset": 0 }
        },
        {
          "end": { "col": 30, "line": 7, "offset": 23 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 7, "line": 7, "offset": 0 }
        },
        {
          "end": { "col": 37, "line": 7, "offset": 2 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 35, "line": 7, "offset": 0 }
        },
        {
          "end": { "col": 5, "line": 9, "offset": 1 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 4, "line": 9, "offset": 0 }
        },
        {
          "end": { "col": 12, "line": 11, "offset": 31 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 7, "line": 9, "offset": 0 }
        },
        {
          "end": { "col": 6, "line": 13, "offset": 1 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 5, "line": 13, "offset": 0 }
        },
        {
          "end": { "col": 10, "line": 13, "offset": 3 },
          "file": "tests/patterns/php/spatch/todo/ui_form.php",
          "start": { "col": 7, "line": 13, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 5, "line": 3, "offset": 1 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 4, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 22, "line": 3, "offset": 15 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 7, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 29, "line": 3, "offset": 2 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 27, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 5, "line": 5, "offset": 1 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 4, "line": 5, "offset": 0 }
          },
          {
            "end": { "col": 19, "line": 5, "offset": 12 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 7, "line": 5, "offset": 0 }
          },
          {
            "end": { "col": 26, "line": 5, "offset": 2 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 24, "line": 5, "offset": 0 }
          },
          {
            "end": { "col": 5, "line": 7, "offset": 1 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 4, "line": 7, "offset": 0 }
          },
          {
            "end": { "col": 30, "line": 7, "offset": 23 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 7, "line": 7, "offset": 0 }
          },
          {
            "end": { "col": 37, "line": 7, "offset": 2 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 35, "line": 7, "offset": 0 }
          },
          {
            "end": { "col": 5, "line": 9, "offset": 1 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 4, "line": 9, "offset": 0 }
          },
          {
            "end": { "col": 12, "line": 11, "offset": 31 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 7, "line": 9, "offset": 0 }
          },
          {
            "end": { "col": 6, "line": 13, "offset": 1 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 5, "line": 13, "offset": 0 }
          },
          {
            "end": { "col": 10, "line": 13, "offset": 3 },
            "path": "tests/patterns/php/spatch/todo/ui_form.php",
            "start": { "col": 7, "line": 13, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/osemgrep/cli_login/Login_subcommand.mli:8:\n `: <` was unexpected",
      "path": "src/osemgrep/cli_login/Login_subcommand.mli",
      "spans": [
        {
          "end": { "col": 13, "line": 8, "offset": 3 },
          "file": "src/osemgrep/cli_login/Login_subcommand.mli",
          "start": { "col": 10, "line": 8, "offset": 0 }
        },
        {
          "end": { "col": 43, "line": 8, "offset": 2 },
          "file": "src/osemgrep/cli_login/Login_subcommand.mli",
          "start": { "col": 41, "line": 8, "offset": 0 }
        },
        {
          "end": { "col": 59, "line": 8, "offset": 1 },
          "file": "src/osemgrep/cli_login/Login_subcommand.mli",
          "start": { "col": 58, "line": 8, "offset": 0 }
        },
        {
          "end": { "col": 12, "line": 11, "offset": 3 },
          "file": "src/osemgrep/cli_login/Login_subcommand.mli",
          "start": { "col": 9, "line": 11, "offset": 0 }
        },
        {
          "end": { "col": 42, "line": 11, "offset": 2 },
          "file": "src/osemgrep/cli_login/Login_subcommand.mli",
          "start": { "col": 40, "line": 11, "offset": 0 }
        },
        {
          "end": { "col": 60, "line": 11, "offset": 1 },
          "file": "src/osemgrep/cli_login/Login_subcommand.mli",
          "start": { "col": 59, "line": 11, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 13, "line": 8, "offset": 3 },
            "path": "src/osemgrep/cli_login/Login_subcommand.mli",
            "start": { "col": 10, "line": 8, "offset": 0 }
          },
          {
            "end": { "col": 43, "line": 8, "offset": 2 },
            "path": "src/osemgrep/cli_login/Login_subcommand.mli",
            "start": { "col": 41, "line": 8, "offset": 0 }
          },
          {
            "end": { "col": 59, "line": 8, "offset": 1 },
            "path": "src/osemgrep/cli_login/Login_subcommand.mli",
            "start": { "col": 58, "line": 8, "offset": 0 }
          },
          {
            "end": { "col": 12, "line": 11, "offset": 3 },
            "path": "src/osemgrep/cli_login/Login_subcommand.mli",
            "start": { "col": 9, "line": 11, "offset": 0 }
          },
          {
            "end": { "col": 42, "line": 11, "offset": 2 },
            "path": "src/osemgrep/cli_login/Login_subcommand.mli",
            "start": { "col": 40, "line": 11, "offset": 0 }
          },
          {
            "end": { "col": 60, "line": 11, "offset": 1 },
            "path": "src/osemgrep/cli_login/Login_subcommand.mli",
            "start": { "col": 59, "line": 11, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/check-semgrep-pro.yml:35:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.jwt.outputs.jwt` was unexpected",
      "path": ".github/workflows/check-semgrep-pro.yml",
      "spans": [
        {
          "end": { "col": 58, "line": 35, "offset": 985 },
          "file": ".github/workflows/check-semgrep-pro.yml",
          "start": { "col": 35, "line": 35, "offset": 962 }
        },
        {
          "end": { "col": 91, "line": 37, "offset": 1002 },
          "file": ".github/workflows/check-semgrep-pro.yml",
          "start": { "col": 51, "line": 37, "offset": 962 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 58, "line": 35, "offset": 985 },
            "path": ".github/workflows/check-semgrep-pro.yml",
            "start": { "col": 35, "line": 35, "offset": 962 }
          },
          {
            "end": { "col": 91, "line": 37, "offset": 1002 },
            "path": ".github/workflows/check-semgrep-pro.yml",
            "start": { "col": 51, "line": 37, "offset": 962 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/trigger-semgrep-comparison-argo.yml:23:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ github.event_name` was unexpected",
      "path": ".github/workflows/trigger-semgrep-comparison-argo.yml",
      "spans": [
        {
          "end": { "col": 28, "line": 23, "offset": 620 },
          "file": ".github/workflows/trigger-semgrep-comparison-argo.yml",
          "start": { "col": 9, "line": 23, "offset": 601 }
        },
        {
          "end": { "col": 51, "line": 24, "offset": 637 },
          "file": ".github/workflows/trigger-semgrep-comparison-argo.yml",
          "start": { "col": 15, "line": 24, "offset": 601 }
        },
        {
          "end": { "col": 30, "line": 25, "offset": 620 },
          "file": ".github/workflows/trigger-semgrep-comparison-argo.yml",
          "start": { "col": 11, "line": 25, "offset": 601 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 28, "line": 23, "offset": 620 },
            "path": ".github/workflows/trigger-semgrep-comparison-argo.yml",
            "start": { "col": 9, "line": 23, "offset": 601 }
          },
          {
            "end": { "col": 51, "line": 24, "offset": 637 },
            "path": ".github/workflows/trigger-semgrep-comparison-argo.yml",
            "start": { "col": 15, "line": 24, "offset": 601 }
          },
          {
            "end": { "col": 30, "line": 25, "offset": 620 },
            "path": ".github/workflows/trigger-semgrep-comparison-argo.yml",
            "start": { "col": 11, "line": 25, "offset": 601 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/trigger-semgrep-comparison-argo.yml:38:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ github.event_name` was unexpected",
      "path": ".github/workflows/trigger-semgrep-comparison-argo.yml",
      "spans": [
        {
          "end": { "col": 58, "line": 38, "offset": 1273 },
          "file": ".github/workflows/trigger-semgrep-comparison-argo.yml",
          "start": { "col": 39, "line": 38, "offset": 1254 }
        },
        {
          "end": { "col": 28, "line": 39, "offset": 1273 },
          "file": ".github/workflows/trigger-semgrep-comparison-argo.yml",
          "start": { "col": 9, "line": 39, "offset": 1254 }
        },
        {
          "end": { "col": 59, "line": 40, "offset": 1288 },
          "file": ".github/workflows/trigger-semgrep-comparison-argo.yml",
          "start": { "col": 25, "line": 40, "offset": 1254 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 58, "line": 38, "offset": 1273 },
            "path": ".github/workflows/trigger-semgrep-comparison-argo.yml",
            "start": { "col": 39, "line": 38, "offset": 1254 }
          },
          {
            "end": { "col": 28, "line": 39, "offset": 1273 },
            "path": ".github/workflows/trigger-semgrep-comparison-argo.yml",
            "start": { "col": 9, "line": 39, "offset": 1254 }
          },
          {
            "end": { "col": 59, "line": 40, "offset": 1288 },
            "path": ".github/workflows/trigger-semgrep-comparison-argo.yml",
            "start": { "col": 25, "line": 40, "offset": 1254 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/test-pro-rules.yml:35:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.jwt.outputs.jwt` was unexpected",
      "path": ".github/workflows/test-pro-rules.yml",
      "spans": [
        {
          "end": { "col": 58, "line": 35, "offset": 963 },
          "file": ".github/workflows/test-pro-rules.yml",
          "start": { "col": 35, "line": 35, "offset": 940 }
        },
        {
          "end": { "col": 91, "line": 37, "offset": 980 },
          "file": ".github/workflows/test-pro-rules.yml",
          "start": { "col": 51, "line": 37, "offset": 940 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 58, "line": 35, "offset": 963 },
            "path": ".github/workflows/test-pro-rules.yml",
            "start": { "col": 35, "line": 35, "offset": 940 }
          },
          {
            "end": { "col": 91, "line": 37, "offset": 980 },
            "path": ".github/workflows/test-pro-rules.yml",
            "start": { "col": 51, "line": 37, "offset": 940 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/test-semgrep-pro.yaml:34:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ github.event_name` was unexpected",
      "path": ".github/workflows/test-semgrep-pro.yaml",
      "spans": [
        {
          "end": { "col": 58, "line": 34, "offset": 1034 },
          "file": ".github/workflows/test-semgrep-pro.yaml",
          "start": { "col": 39, "line": 34, "offset": 1015 }
        },
        {
          "end": { "col": 28, "line": 35, "offset": 1034 },
          "file": ".github/workflows/test-semgrep-pro.yaml",
          "start": { "col": 9, "line": 35, "offset": 1015 }
        },
        {
          "end": { "col": 59, "line": 36, "offset": 1049 },
          "file": ".github/workflows/test-semgrep-pro.yaml",
          "start": { "col": 25, "line": 36, "offset": 1015 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 58, "line": 34, "offset": 1034 },
            "path": ".github/workflows/test-semgrep-pro.yaml",
            "start": { "col": 39, "line": 34, "offset": 1015 }
          },
          {
            "end": { "col": 28, "line": 35, "offset": 1034 },
            "path": ".github/workflows/test-semgrep-pro.yaml",
            "start": { "col": 9, "line": 35, "offset": 1015 }
          },
          {
            "end": { "col": 59, "line": 36, "offset": 1049 },
            "path": ".github/workflows/test-semgrep-pro.yaml",
            "start": { "col": 25, "line": 36, "offset": 1015 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/test-semgrep-pro.yaml:82:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/test-semgrep-pro.yaml",
      "spans": [
        {
          "end": { "col": 73, "line": 82, "offset": 2956 },
          "file": ".github/workflows/test-semgrep-pro.yaml",
          "start": { "col": 70, "line": 82, "offset": 2953 }
        },
        {
          "end": { "col": 148, "line": 82, "offset": 2977 },
          "file": ".github/workflows/test-semgrep-pro.yaml",
          "start": { "col": 124, "line": 82, "offset": 2953 }
        },
        {
          "end": { "col": 197, "line": 82, "offset": 2996 },
          "file": ".github/workflows/test-semgrep-pro.yaml",
          "start": { "col": 154, "line": 82, "offset": 2953 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 73, "line": 82, "offset": 2956 },
            "path": ".github/workflows/test-semgrep-pro.yaml",
            "start": { "col": 70, "line": 82, "offset": 2953 }
          },
          {
            "end": { "col": 148, "line": 82, "offset": 2977 },
            "path": ".github/workflows/test-semgrep-pro.yaml",
            "start": { "col": 124, "line": 82, "offset": 2953 }
          },
          {
            "end": { "col": 197, "line": 82, "offset": 2996 },
            "path": ".github/workflows/test-semgrep-pro.yaml",
            "start": { "col": 154, "line": 82, "offset": 2953 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/test-e2e-semgrep-ci.yml:23:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ inputs.docker_tag || env.DOCKER_TAG` was unexpected",
      "path": ".github/workflows/test-e2e-semgrep-ci.yml",
      "spans": [
        {
          "end": { "col": 68, "line": 23, "offset": 574 },
          "file": ".github/workflows/test-e2e-semgrep-ci.yml",
          "start": { "col": 31, "line": 23, "offset": 537 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 68, "line": 23, "offset": 574 },
            "path": ".github/workflows/test-e2e-semgrep-ci.yml",
            "start": { "col": 31, "line": 23, "offset": 537 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/test-e2e-semgrep-ci.yml:25:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.get-inputs.outputs.docker_tag` was unexpected",
      "path": ".github/workflows/test-e2e-semgrep-ci.yml",
      "spans": [
        {
          "end": { "col": 57, "line": 25, "offset": 682 },
          "file": ".github/workflows/test-e2e-semgrep-ci.yml",
          "start": { "col": 20, "line": 25, "offset": 645 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 57, "line": 25, "offset": 682 },
            "path": ".github/workflows/test-e2e-semgrep-ci.yml",
            "start": { "col": 20, "line": 25, "offset": 645 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/test-e2e-semgrep-ci.yml:82:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/test-e2e-semgrep-ci.yml",
      "spans": [
        {
          "end": { "col": 20, "line": 82, "offset": 2647 },
          "file": ".github/workflows/test-e2e-semgrep-ci.yml",
          "start": { "col": 17, "line": 82, "offset": 2644 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 20, "line": 82, "offset": 2647 },
            "path": ".github/workflows/test-e2e-semgrep-ci.yml",
            "start": { "col": 17, "line": 82, "offset": 2644 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/test-e2e-semgrep-ci.yml:83:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/test-e2e-semgrep-ci.yml",
      "spans": [
        {
          "end": { "col": 20, "line": 83, "offset": 2708 },
          "file": ".github/workflows/test-e2e-semgrep-ci.yml",
          "start": { "col": 17, "line": 83, "offset": 2705 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 20, "line": 83, "offset": 2708 },
            "path": ".github/workflows/test-e2e-semgrep-ci.yml",
            "start": { "col": 17, "line": 83, "offset": 2705 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/test-e2e-semgrep-ci.yml:99:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.jwt.outputs.jwt` was unexpected",
      "path": ".github/workflows/test-e2e-semgrep-ci.yml",
      "spans": [
        {
          "end": { "col": 58, "line": 99, "offset": 3203 },
          "file": ".github/workflows/test-e2e-semgrep-ci.yml",
          "start": { "col": 35, "line": 99, "offset": 3180 }
        },
        {
          "end": { "col": 91, "line": 101, "offset": 3220 },
          "file": ".github/workflows/test-e2e-semgrep-ci.yml",
          "start": { "col": 51, "line": 101, "offset": 3180 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 58, "line": 99, "offset": 3203 },
            "path": ".github/workflows/test-e2e-semgrep-ci.yml",
            "start": { "col": 35, "line": 99, "offset": 3180 }
          },
          {
            "end": { "col": 91, "line": 101, "offset": 3220 },
            "path": ".github/workflows/test-e2e-semgrep-ci.yml",
            "start": { "col": 51, "line": 101, "offset": 3180 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/test-e2e-semgrep-ci.yml:106:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.semgrep-ci-on-pr.outputs.pr-number` was unexpected",
      "path": ".github/workflows/test-e2e-semgrep-ci.yml",
      "spans": [
        {
          "end": { "col": 98, "line": 106, "offset": 3760 },
          "file": ".github/workflows/test-e2e-semgrep-ci.yml",
          "start": { "col": 56, "line": 106, "offset": 3718 }
        },
        {
          "end": { "col": 100, "line": 115, "offset": 3760 },
          "file": ".github/workflows/test-e2e-semgrep-ci.yml",
          "start": { "col": 58, "line": 115, "offset": 3718 }
        },
        {
          "end": { "col": 85, "line": 121, "offset": 3760 },
          "file": ".github/workflows/test-e2e-semgrep-ci.yml",
          "start": { "col": 43, "line": 121, "offset": 3718 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 98, "line": 106, "offset": 3760 },
            "path": ".github/workflows/test-e2e-semgrep-ci.yml",
            "start": { "col": 56, "line": 106, "offset": 3718 }
          },
          {
            "end": { "col": 100, "line": 115, "offset": 3760 },
            "path": ".github/workflows/test-e2e-semgrep-ci.yml",
            "start": { "col": 58, "line": 115, "offset": 3718 }
          },
          {
            "end": { "col": 85, "line": 121, "offset": 3760 },
            "path": ".github/workflows/test-e2e-semgrep-ci.yml",
            "start": { "col": 43, "line": 121, "offset": 3718 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/test-e2e-semgrep-ci.yml:122:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.semgrep-ci-on-pr.outputs.pr-number` was unexpected",
      "path": ".github/workflows/test-e2e-semgrep-ci.yml",
      "spans": [
        {
          "end": { "col": 87, "line": 122, "offset": 4862 },
          "file": ".github/workflows/test-e2e-semgrep-ci.yml",
          "start": { "col": 45, "line": 122, "offset": 4820 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 87, "line": 122, "offset": 4862 },
            "path": ".github/workflows/test-e2e-semgrep-ci.yml",
            "start": { "col": 45, "line": 122, "offset": 4820 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/test-e2e-semgrep-ci.yml:138:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/test-e2e-semgrep-ci.yml",
      "spans": [
        {
          "end": { "col": 19, "line": 138, "offset": 5308 },
          "file": ".github/workflows/test-e2e-semgrep-ci.yml",
          "start": { "col": 16, "line": 138, "offset": 5305 }
        },
        {
          "end": { "col": 7, "line": 145, "offset": 5645 },
          "file": ".github/workflows/test-e2e-semgrep-ci.yml",
          "start": { "col": 16, "line": 140, "offset": 5305 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 19, "line": 138, "offset": 5308 },
            "path": ".github/workflows/test-e2e-semgrep-ci.yml",
            "start": { "col": 16, "line": 138, "offset": 5305 }
          },
          {
            "end": { "col": 7, "line": 145, "offset": 5645 },
            "path": ".github/workflows/test-e2e-semgrep-ci.yml",
            "start": { "col": 16, "line": 140, "offset": 5305 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/release.yml:41:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ inputs.dry-run` was unexpected",
      "path": ".github/workflows/release.yml",
      "spans": [
        {
          "end": { "col": 40, "line": 41, "offset": 1144 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 24, "line": 41, "offset": 1128 }
        },
        {
          "end": { "col": 84, "line": 41, "offset": 1145 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 67, "line": 41, "offset": 1128 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 40, "line": 41, "offset": 1144 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 24, "line": 41, "offset": 1128 }
          },
          {
            "end": { "col": 84, "line": 41, "offset": 1145 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 67, "line": 41, "offset": 1128 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/release.yml:252:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.get-version.outputs.VERSION` was unexpected",
      "path": ".github/workflows/release.yml",
      "spans": [
        {
          "end": { "col": 120, "line": 252, "offset": 8508 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 85, "line": 252, "offset": 8473 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 120, "line": 252, "offset": 8508 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 85, "line": 252, "offset": 8473 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/release.yml:261:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/release.yml",
      "spans": [
        {
          "end": { "col": 62, "line": 261, "offset": 8838 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 59, "line": 261, "offset": 8835 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 62, "line": 261, "offset": 8838 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 59, "line": 261, "offset": 8835 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/release.yml:283:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.jwt.outputs.jwt` was unexpected",
      "path": ".github/workflows/release.yml",
      "spans": [
        {
          "end": { "col": 52, "line": 283, "offset": 9755 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 29, "line": 283, "offset": 9732 }
        },
        {
          "end": { "col": 85, "line": 285, "offset": 9772 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 45, "line": 285, "offset": 9732 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 52, "line": 283, "offset": 9755 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 29, "line": 283, "offset": 9732 }
          },
          {
            "end": { "col": 85, "line": 285, "offset": 9772 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 45, "line": 285, "offset": 9732 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/release.yml:299:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/release.yml",
      "spans": [
        {
          "end": { "col": 75, "line": 299, "offset": 10428 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 72, "line": 299, "offset": 10425 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 75, "line": 299, "offset": 10428 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 72, "line": 299, "offset": 10425 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/release.yml:305:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/release.yml",
      "spans": [
        {
          "end": { "col": 73, "line": 305, "offset": 10774 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 70, "line": 305, "offset": 10771 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 73, "line": 305, "offset": 10774 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 70, "line": 305, "offset": 10771 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/release.yml:326:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.inputs.outputs.dry-run` was unexpected",
      "path": ".github/workflows/release.yml",
      "spans": [
        {
          "end": { "col": 39, "line": 326, "offset": 11592 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 9, "line": 326, "offset": 11562 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 39, "line": 326, "offset": 11592 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 9, "line": 326, "offset": 11562 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/release.yml:362:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.get-version.outputs.VERSION` was unexpected",
      "path": ".github/workflows/release.yml",
      "spans": [
        {
          "end": { "col": 59, "line": 362, "offset": 13482 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 24, "line": 362, "offset": 13447 }
        },
        {
          "end": { "col": 43, "line": 363, "offset": 13478 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 12, "line": 363, "offset": 13447 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 59, "line": 362, "offset": 13482 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 24, "line": 362, "offset": 13447 }
          },
          {
            "end": { "col": 43, "line": 363, "offset": 13478 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 12, "line": 363, "offset": 13447 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/release.yml:372:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/release.yml",
      "spans": [
        {
          "end": { "col": 25, "line": 372, "offset": 13889 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 22, "line": 372, "offset": 13886 }
        },
        {
          "end": { "col": 26, "line": 373, "offset": 13889 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 23, "line": 373, "offset": 13886 }
        },
        {
          "end": { "col": 33, "line": 376, "offset": 13889 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 30, "line": 376, "offset": 13886 }
        },
        {
          "end": { "col": 61, "line": 378, "offset": 13921 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 26, "line": 378, "offset": 13886 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 25, "line": 372, "offset": 13889 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 22, "line": 372, "offset": 13886 }
          },
          {
            "end": { "col": 26, "line": 373, "offset": 13889 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 23, "line": 373, "offset": 13886 }
          },
          {
            "end": { "col": 33, "line": 376, "offset": 13889 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 30, "line": 376, "offset": 13886 }
          },
          {
            "end": { "col": 61, "line": 378, "offset": 13921 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 26, "line": 378, "offset": 13886 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/release.yml:385:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.get-version.outputs.VERSION` was unexpected",
      "path": ".github/workflows/release.yml",
      "spans": [
        {
          "end": { "col": 88, "line": 385, "offset": 14680 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 53, "line": 385, "offset": 14645 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 88, "line": 385, "offset": 14680 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 53, "line": 385, "offset": 14645 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/release.yml:393:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.get-version.outputs.VERSION` was unexpected",
      "path": ".github/workflows/release.yml",
      "spans": [
        {
          "end": { "col": 102, "line": 393, "offset": 15128 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 67, "line": 393, "offset": 15093 }
        },
        {
          "end": { "col": 57, "line": 394, "offset": 15128 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 22, "line": 394, "offset": 15093 }
        },
        {
          "end": { "col": 72, "line": 395, "offset": 15128 },
          "file": ".github/workflows/release.yml",
          "start": { "col": 37, "line": 395, "offset": 15093 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 102, "line": 393, "offset": 15128 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 67, "line": 393, "offset": 15093 }
          },
          {
            "end": { "col": 57, "line": 394, "offset": 15128 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 22, "line": 394, "offset": 15093 }
          },
          {
            "end": { "col": 72, "line": 395, "offset": 15128 },
            "path": ".github/workflows/release.yml",
            "start": { "col": 37, "line": 395, "offset": 15093 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:47:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.jwt.outputs.jwt` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 52, "line": 47, "offset": 1685 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 29, "line": 47, "offset": 1662 }
        },
        {
          "end": { "col": 85, "line": 49, "offset": 1702 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 45, "line": 49, "offset": 1662 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 52, "line": 47, "offset": 1685 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 29, "line": 47, "offset": 1662 }
          },
          {
            "end": { "col": 85, "line": 49, "offset": 1702 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 45, "line": 49, "offset": 1662 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:109:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.jwt.outputs.jwt` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 52, "line": 109, "offset": 4353 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 29, "line": 109, "offset": 4330 }
        },
        {
          "end": { "col": 85, "line": 111, "offset": 4370 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 45, "line": 111, "offset": 4330 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 52, "line": 109, "offset": 4353 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 29, "line": 109, "offset": 4330 }
          },
          {
            "end": { "col": 85, "line": 111, "offset": 4370 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 45, "line": 111, "offset": 4330 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:125:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.get-version.outputs.version` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 76, "line": 125, "offset": 5074 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 41, "line": 125, "offset": 5039 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 76, "line": 125, "offset": 5074 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 41, "line": 125, "offset": 5039 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:147:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 49, "line": 147, "offset": 5786 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 46, "line": 147, "offset": 5783 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 49, "line": 147, "offset": 5786 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 46, "line": 147, "offset": 5783 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:160:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 47, "line": 160, "offset": 6354 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 44, "line": 160, "offset": 6351 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 47, "line": 160, "offset": 6354 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 44, "line": 160, "offset": 6351 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:169:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 39, "line": 169, "offset": 6904 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 36, "line": 169, "offset": 6901 }
        },
        {
          "end": { "col": 26, "line": 170, "offset": 6904 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 23, "line": 170, "offset": 6901 }
        },
        {
          "end": { "col": 35, "line": 173, "offset": 6904 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 32, "line": 173, "offset": 6901 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 39, "line": 169, "offset": 6904 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 36, "line": 169, "offset": 6901 }
          },
          {
            "end": { "col": 26, "line": 170, "offset": 6904 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 23, "line": 170, "offset": 6901 }
          },
          {
            "end": { "col": 35, "line": 173, "offset": 6904 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 32, "line": 173, "offset": 6901 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:216:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.release-setup.outputs.pr-number` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 105, "line": 216, "offset": 8905 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 66, "line": 216, "offset": 8866 }
        },
        {
          "end": { "col": 93, "line": 223, "offset": 8905 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 54, "line": 223, "offset": 8866 }
        },
        {
          "end": { "col": 78, "line": 229, "offset": 8905 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 39, "line": 229, "offset": 8866 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 105, "line": 216, "offset": 8905 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 66, "line": 216, "offset": 8866 }
          },
          {
            "end": { "col": 93, "line": 223, "offset": 8905 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 54, "line": 223, "offset": 8866 }
          },
          {
            "end": { "col": 78, "line": 229, "offset": 8905 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 39, "line": 229, "offset": 8866 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:236:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.release-setup.outputs.pr-number` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 80, "line": 236, "offset": 9911 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 41, "line": 236, "offset": 9872 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 80, "line": 236, "offset": 9911 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 41, "line": 236, "offset": 9872 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:245:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.release-setup.outputs.pr-number` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 91, "line": 245, "offset": 10208 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 52, "line": 245, "offset": 10169 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 91, "line": 245, "offset": 10208 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 52, "line": 245, "offset": 10169 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:265:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.jwt.outputs.jwt` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 52, "line": 265, "offset": 11332 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 29, "line": 265, "offset": 11309 }
        },
        {
          "end": { "col": 85, "line": 267, "offset": 11349 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 45, "line": 267, "offset": 11309 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 52, "line": 265, "offset": 11332 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 29, "line": 265, "offset": 11309 }
          },
          {
            "end": { "col": 85, "line": 267, "offset": 11349 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 45, "line": 267, "offset": 11309 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:281:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 39, "line": 281, "offset": 12035 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 36, "line": 281, "offset": 12032 }
        },
        {
          "end": { "col": 26, "line": 282, "offset": 12035 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 23, "line": 282, "offset": 12032 }
        },
        {
          "end": { "col": 61, "line": 283, "offset": 12067 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 26, "line": 283, "offset": 12032 }
        },
        {
          "end": { "col": 105, "line": 283, "offset": 12067 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 70, "line": 283, "offset": 12032 }
        },
        {
          "end": { "col": 56, "line": 284, "offset": 12067 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 21, "line": 284, "offset": 12032 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 39, "line": 281, "offset": 12035 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 36, "line": 281, "offset": 12032 }
          },
          {
            "end": { "col": 26, "line": 282, "offset": 12035 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 23, "line": 282, "offset": 12032 }
          },
          {
            "end": { "col": 61, "line": 283, "offset": 12067 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 26, "line": 283, "offset": 12032 }
          },
          {
            "end": { "col": 105, "line": 283, "offset": 12067 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 70, "line": 283, "offset": 12032 }
          },
          {
            "end": { "col": 56, "line": 284, "offset": 12067 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 21, "line": 284, "offset": 12032 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:289:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 25, "line": 289, "offset": 12461 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 22, "line": 289, "offset": 12458 }
        },
        {
          "end": { "col": 26, "line": 290, "offset": 12461 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 23, "line": 290, "offset": 12458 }
        },
        {
          "end": { "col": 61, "line": 291, "offset": 12493 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 26, "line": 291, "offset": 12458 }
        },
        {
          "end": { "col": 105, "line": 291, "offset": 12493 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 70, "line": 291, "offset": 12458 }
        },
        {
          "end": { "col": 56, "line": 292, "offset": 12493 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 21, "line": 292, "offset": 12458 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 25, "line": 289, "offset": 12461 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 22, "line": 289, "offset": 12458 }
          },
          {
            "end": { "col": 26, "line": 290, "offset": 12461 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 23, "line": 290, "offset": 12458 }
          },
          {
            "end": { "col": 61, "line": 291, "offset": 12493 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 26, "line": 291, "offset": 12458 }
          },
          {
            "end": { "col": 105, "line": 291, "offset": 12493 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 70, "line": 291, "offset": 12458 }
          },
          {
            "end": { "col": 56, "line": 292, "offset": 12493 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 21, "line": 292, "offset": 12458 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:327:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.jwt.outputs.jwt` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 52, "line": 327, "offset": 14088 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 29, "line": 327, "offset": 14065 }
        },
        {
          "end": { "col": 85, "line": 329, "offset": 14105 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 45, "line": 329, "offset": 14065 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 52, "line": 327, "offset": 14088 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 29, "line": 327, "offset": 14065 }
          },
          {
            "end": { "col": 85, "line": 329, "offset": 14105 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 45, "line": 329, "offset": 14065 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:356:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `LEN_CHECKS=$(gh pr -R returntocorp/semgrep view \"${{ needs.release-setup.outputs.pr-number }}\" --json statusCheckRollup --jq '.statusCheckRollup | length');\n\n# We need to wait for the new checks to register when the release tag is pushed\nwhile [ ${LEN_CHECKS} = ${{ needs.wait-for-pr-checks.outputs.num-checks }} ]; do\n  echo \"No checks available yet\"\n  sleep 1\n  LEN_CHECKS=$(gh pr -R returntocorp/semgrep view \"${{ needs.release-setup.outputs.pr-number }}\" --json statusCheckRollup --jq '.statusCheckRollup | length');\ndone\necho \"checks are valid\"\n\necho ${LEN_CHECKS}\n\ngh pr -R returntocorp/semgrep view \"${{ needs.release-setup.outputs.pr-number }}\" --json statusCheckRollup\n` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 108, "line": 368, "offset": 15982 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 15, "line": 356, "offset": 15304 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 108, "line": 368, "offset": 15982 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 15, "line": 356, "offset": 15304 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:375:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.release-setup.outputs.pr-number` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 80, "line": 375, "offset": 16271 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 41, "line": 375, "offset": 16232 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 80, "line": 375, "offset": 16271 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 41, "line": 375, "offset": 16232 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:431:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{needs.get-version.outputs.version` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 56, "line": 431, "offset": 18089 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 22, "line": 431, "offset": 18055 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 56, "line": 431, "offset": 18089 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 22, "line": 431, "offset": 18055 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:434:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ secrets.ZAPIER_WEBHOOK_URL` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 37, "line": 434, "offset": 18172 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 9, "line": 434, "offset": 18144 }
        },
        {
          "end": { "col": 11, "line": 438, "offset": 18147 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 8, "line": 438, "offset": 18144 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 37, "line": 434, "offset": 18172 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 9, "line": 434, "offset": 18144 }
          },
          {
            "end": { "col": 11, "line": 438, "offset": 18147 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 8, "line": 438, "offset": 18144 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/start-release.yml:462:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/start-release.yml",
      "spans": [
        {
          "end": { "col": 11, "line": 462, "offset": 19240 },
          "file": ".github/workflows/start-release.yml",
          "start": { "col": 8, "line": 462, "offset": 19237 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 11, "line": 462, "offset": 19240 },
            "path": ".github/workflows/start-release.yml",
            "start": { "col": 8, "line": 462, "offset": 19237 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line js/libyaml/yaml_private.h:261:\n `#define IS_PRINTABLE_AT(string,offset)                                          \\\n    (((string).pointer[offset] == 0x0A)         /* . == #x0A */                 \\\n     || ((string).pointer[offset] >= 0x20       /* #x20 <= . <= #x7E */         \\\n         && (string).pointer[offset] <= 0x7E)                                   \\\n     || ((string).pointer[offset] == 0xC2       /* #0xA0 <= . <= #xD7FF */      \\\n         && (string).pointer[offset+1] >= 0xA0)                                 \\\n     || ((string).pointer[offset] > 0xC2                                        \\\n         && (string).pointer[offset] < 0xED)                                    \\\n     || ((string).pointer[offset] == 0xED                                       \\\n         && (string).pointer[offset+1] < 0xA0)                                  \\\n     || ((string).pointer[offset] == 0xEE)                                      \\\n     || ((string).pointer[offset] == 0xEF      /* #xE000 <= . <= #xFFFD */      \\\n         && !((string).pointer[offset+1] == 0xBB        /* && . != #xFEFF */    \\\n             && (string).pointer[offset+2] == 0xBF)                             \\\n         && !((string).pointer[offset+1] == 0xBF                                \\\n             && ((string).pointer[offset+2] == 0xBE                             \\\n                 || (string).pointer[offset+2] == 0xBF))))` was unexpected",
      "path": "js/libyaml/yaml_private.h",
      "spans": [
        {
          "end": { "col": 59, "line": 277, "offset": 1370 },
          "file": "js/libyaml/yaml_private.h",
          "start": { "col": 1, "line": 261, "offset": 0 }
        },
        {
          "end": { "col": 18, "line": 337, "offset": 654 },
          "file": "js/libyaml/yaml_private.h",
          "start": { "col": 20, "line": 329, "offset": 0 }
        },
        {
          "end": { "col": 20, "line": 337, "offset": 1 },
          "file": "js/libyaml/yaml_private.h",
          "start": { "col": 19, "line": 337, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 59, "line": 277, "offset": 1370 },
            "path": "js/libyaml/yaml_private.h",
            "start": { "col": 1, "line": 261, "offset": 0 }
          },
          {
            "end": { "col": 18, "line": 337, "offset": 654 },
            "path": "js/libyaml/yaml_private.h",
            "start": { "col": 20, "line": 329, "offset": 0 }
          },
          {
            "end": { "col": 20, "line": 337, "offset": 1 },
            "path": "js/libyaml/yaml_private.h",
            "start": { "col": 19, "line": 337, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line scripts/check-bash-version:10:\n `! { bash --version | grep -q 'version [56789]';` was unexpected",
      "path": "scripts/check-bash-version",
      "spans": [
        {
          "end": { "col": 51, "line": 10, "offset": 47 },
          "file": "scripts/check-bash-version",
          "start": { "col": 4, "line": 10, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 51, "line": 10, "offset": 47 },
            "path": "scripts/check-bash-version",
            "start": { "col": 4, "line": 10, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 2,
      "level": "warn",
      "message": "Other syntax error at line cli/tests/e2e/rules/syntax/invalid.yaml:1:\n (approximate error location; error nearby after) error calling parser: mapping values are not allowed in this context character 0 position 0 returned: 0",
      "path": "cli/tests/e2e/rules/syntax/invalid.yaml",
      "type": "Other syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/osemgrep/cli_show/Show_subcommand.mli:9:\n `: <` was unexpected",
      "path": "src/osemgrep/cli_show/Show_subcommand.mli",
      "spans": [
        {
          "end": { "col": 13, "line": 9, "offset": 3 },
          "file": "src/osemgrep/cli_show/Show_subcommand.mli",
          "start": { "col": 10, "line": 9, "offset": 0 }
        },
        {
          "end": { "col": 43, "line": 9, "offset": 2 },
          "file": "src/osemgrep/cli_show/Show_subcommand.mli",
          "start": { "col": 41, "line": 9, "offset": 0 }
        },
        {
          "end": { "col": 59, "line": 9, "offset": 1 },
          "file": "src/osemgrep/cli_show/Show_subcommand.mli",
          "start": { "col": 58, "line": 9, "offset": 0 }
        },
        {
          "end": { "col": 17, "line": 14, "offset": 3 },
          "file": "src/osemgrep/cli_show/Show_subcommand.mli",
          "start": { "col": 14, "line": 14, "offset": 0 }
        },
        {
          "end": { "col": 47, "line": 14, "offset": 2 },
          "file": "src/osemgrep/cli_show/Show_subcommand.mli",
          "start": { "col": 45, "line": 14, "offset": 0 }
        },
        {
          "end": { "col": 64, "line": 14, "offset": 1 },
          "file": "src/osemgrep/cli_show/Show_subcommand.mli",
          "start": { "col": 63, "line": 14, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 13, "line": 9, "offset": 3 },
            "path": "src/osemgrep/cli_show/Show_subcommand.mli",
            "start": { "col": 10, "line": 9, "offset": 0 }
          },
          {
            "end": { "col": 43, "line": 9, "offset": 2 },
            "path": "src/osemgrep/cli_show/Show_subcommand.mli",
            "start": { "col": 41, "line": 9, "offset": 0 }
          },
          {
            "end": { "col": 59, "line": 9, "offset": 1 },
            "path": "src/osemgrep/cli_show/Show_subcommand.mli",
            "start": { "col": 58, "line": 9, "offset": 0 }
          },
          {
            "end": { "col": 17, "line": 14, "offset": 3 },
            "path": "src/osemgrep/cli_show/Show_subcommand.mli",
            "start": { "col": 14, "line": 14, "offset": 0 }
          },
          {
            "end": { "col": 47, "line": 14, "offset": 2 },
            "path": "src/osemgrep/cli_show/Show_subcommand.mli",
            "start": { "col": 45, "line": 14, "offset": 0 }
          },
          {
            "end": { "col": 64, "line": 14, "offset": 1 },
            "path": "src/osemgrep/cli_show/Show_subcommand.mli",
            "start": { "col": 63, "line": 14, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 2,
      "level": "warn",
      "message": "Other syntax error at line cli/tests/e2e/rules/syntax/invalid-patterns-key.yml:8:\n (approximate error location; error nearby after) error calling parser: did not find expected key character 0 position 0 returned: 0",
      "path": "cli/tests/e2e/rules/syntax/invalid-patterns-key.yml",
      "type": "Other syntax error"
    },
    {
      "code": 2,
      "level": "warn",
      "message": "Other syntax error at line cli/tests/e2e/rules/syntax/invalid-metavariable-regex.yml:7:\n (approximate error location; error nearby after) error calling parser: did not find expected '-' indicator character 0 position 0 returned: 0",
      "path": "cli/tests/e2e/rules/syntax/invalid-metavariable-regex.yml",
      "type": "Other syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/nightly.yml:39:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/nightly.yml",
      "spans": [
        {
          "end": { "col": 19, "line": 39, "offset": 925 },
          "file": ".github/workflows/nightly.yml",
          "start": { "col": 16, "line": 39, "offset": 922 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 19, "line": 39, "offset": 925 },
            "path": ".github/workflows/nightly.yml",
            "start": { "col": 16, "line": 39, "offset": 922 }
          }
        ]
      ]
    },
    {
      "code": 2,
      "level": "warn",
      "message": "Timeout when running javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal on tests/perf/three.js:\n ",
      "path": "tests/perf/three.js",
      "rule_id": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
      "type": "Timeout"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/php/spatch/todo2/border.php:3:\n `=` was unexpected",
      "path": "tests/patterns/php/spatch/todo2/border.php",
      "spans": [
        {
          "end": { "col": 5, "line": 3, "offset": 1 },
          "file": "tests/patterns/php/spatch/todo2/border.php",
          "start": { "col": 4, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 10, "line": 3, "offset": 3 },
          "file": "tests/patterns/php/spatch/todo2/border.php",
          "start": { "col": 7, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 43, "line": 3, "offset": 25 },
          "file": "tests/patterns/php/spatch/todo2/border.php",
          "start": { "col": 18, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 7, "line": 5, "offset": 14 },
          "file": "tests/patterns/php/spatch/todo2/border.php",
          "start": { "col": 11, "line": 4, "offset": 0 }
        },
        {
          "end": { "col": 11, "line": 5, "offset": 3 },
          "file": "tests/patterns/php/spatch/todo2/border.php",
          "start": { "col": 8, "line": 5, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 5, "line": 3, "offset": 1 },
            "path": "tests/patterns/php/spatch/todo2/border.php",
            "start": { "col": 4, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 10, "line": 3, "offset": 3 },
            "path": "tests/patterns/php/spatch/todo2/border.php",
            "start": { "col": 7, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 43, "line": 3, "offset": 25 },
            "path": "tests/patterns/php/spatch/todo2/border.php",
            "start": { "col": 18, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 7, "line": 5, "offset": 14 },
            "path": "tests/patterns/php/spatch/todo2/border.php",
            "start": { "col": 11, "line": 4, "offset": 0 }
          },
          {
            "end": { "col": 11, "line": 5, "offset": 3 },
            "path": "tests/patterns/php/spatch/todo2/border.php",
            "start": { "col": 8, "line": 5, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/osemgrep/cli_publish/Publish_subcommand.mli:1:\n `*` was unexpected",
      "path": "src/osemgrep/cli_publish/Publish_subcommand.mli",
      "spans": [
        {
          "end": { "col": 3, "line": 1, "offset": 1 },
          "file": "src/osemgrep/cli_publish/Publish_subcommand.mli",
          "start": { "col": 2, "line": 1, "offset": 0 }
        },
        {
          "end": { "col": 10, "line": 4, "offset": 6 },
          "file": "src/osemgrep/cli_publish/Publish_subcommand.mli",
          "start": { "col": 4, "line": 4, "offset": 0 }
        },
        {
          "end": { "col": 41, "line": 4, "offset": 3 },
          "file": "src/osemgrep/cli_publish/Publish_subcommand.mli",
          "start": { "col": 38, "line": 4, "offset": 0 }
        },
        {
          "end": { "col": 2, "line": 7, "offset": 3 },
          "file": "src/osemgrep/cli_publish/Publish_subcommand.mli",
          "start": { "col": 74, "line": 6, "offset": 0 }
        },
        {
          "end": { "col": 13, "line": 9, "offset": 3 },
          "file": "src/osemgrep/cli_publish/Publish_subcommand.mli",
          "start": { "col": 10, "line": 9, "offset": 0 }
        },
        {
          "end": { "col": 43, "line": 9, "offset": 2 },
          "file": "src/osemgrep/cli_publish/Publish_subcommand.mli",
          "start": { "col": 41, "line": 9, "offset": 0 }
        },
        {
          "end": { "col": 59, "line": 9, "offset": 1 },
          "file": "src/osemgrep/cli_publish/Publish_subcommand.mli",
          "start": { "col": 58, "line": 9, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 3, "line": 1, "offset": 1 },
            "path": "src/osemgrep/cli_publish/Publish_subcommand.mli",
            "start": { "col": 2, "line": 1, "offset": 0 }
          },
          {
            "end": { "col": 10, "line": 4, "offset": 6 },
            "path": "src/osemgrep/cli_publish/Publish_subcommand.mli",
            "start": { "col": 4, "line": 4, "offset": 0 }
          },
          {
            "end": { "col": 41, "line": 4, "offset": 3 },
            "path": "src/osemgrep/cli_publish/Publish_subcommand.mli",
            "start": { "col": 38, "line": 4, "offset": 0 }
          },
          {
            "end": { "col": 2, "line": 7, "offset": 3 },
            "path": "src/osemgrep/cli_publish/Publish_subcommand.mli",
            "start": { "col": 74, "line": 6, "offset": 0 }
          },
          {
            "end": { "col": 13, "line": 9, "offset": 3 },
            "path": "src/osemgrep/cli_publish/Publish_subcommand.mli",
            "start": { "col": 10, "line": 9, "offset": 0 }
          },
          {
            "end": { "col": 43, "line": 9, "offset": 2 },
            "path": "src/osemgrep/cli_publish/Publish_subcommand.mli",
            "start": { "col": 41, "line": 9, "offset": 0 }
          },
          {
            "end": { "col": 59, "line": 9, "offset": 1 },
            "path": "src/osemgrep/cli_publish/Publish_subcommand.mli",
            "start": { "col": 58, "line": 9, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 2,
      "level": "warn",
      "message": "Other syntax error at line tests/errors/bad_indentation.yaml:6:\n (approximate error location; error nearby after) error calling parser: found a tab character where an indentation space is expected character 0 position 0 returned: 0",
      "path": "tests/errors/bad_indentation.yaml",
      "type": "Other syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/validate-release.yml:30:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/validate-release.yml",
      "spans": [
        {
          "end": { "col": 54, "line": 30, "offset": 695 },
          "file": ".github/workflows/validate-release.yml",
          "start": { "col": 51, "line": 30, "offset": 692 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 54, "line": 30, "offset": 695 },
            "path": ".github/workflows/validate-release.yml",
            "start": { "col": 51, "line": 30, "offset": 692 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line libs/commons/Int64_.mli:1:\n `include` was unexpected",
      "path": "libs/commons/Int64_.mli",
      "spans": [
        {
          "end": { "col": 8, "line": 1, "offset": 7 },
          "file": "libs/commons/Int64_.mli",
          "start": { "col": 1, "line": 1, "offset": 0 }
        },
        {
          "end": { "col": 23, "line": 1, "offset": 2 },
          "file": "libs/commons/Int64_.mli",
          "start": { "col": 21, "line": 1, "offset": 0 }
        },
        {
          "end": { "col": 31, "line": 25, "offset": 771 },
          "file": "libs/commons/Int64_.mli",
          "start": { "col": 6, "line": 3, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 8, "line": 1, "offset": 7 },
            "path": "libs/commons/Int64_.mli",
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          {
            "end": { "col": 23, "line": 1, "offset": 2 },
            "path": "libs/commons/Int64_.mli",
            "start": { "col": 21, "line": 1, "offset": 0 }
          },
          {
            "end": { "col": 31, "line": 25, "offset": 771 },
            "path": "libs/commons/Int64_.mli",
            "start": { "col": 6, "line": 3, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/core_scan/Pre_post_core_scan.mli:19:\n `val hook_processor : (` was unexpected",
      "path": "src/core_scan/Pre_post_core_scan.mli",
      "spans": [
        {
          "end": { "col": 23, "line": 19, "offset": 22 },
          "file": "src/core_scan/Pre_post_core_scan.mli",
          "start": { "col": 1, "line": 19, "offset": 0 }
        },
        {
          "end": { "col": 19, "line": 25, "offset": 191 },
          "file": "src/core_scan/Pre_post_core_scan.mli",
          "start": { "col": 39, "line": 19, "offset": 0 }
        },
        {
          "end": { "col": 29, "line": 25, "offset": 6 },
          "file": "src/core_scan/Pre_post_core_scan.mli",
          "start": { "col": 23, "line": 25, "offset": 0 }
        },
        {
          "end": { "col": 5, "line": 38, "offset": 6 },
          "file": "src/core_scan/Pre_post_core_scan.mli",
          "start": { "col": 38, "line": 37, "offset": 0 }
        },
        {
          "end": { "col": 29, "line": 38, "offset": 1 },
          "file": "src/core_scan/Pre_post_core_scan.mli",
          "start": { "col": 28, "line": 38, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 23, "line": 19, "offset": 22 },
            "path": "src/core_scan/Pre_post_core_scan.mli",
            "start": { "col": 1, "line": 19, "offset": 0 }
          },
          {
            "end": { "col": 19, "line": 25, "offset": 191 },
            "path": "src/core_scan/Pre_post_core_scan.mli",
            "start": { "col": 39, "line": 19, "offset": 0 }
          },
          {
            "end": { "col": 29, "line": 25, "offset": 6 },
            "path": "src/core_scan/Pre_post_core_scan.mli",
            "start": { "col": 23, "line": 25, "offset": 0 }
          },
          {
            "end": { "col": 5, "line": 38, "offset": 6 },
            "path": "src/core_scan/Pre_post_core_scan.mli",
            "start": { "col": 38, "line": 37, "offset": 0 }
          },
          {
            "end": { "col": 29, "line": 38, "offset": 1 },
            "path": "src/core_scan/Pre_post_core_scan.mli",
            "start": { "col": 28, "line": 38, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line libs/networking/http_helpers/http_helpers.mli:1:\n `:` was unexpected",
      "path": "libs/networking/http_helpers/http_helpers.mli",
      "spans": [
        {
          "end": { "col": 17, "line": 1, "offset": 1 },
          "file": "libs/networking/http_helpers/http_helpers.mli",
          "start": { "col": 16, "line": 1, "offset": 0 }
        },
        {
          "end": { "col": 21, "line": 7, "offset": 1 },
          "file": "libs/networking/http_helpers/http_helpers.mli",
          "start": { "col": 20, "line": 7, "offset": 0 }
        },
        {
          "end": { "col": 53, "line": 7, "offset": 1 },
          "file": "libs/networking/http_helpers/http_helpers.mli",
          "start": { "col": 52, "line": 7, "offset": 0 }
        },
        {
          "end": { "col": 22, "line": 12, "offset": 1 },
          "file": "libs/networking/http_helpers/http_helpers.mli",
          "start": { "col": 21, "line": 12, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 17, "line": 1, "offset": 1 },
            "path": "libs/networking/http_helpers/http_helpers.mli",
            "start": { "col": 16, "line": 1, "offset": 0 }
          },
          {
            "end": { "col": 21, "line": 7, "offset": 1 },
            "path": "libs/networking/http_helpers/http_helpers.mli",
            "start": { "col": 20, "line": 7, "offset": 0 }
          },
          {
            "end": { "col": 53, "line": 7, "offset": 1 },
            "path": "libs/networking/http_helpers/http_helpers.mli",
            "start": { "col": 52, "line": 7, "offset": 0 }
          },
          {
            "end": { "col": 22, "line": 12, "offset": 1 },
            "path": "libs/networking/http_helpers/http_helpers.mli",
            "start": { "col": 21, "line": 12, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/build-test-docker.yaml:113:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/build-test-docker.yaml",
      "spans": [
        {
          "end": { "col": 52, "line": 113, "offset": 4001 },
          "file": ".github/workflows/build-test-docker.yaml",
          "start": { "col": 49, "line": 113, "offset": 3998 }
        },
        {
          "end": { "col": 99, "line": 113, "offset": 4001 },
          "file": ".github/workflows/build-test-docker.yaml",
          "start": { "col": 96, "line": 113, "offset": 3998 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 52, "line": 113, "offset": 4001 },
            "path": ".github/workflows/build-test-docker.yaml",
            "start": { "col": 49, "line": 113, "offset": 3998 }
          },
          {
            "end": { "col": 99, "line": 113, "offset": 4001 },
            "path": ".github/workflows/build-test-docker.yaml",
            "start": { "col": 96, "line": 113, "offset": 3998 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/push-docker.yaml:50:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/push-docker.yaml",
      "spans": [
        {
          "end": { "col": 36, "line": 50, "offset": 1440 },
          "file": ".github/workflows/push-docker.yaml",
          "start": { "col": 33, "line": 50, "offset": 1437 }
        },
        {
          "end": { "col": 61, "line": 52, "offset": 1459 },
          "file": ".github/workflows/push-docker.yaml",
          "start": { "col": 39, "line": 52, "offset": 1437 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 36, "line": 50, "offset": 1440 },
            "path": ".github/workflows/push-docker.yaml",
            "start": { "col": 33, "line": 50, "offset": 1437 }
          },
          {
            "end": { "col": 61, "line": 52, "offset": 1459 },
            "path": ".github/workflows/push-docker.yaml",
            "start": { "col": 39, "line": 52, "offset": 1437 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/push-docker.yaml:97:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/push-docker.yaml",
      "spans": [
        {
          "end": { "col": 28, "line": 97, "offset": 3532 },
          "file": ".github/workflows/push-docker.yaml",
          "start": { "col": 25, "line": 97, "offset": 3529 }
        },
        {
          "end": { "col": 45, "line": 98, "offset": 3532 },
          "file": ".github/workflows/push-docker.yaml",
          "start": { "col": 42, "line": 98, "offset": 3529 }
        },
        {
          "end": { "col": 85, "line": 105, "offset": 3532 },
          "file": ".github/workflows/push-docker.yaml",
          "start": { "col": 82, "line": 105, "offset": 3529 }
        },
        {
          "end": { "col": 38, "line": 110, "offset": 3553 },
          "file": ".github/workflows/push-docker.yaml",
          "start": { "col": 14, "line": 110, "offset": 3529 }
        },
        {
          "end": { "col": 79, "line": 111, "offset": 3532 },
          "file": ".github/workflows/push-docker.yaml",
          "start": { "col": 76, "line": 111, "offset": 3529 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 28, "line": 97, "offset": 3532 },
            "path": ".github/workflows/push-docker.yaml",
            "start": { "col": 25, "line": 97, "offset": 3529 }
          },
          {
            "end": { "col": 45, "line": 98, "offset": 3532 },
            "path": ".github/workflows/push-docker.yaml",
            "start": { "col": 42, "line": 98, "offset": 3529 }
          },
          {
            "end": { "col": 85, "line": 105, "offset": 3532 },
            "path": ".github/workflows/push-docker.yaml",
            "start": { "col": 82, "line": 105, "offset": 3529 }
          },
          {
            "end": { "col": 38, "line": 110, "offset": 3553 },
            "path": ".github/workflows/push-docker.yaml",
            "start": { "col": 14, "line": 110, "offset": 3529 }
          },
          {
            "end": { "col": 79, "line": 111, "offset": 3532 },
            "path": ".github/workflows/push-docker.yaml",
            "start": { "col": 76, "line": 111, "offset": 3529 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/open-bump-pr.yml:77:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.jwt.outputs.jwt` was unexpected",
      "path": ".github/workflows/open-bump-pr.yml",
      "spans": [
        {
          "end": { "col": 52, "line": 77, "offset": 2325 },
          "file": ".github/workflows/open-bump-pr.yml",
          "start": { "col": 29, "line": 77, "offset": 2302 }
        },
        {
          "end": { "col": 85, "line": 79, "offset": 2342 },
          "file": ".github/workflows/open-bump-pr.yml",
          "start": { "col": 45, "line": 79, "offset": 2302 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 52, "line": 77, "offset": 2325 },
            "path": ".github/workflows/open-bump-pr.yml",
            "start": { "col": 29, "line": 77, "offset": 2302 }
          },
          {
            "end": { "col": 85, "line": 79, "offset": 2342 },
            "path": ".github/workflows/open-bump-pr.yml",
            "start": { "col": 45, "line": 79, "offset": 2302 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/open-bump-pr.yml:101:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ inputs.new_branch_name` was unexpected",
      "path": ".github/workflows/open-bump-pr.yml",
      "spans": [
        {
          "end": { "col": 57, "line": 101, "offset": 3497 },
          "file": ".github/workflows/open-bump-pr.yml",
          "start": { "col": 33, "line": 101, "offset": 3473 }
        },
        {
          "end": { "col": 36, "line": 102, "offset": 3497 },
          "file": ".github/workflows/open-bump-pr.yml",
          "start": { "col": 12, "line": 102, "offset": 3473 }
        },
        {
          "end": { "col": 45, "line": 103, "offset": 3489 },
          "file": ".github/workflows/open-bump-pr.yml",
          "start": { "col": 29, "line": 103, "offset": 3473 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 57, "line": 101, "offset": 3497 },
            "path": ".github/workflows/open-bump-pr.yml",
            "start": { "col": 33, "line": 101, "offset": 3473 }
          },
          {
            "end": { "col": 36, "line": 102, "offset": 3497 },
            "path": ".github/workflows/open-bump-pr.yml",
            "start": { "col": 12, "line": 102, "offset": 3473 }
          },
          {
            "end": { "col": 45, "line": 103, "offset": 3489 },
            "path": ".github/workflows/open-bump-pr.yml",
            "start": { "col": 29, "line": 103, "offset": 3473 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/open-bump-pr.yml:110:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"${{ inputs.bump_script_path }}\" \"${{ inputs.version }}\"\n` was unexpected",
      "path": ".github/workflows/open-bump-pr.yml",
      "spans": [
        {
          "end": { "col": 72, "line": 110, "offset": 3905 },
          "file": ".github/workflows/open-bump-pr.yml",
          "start": { "col": 15, "line": 110, "offset": 3848 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 72, "line": 110, "offset": 3905 },
            "path": ".github/workflows/open-bump-pr.yml",
            "start": { "col": 15, "line": 110, "offset": 3848 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/open-bump-pr.yml:114:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/open-bump-pr.yml",
      "spans": [
        {
          "end": { "col": 39, "line": 114, "offset": 3999 },
          "file": ".github/workflows/open-bump-pr.yml",
          "start": { "col": 36, "line": 114, "offset": 3996 }
        },
        {
          "end": { "col": 26, "line": 115, "offset": 3999 },
          "file": ".github/workflows/open-bump-pr.yml",
          "start": { "col": 23, "line": 115, "offset": 3996 }
        },
        {
          "end": { "col": 57, "line": 117, "offset": 4012 },
          "file": ".github/workflows/open-bump-pr.yml",
          "start": { "col": 41, "line": 117, "offset": 3996 }
        },
        {
          "end": { "col": 35, "line": 118, "offset": 3999 },
          "file": ".github/workflows/open-bump-pr.yml",
          "start": { "col": 32, "line": 118, "offset": 3996 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 39, "line": 114, "offset": 3999 },
            "path": ".github/workflows/open-bump-pr.yml",
            "start": { "col": 36, "line": 114, "offset": 3996 }
          },
          {
            "end": { "col": 26, "line": 115, "offset": 3999 },
            "path": ".github/workflows/open-bump-pr.yml",
            "start": { "col": 23, "line": 115, "offset": 3996 }
          },
          {
            "end": { "col": 57, "line": 117, "offset": 4012 },
            "path": ".github/workflows/open-bump-pr.yml",
            "start": { "col": 41, "line": 117, "offset": 3996 }
          },
          {
            "end": { "col": 35, "line": 118, "offset": 3999 },
            "path": ".github/workflows/open-bump-pr.yml",
            "start": { "col": 32, "line": 118, "offset": 3996 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/open-bump-pr.yml:137:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ inputs.version` was unexpected",
      "path": ".github/workflows/open-bump-pr.yml",
      "spans": [
        {
          "end": { "col": 92, "line": 137, "offset": 4637 },
          "file": ".github/workflows/open-bump-pr.yml",
          "start": { "col": 76, "line": 137, "offset": 4621 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 92, "line": 137, "offset": 4637 },
            "path": ".github/workflows/open-bump-pr.yml",
            "start": { "col": 76, "line": 137, "offset": 4621 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line libs/networking/http_mock_client/Http_mock_client.mli:51:\n `:\n  ?` was unexpected",
      "path": "libs/networking/http_mock_client/Http_mock_client.mli",
      "spans": [
        {
          "end": { "col": 4, "line": 52, "offset": 5 },
          "file": "libs/networking/http_mock_client/Http_mock_client.mli",
          "start": { "col": 20, "line": 51, "offset": 0 }
        },
        {
          "end": { "col": 11, "line": 52, "offset": 1 },
          "file": "libs/networking/http_mock_client/Http_mock_client.mli",
          "start": { "col": 10, "line": 52, "offset": 0 }
        },
        {
          "end": { "col": 21, "line": 58, "offset": 3 },
          "file": "libs/networking/http_mock_client/Http_mock_client.mli",
          "start": { "col": 18, "line": 58, "offset": 0 }
        },
        {
          "end": { "col": 26, "line": 58, "offset": 1 },
          "file": "libs/networking/http_mock_client/Http_mock_client.mli",
          "start": { "col": 25, "line": 58, "offset": 0 }
        },
        {
          "end": { "col": 17, "line": 64, "offset": 1 },
          "file": "libs/networking/http_mock_client/Http_mock_client.mli",
          "start": { "col": 16, "line": 64, "offset": 0 }
        },
        {
          "end": { "col": 19, "line": 70, "offset": 1 },
          "file": "libs/networking/http_mock_client/Http_mock_client.mli",
          "start": { "col": 18, "line": 70, "offset": 0 }
        },
        {
          "end": { "col": 19, "line": 76, "offset": 1 },
          "file": "libs/networking/http_mock_client/Http_mock_client.mli",
          "start": { "col": 18, "line": 76, "offset": 0 }
        },
        {
          "end": { "col": 20, "line": 82, "offset": 1 },
          "file": "libs/networking/http_mock_client/Http_mock_client.mli",
          "start": { "col": 19, "line": 82, "offset": 0 }
        },
        {
          "end": { "col": 17, "line": 89, "offset": 1 },
          "file": "libs/networking/http_mock_client/Http_mock_client.mli",
          "start": { "col": 16, "line": 89, "offset": 0 }
        },
        {
          "end": { "col": 26, "line": 95, "offset": 1 },
          "file": "libs/networking/http_mock_client/Http_mock_client.mli",
          "start": { "col": 25, "line": 95, "offset": 0 }
        },
        {
          "end": { "col": 23, "line": 103, "offset": 1 },
          "file": "libs/networking/http_mock_client/Http_mock_client.mli",
          "start": { "col": 22, "line": 103, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 4, "line": 52, "offset": 5 },
            "path": "libs/networking/http_mock_client/Http_mock_client.mli",
            "start": { "col": 20, "line": 51, "offset": 0 }
          },
          {
            "end": { "col": 11, "line": 52, "offset": 1 },
            "path": "libs/networking/http_mock_client/Http_mock_client.mli",
            "start": { "col": 10, "line": 52, "offset": 0 }
          },
          {
            "end": { "col": 21, "line": 58, "offset": 3 },
            "path": "libs/networking/http_mock_client/Http_mock_client.mli",
            "start": { "col": 18, "line": 58, "offset": 0 }
          },
          {
            "end": { "col": 26, "line": 58, "offset": 1 },
            "path": "libs/networking/http_mock_client/Http_mock_client.mli",
            "start": { "col": 25, "line": 58, "offset": 0 }
          },
          {
            "end": { "col": 17, "line": 64, "offset": 1 },
            "path": "libs/networking/http_mock_client/Http_mock_client.mli",
            "start": { "col": 16, "line": 64, "offset": 0 }
          },
          {
            "end": { "col": 19, "line": 70, "offset": 1 },
            "path": "libs/networking/http_mock_client/Http_mock_client.mli",
            "start": { "col": 18, "line": 70, "offset": 0 }
          },
          {
            "end": { "col": 19, "line": 76, "offset": 1 },
            "path": "libs/networking/http_mock_client/Http_mock_client.mli",
            "start": { "col": 18, "line": 76, "offset": 0 }
          },
          {
            "end": { "col": 20, "line": 82, "offset": 1 },
            "path": "libs/networking/http_mock_client/Http_mock_client.mli",
            "start": { "col": 19, "line": 82, "offset": 0 }
          },
          {
            "end": { "col": 17, "line": 89, "offset": 1 },
            "path": "libs/networking/http_mock_client/Http_mock_client.mli",
            "start": { "col": 16, "line": 89, "offset": 0 }
          },
          {
            "end": { "col": 26, "line": 95, "offset": 1 },
            "path": "libs/networking/http_mock_client/Http_mock_client.mli",
            "start": { "col": 25, "line": 95, "offset": 0 }
          },
          {
            "end": { "col": 23, "line": 103, "offset": 1 },
            "path": "libs/networking/http_mock_client/Http_mock_client.mli",
            "start": { "col": 22, "line": 103, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line js/libyaml/parser.c:1248:\n `*` was unexpected",
      "path": "js/libyaml/parser.c",
      "spans": [
        {
          "end": { "col": 66, "line": 1248, "offset": 1 },
          "file": "js/libyaml/parser.c",
          "start": { "col": 65, "line": 1248, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 66, "line": 1248, "offset": 1 },
            "path": "js/libyaml/parser.c",
            "start": { "col": 65, "line": 1248, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line js/libyaml/scanner.c:540:\n `:` was unexpected",
      "path": "js/libyaml/scanner.c",
      "spans": [
        {
          "end": { "col": 29, "line": 540, "offset": 1 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 28, "line": 540, "offset": 0 }
        },
        {
          "end": { "col": 31, "line": 575, "offset": 151 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 29, "line": 567, "offset": 0 }
        },
        {
          "end": { "col": 53, "line": 575, "offset": 14 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 39, "line": 575, "offset": 0 }
        },
        {
          "end": { "col": 44, "line": 582, "offset": 85 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 60, "line": 575, "offset": 0 }
        },
        {
          "end": { "col": 64, "line": 582, "offset": 12 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 52, "line": 582, "offset": 0 }
        },
        {
          "end": { "col": 45, "line": 583, "offset": 46 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 73, "line": 582, "offset": 0 }
        },
        {
          "end": { "col": 44, "line": 590, "offset": 98 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 54, "line": 583, "offset": 0 }
        },
        {
          "end": { "col": 43, "line": 593, "offset": 57 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 52, "line": 590, "offset": 0 }
        },
        {
          "end": { "col": 44, "line": 600, "offset": 92 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 51, "line": 593, "offset": 0 }
        },
        {
          "end": { "col": 42, "line": 603, "offset": 56 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 52, "line": 600, "offset": 0 }
        },
        {
          "end": { "col": 44, "line": 606, "offset": 58 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 50, "line": 603, "offset": 0 }
        },
        {
          "end": { "col": 46, "line": 609, "offset": 60 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 52, "line": 606, "offset": 0 }
        },
        {
          "end": { "col": 46, "line": 612, "offset": 60 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 54, "line": 609, "offset": 0 }
        },
        {
          "end": { "col": 38, "line": 619, "offset": 86 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 54, "line": 612, "offset": 0 }
        },
        {
          "end": { "col": 40, "line": 623, "offset": 140 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 46, "line": 619, "offset": 0 }
        },
        {
          "end": { "col": 45, "line": 630, "offset": 104 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 48, "line": 623, "offset": 0 }
        },
        {
          "end": { "col": 43, "line": 633, "offset": 57 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 53, "line": 630, "offset": 0 }
        },
        {
          "end": { "col": 42, "line": 636, "offset": 56 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 51, "line": 633, "offset": 0 }
        },
        {
          "end": { "col": 51, "line": 639, "offset": 65 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 50, "line": 636, "offset": 0 }
        },
        {
          "end": { "col": 54, "line": 643, "offset": 100 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 59, "line": 639, "offset": 0 }
        },
        {
          "end": { "col": 52, "line": 647, "offset": 98 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 62, "line": 643, "offset": 0 }
        },
        {
          "end": { "col": 43, "line": 651, "offset": 89 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 60, "line": 647, "offset": 0 }
        },
        {
          "end": { "col": 44, "line": 654, "offset": 58 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 51, "line": 651, "offset": 0 }
        },
        {
          "end": { "col": 36, "line": 657, "offset": 50 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 52, "line": 654, "offset": 0 }
        },
        {
          "end": { "col": 38, "line": 660, "offset": 52 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 44, "line": 657, "offset": 0 }
        },
        {
          "end": { "col": 39, "line": 663, "offset": 53 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 46, "line": 660, "offset": 0 }
        },
        {
          "end": { "col": 36, "line": 666, "offset": 74 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 47, "line": 663, "offset": 0 }
        },
        {
          "end": { "col": 45, "line": 669, "offset": 59 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 44, "line": 666, "offset": 0 }
        },
        {
          "end": { "col": 44, "line": 672, "offset": 71 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 53, "line": 669, "offset": 0 }
        },
        {
          "end": { "col": 45, "line": 675, "offset": 71 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 52, "line": 672, "offset": 0 }
        },
        {
          "end": { "col": 45, "line": 682, "offset": 86 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 53, "line": 675, "offset": 0 }
        },
        {
          "end": { "col": 41, "line": 685, "offset": 55 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 53, "line": 682, "offset": 0 }
        },
        {
          "end": { "col": 63, "line": 685, "offset": 14 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 49, "line": 685, "offset": 0 }
        },
        {
          "end": { "col": 46, "line": 688, "offset": 60 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 70, "line": 685, "offset": 0 }
        },
        {
          "end": { "col": 44, "line": 689, "offset": 45 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 54, "line": 688, "offset": 0 }
        },
        {
          "end": { "col": 55, "line": 692, "offset": 69 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 51, "line": 689, "offset": 0 }
        },
        {
          "end": { "col": 36, "line": 693, "offset": 37 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 63, "line": 692, "offset": 0 }
        },
        {
          "end": { "col": 48, "line": 693, "offset": 5 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 43, "line": 693, "offset": 0 }
        },
        {
          "end": { "col": 56, "line": 696, "offset": 70 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 55, "line": 693, "offset": 0 }
        },
        {
          "end": { "col": 36, "line": 697, "offset": 37 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 64, "line": 696, "offset": 0 }
        },
        {
          "end": { "col": 51, "line": 700, "offset": 65 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 44, "line": 697, "offset": 0 }
        },
        {
          "end": { "col": 38, "line": 701, "offset": 39 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 59, "line": 700, "offset": 0 }
        },
        {
          "end": { "col": 60, "line": 701, "offset": 13 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 47, "line": 701, "offset": 0 }
        },
        {
          "end": { "col": 38, "line": 704, "offset": 52 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 69, "line": 701, "offset": 0 }
        },
        {
          "end": { "col": 60, "line": 704, "offset": 14 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 46, "line": 704, "offset": 0 }
        },
        {
          "end": { "col": 35, "line": 708, "offset": 81 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 67, "line": 704, "offset": 0 }
        },
        {
          "end": { "col": 57, "line": 708, "offset": 14 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 43, "line": 708, "offset": 0 }
        },
        {
          "end": { "col": 42, "line": 711, "offset": 56 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 64, "line": 708, "offset": 0 }
        },
        {
          "end": { "col": 44, "line": 712, "offset": 60 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 50, "line": 711, "offset": 0 }
        },
        {
          "end": { "col": 39, "line": 715, "offset": 53 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 53, "line": 712, "offset": 0 }
        },
        {
          "end": { "col": 20, "line": 716, "offset": 50 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 47, "line": 715, "offset": 0 }
        },
        {
          "end": { "col": 63, "line": 716, "offset": 37 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 26, "line": 716, "offset": 0 }
        },
        {
          "end": { "col": 43, "line": 719, "offset": 57 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 69, "line": 716, "offset": 0 }
        },
        {
          "end": { "col": 46, "line": 720, "offset": 62 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 51, "line": 719, "offset": 0 }
        },
        {
          "end": { "col": 44, "line": 723, "offset": 58 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 54, "line": 720, "offset": 0 }
        },
        {
          "end": { "col": 66, "line": 723, "offset": 14 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 52, "line": 723, "offset": 0 }
        },
        {
          "end": { "col": 51, "line": 727, "offset": 86 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 73, "line": 723, "offset": 0 }
        },
        {
          "end": { "col": 12, "line": 728, "offset": 13 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 59, "line": 727, "offset": 0 }
        },
        {
          "end": { "col": 35, "line": 728, "offset": 15 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 20, "line": 728, "offset": 0 }
        },
        {
          "end": { "col": 44, "line": 729, "offset": 45 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 43, "line": 728, "offset": 0 }
        },
        {
          "end": { "col": 43, "line": 732, "offset": 57 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 54, "line": 729, "offset": 0 }
        },
        {
          "end": { "col": 65, "line": 732, "offset": 14 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 51, "line": 732, "offset": 0 }
        },
        {
          "end": { "col": 44, "line": 736, "offset": 78 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 72, "line": 732, "offset": 0 }
        },
        {
          "end": { "col": 66, "line": 736, "offset": 14 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 52, "line": 736, "offset": 0 }
        },
        {
          "end": { "col": 31, "line": 743, "offset": 83 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 73, "line": 736, "offset": 0 }
        },
        {
          "end": { "col": 53, "line": 743, "offset": 14 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 39, "line": 743, "offset": 0 }
        },
        {
          "end": { "col": 7, "line": 754, "offset": 262 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 60, "line": 743, "offset": 0 }
        },
        {
          "end": { "col": 2, "line": 776, "offset": 1 },
          "file": "js/libyaml/scanner.c",
          "start": { "col": 1, "line": 776, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 29, "line": 540, "offset": 1 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 28, "line": 540, "offset": 0 }
          },
          {
            "end": { "col": 31, "line": 575, "offset": 151 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 29, "line": 567, "offset": 0 }
          },
          {
            "end": { "col": 53, "line": 575, "offset": 14 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 39, "line": 575, "offset": 0 }
          },
          {
            "end": { "col": 44, "line": 582, "offset": 85 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 60, "line": 575, "offset": 0 }
          },
          {
            "end": { "col": 64, "line": 582, "offset": 12 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 52, "line": 582, "offset": 0 }
          },
          {
            "end": { "col": 45, "line": 583, "offset": 46 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 73, "line": 582, "offset": 0 }
          },
          {
            "end": { "col": 44, "line": 590, "offset": 98 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 54, "line": 583, "offset": 0 }
          },
          {
            "end": { "col": 43, "line": 593, "offset": 57 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 52, "line": 590, "offset": 0 }
          },
          {
            "end": { "col": 44, "line": 600, "offset": 92 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 51, "line": 593, "offset": 0 }
          },
          {
            "end": { "col": 42, "line": 603, "offset": 56 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 52, "line": 600, "offset": 0 }
          },
          {
            "end": { "col": 44, "line": 606, "offset": 58 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 50, "line": 603, "offset": 0 }
          },
          {
            "end": { "col": 46, "line": 609, "offset": 60 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 52, "line": 606, "offset": 0 }
          },
          {
            "end": { "col": 46, "line": 612, "offset": 60 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 54, "line": 609, "offset": 0 }
          },
          {
            "end": { "col": 38, "line": 619, "offset": 86 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 54, "line": 612, "offset": 0 }
          },
          {
            "end": { "col": 40, "line": 623, "offset": 140 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 46, "line": 619, "offset": 0 }
          },
          {
            "end": { "col": 45, "line": 630, "offset": 104 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 48, "line": 623, "offset": 0 }
          },
          {
            "end": { "col": 43, "line": 633, "offset": 57 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 53, "line": 630, "offset": 0 }
          },
          {
            "end": { "col": 42, "line": 636, "offset": 56 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 51, "line": 633, "offset": 0 }
          },
          {
            "end": { "col": 51, "line": 639, "offset": 65 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 50, "line": 636, "offset": 0 }
          },
          {
            "end": { "col": 54, "line": 643, "offset": 100 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 59, "line": 639, "offset": 0 }
          },
          {
            "end": { "col": 52, "line": 647, "offset": 98 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 62, "line": 643, "offset": 0 }
          },
          {
            "end": { "col": 43, "line": 651, "offset": 89 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 60, "line": 647, "offset": 0 }
          },
          {
            "end": { "col": 44, "line": 654, "offset": 58 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 51, "line": 651, "offset": 0 }
          },
          {
            "end": { "col": 36, "line": 657, "offset": 50 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 52, "line": 654, "offset": 0 }
          },
          {
            "end": { "col": 38, "line": 660, "offset": 52 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 44, "line": 657, "offset": 0 }
          },
          {
            "end": { "col": 39, "line": 663, "offset": 53 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 46, "line": 660, "offset": 0 }
          },
          {
            "end": { "col": 36, "line": 666, "offset": 74 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 47, "line": 663, "offset": 0 }
          },
          {
            "end": { "col": 45, "line": 669, "offset": 59 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 44, "line": 666, "offset": 0 }
          },
          {
            "end": { "col": 44, "line": 672, "offset": 71 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 53, "line": 669, "offset": 0 }
          },
          {
            "end": { "col": 45, "line": 675, "offset": 71 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 52, "line": 672, "offset": 0 }
          },
          {
            "end": { "col": 45, "line": 682, "offset": 86 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 53, "line": 675, "offset": 0 }
          },
          {
            "end": { "col": 41, "line": 685, "offset": 55 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 53, "line": 682, "offset": 0 }
          },
          {
            "end": { "col": 63, "line": 685, "offset": 14 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 49, "line": 685, "offset": 0 }
          },
          {
            "end": { "col": 46, "line": 688, "offset": 60 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 70, "line": 685, "offset": 0 }
          },
          {
            "end": { "col": 44, "line": 689, "offset": 45 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 54, "line": 688, "offset": 0 }
          },
          {
            "end": { "col": 55, "line": 692, "offset": 69 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 51, "line": 689, "offset": 0 }
          },
          {
            "end": { "col": 36, "line": 693, "offset": 37 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 63, "line": 692, "offset": 0 }
          },
          {
            "end": { "col": 48, "line": 693, "offset": 5 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 43, "line": 693, "offset": 0 }
          },
          {
            "end": { "col": 56, "line": 696, "offset": 70 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 55, "line": 693, "offset": 0 }
          },
          {
            "end": { "col": 36, "line": 697, "offset": 37 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 64, "line": 696, "offset": 0 }
          },
          {
            "end": { "col": 51, "line": 700, "offset": 65 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 44, "line": 697, "offset": 0 }
          },
          {
            "end": { "col": 38, "line": 701, "offset": 39 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 59, "line": 700, "offset": 0 }
          },
          {
            "end": { "col": 60, "line": 701, "offset": 13 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 47, "line": 701, "offset": 0 }
          },
          {
            "end": { "col": 38, "line": 704, "offset": 52 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 69, "line": 701, "offset": 0 }
          },
          {
            "end": { "col": 60, "line": 704, "offset": 14 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 46, "line": 704, "offset": 0 }
          },
          {
            "end": { "col": 35, "line": 708, "offset": 81 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 67, "line": 704, "offset": 0 }
          },
          {
            "end": { "col": 57, "line": 708, "offset": 14 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 43, "line": 708, "offset": 0 }
          },
          {
            "end": { "col": 42, "line": 711, "offset": 56 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 64, "line": 708, "offset": 0 }
          },
          {
            "end": { "col": 44, "line": 712, "offset": 60 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 50, "line": 711, "offset": 0 }
          },
          {
            "end": { "col": 39, "line": 715, "offset": 53 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 53, "line": 712, "offset": 0 }
          },
          {
            "end": { "col": 20, "line": 716, "offset": 50 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 47, "line": 715, "offset": 0 }
          },
          {
            "end": { "col": 63, "line": 716, "offset": 37 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 26, "line": 716, "offset": 0 }
          },
          {
            "end": { "col": 43, "line": 719, "offset": 57 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 69, "line": 716, "offset": 0 }
          },
          {
            "end": { "col": 46, "line": 720, "offset": 62 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 51, "line": 719, "offset": 0 }
          },
          {
            "end": { "col": 44, "line": 723, "offset": 58 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 54, "line": 720, "offset": 0 }
          },
          {
            "end": { "col": 66, "line": 723, "offset": 14 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 52, "line": 723, "offset": 0 }
          },
          {
            "end": { "col": 51, "line": 727, "offset": 86 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 73, "line": 723, "offset": 0 }
          },
          {
            "end": { "col": 12, "line": 728, "offset": 13 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 59, "line": 727, "offset": 0 }
          },
          {
            "end": { "col": 35, "line": 728, "offset": 15 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 20, "line": 728, "offset": 0 }
          },
          {
            "end": { "col": 44, "line": 729, "offset": 45 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 43, "line": 728, "offset": 0 }
          },
          {
            "end": { "col": 43, "line": 732, "offset": 57 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 54, "line": 729, "offset": 0 }
          },
          {
            "end": { "col": 65, "line": 732, "offset": 14 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 51, "line": 732, "offset": 0 }
          },
          {
            "end": { "col": 44, "line": 736, "offset": 78 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 72, "line": 732, "offset": 0 }
          },
          {
            "end": { "col": 66, "line": 736, "offset": 14 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 52, "line": 736, "offset": 0 }
          },
          {
            "end": { "col": 31, "line": 743, "offset": 83 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 73, "line": 736, "offset": 0 }
          },
          {
            "end": { "col": 53, "line": 743, "offset": 14 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 39, "line": 743, "offset": 0 }
          },
          {
            "end": { "col": 7, "line": 754, "offset": 262 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 60, "line": 743, "offset": 0 }
          },
          {
            "end": { "col": 2, "line": 776, "offset": 1 },
            "path": "js/libyaml/scanner.c",
            "start": { "col": 1, "line": 776, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/parsing_errors/unbalanced_brace.py:4:\n `}` was unexpected",
      "path": "tests/parsing_errors/unbalanced_brace.py",
      "spans": [
        {
          "end": { "col": 2, "line": 4, "offset": 1 },
          "file": "tests/parsing_errors/unbalanced_brace.py",
          "start": { "col": 1, "line": 4, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 2, "line": 4, "offset": 1 },
            "path": "tests/parsing_errors/unbalanced_brace.py",
            "start": { "col": 1, "line": 4, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/php/spatch/xhp_metavar.php:3:\n `(` was unexpected",
      "path": "tests/patterns/php/spatch/xhp_metavar.php",
      "spans": [
        {
          "end": { "col": 5, "line": 3, "offset": 1 },
          "file": "tests/patterns/php/spatch/xhp_metavar.php",
          "start": { "col": 4, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 18, "line": 3, "offset": 12 },
          "file": "tests/patterns/php/spatch/xhp_metavar.php",
          "start": { "col": 6, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 26, "line": 3, "offset": 1 },
          "file": "tests/patterns/php/spatch/xhp_metavar.php",
          "start": { "col": 25, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 32, "line": 3, "offset": 1 },
          "file": "tests/patterns/php/spatch/xhp_metavar.php",
          "start": { "col": 31, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 35, "line": 3, "offset": 1 },
          "file": "tests/patterns/php/spatch/xhp_metavar.php",
          "start": { "col": 34, "line": 3, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 5, "line": 3, "offset": 1 },
            "path": "tests/patterns/php/spatch/xhp_metavar.php",
            "start": { "col": 4, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 18, "line": 3, "offset": 12 },
            "path": "tests/patterns/php/spatch/xhp_metavar.php",
            "start": { "col": 6, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 26, "line": 3, "offset": 1 },
            "path": "tests/patterns/php/spatch/xhp_metavar.php",
            "start": { "col": 25, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 32, "line": 3, "offset": 1 },
            "path": "tests/patterns/php/spatch/xhp_metavar.php",
            "start": { "col": 31, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 35, "line": 3, "offset": 1 },
            "path": "tests/patterns/php/spatch/xhp_metavar.php",
            "start": { "col": 34, "line": 3, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/php/sgrep/xhp_metavar2.php:3:\n `<x:frag>{:x:frag::foo()}</x:frag>` was unexpected",
      "path": "tests/patterns/php/sgrep/xhp_metavar2.php",
      "spans": [
        {
          "end": { "col": 41, "line": 3, "offset": 33 },
          "file": "tests/patterns/php/sgrep/xhp_metavar2.php",
          "start": { "col": 8, "line": 3, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 41, "line": 3, "offset": 33 },
            "path": "tests/patterns/php/sgrep/xhp_metavar2.php",
            "start": { "col": 8, "line": 3, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/php/sgrep/fbt.php:4:\n `=` was unexpected",
      "path": "tests/patterns/php/sgrep/fbt.php",
      "spans": [
        {
          "end": { "col": 6, "line": 4, "offset": 1 },
          "file": "tests/patterns/php/sgrep/fbt.php",
          "start": { "col": 5, "line": 4, "offset": 0 }
        },
        {
          "end": { "col": 14, "line": 4, "offset": 2 },
          "file": "tests/patterns/php/sgrep/fbt.php",
          "start": { "col": 12, "line": 4, "offset": 0 }
        },
        {
          "end": { "col": 22, "line": 4, "offset": 1 },
          "file": "tests/patterns/php/sgrep/fbt.php",
          "start": { "col": 21, "line": 4, "offset": 0 }
        },
        {
          "end": { "col": 28, "line": 4, "offset": 1 },
          "file": "tests/patterns/php/sgrep/fbt.php",
          "start": { "col": 27, "line": 4, "offset": 0 }
        },
        {
          "end": { "col": 6, "line": 5, "offset": 1 },
          "file": "tests/patterns/php/sgrep/fbt.php",
          "start": { "col": 5, "line": 5, "offset": 0 }
        },
        {
          "end": { "col": 11, "line": 5, "offset": 1 },
          "file": "tests/patterns/php/sgrep/fbt.php",
          "start": { "col": 10, "line": 5, "offset": 0 }
        },
        {
          "end": { "col": 22, "line": 5, "offset": 7 },
          "file": "tests/patterns/php/sgrep/fbt.php",
          "start": { "col": 15, "line": 5, "offset": 0 }
        },
        {
          "end": { "col": 27, "line": 5, "offset": 1 },
          "file": "tests/patterns/php/sgrep/fbt.php",
          "start": { "col": 26, "line": 5, "offset": 0 }
        },
        {
          "end": { "col": 33, "line": 5, "offset": 2 },
          "file": "tests/patterns/php/sgrep/fbt.php",
          "start": { "col": 31, "line": 5, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 6, "line": 4, "offset": 1 },
            "path": "tests/patterns/php/sgrep/fbt.php",
            "start": { "col": 5, "line": 4, "offset": 0 }
          },
          {
            "end": { "col": 14, "line": 4, "offset": 2 },
            "path": "tests/patterns/php/sgrep/fbt.php",
            "start": { "col": 12, "line": 4, "offset": 0 }
          },
          {
            "end": { "col": 22, "line": 4, "offset": 1 },
            "path": "tests/patterns/php/sgrep/fbt.php",
            "start": { "col": 21, "line": 4, "offset": 0 }
          },
          {
            "end": { "col": 28, "line": 4, "offset": 1 },
            "path": "tests/patterns/php/sgrep/fbt.php",
            "start": { "col": 27, "line": 4, "offset": 0 }
          },
          {
            "end": { "col": 6, "line": 5, "offset": 1 },
            "path": "tests/patterns/php/sgrep/fbt.php",
            "start": { "col": 5, "line": 5, "offset": 0 }
          },
          {
            "end": { "col": 11, "line": 5, "offset": 1 },
            "path": "tests/patterns/php/sgrep/fbt.php",
            "start": { "col": 10, "line": 5, "offset": 0 }
          },
          {
            "end": { "col": 22, "line": 5, "offset": 7 },
            "path": "tests/patterns/php/sgrep/fbt.php",
            "start": { "col": 15, "line": 5, "offset": 0 }
          },
          {
            "end": { "col": 27, "line": 5, "offset": 1 },
            "path": "tests/patterns/php/sgrep/fbt.php",
            "start": { "col": 26, "line": 5, "offset": 0 }
          },
          {
            "end": { "col": 33, "line": 5, "offset": 2 },
            "path": "tests/patterns/php/sgrep/fbt.php",
            "start": { "col": 31, "line": 5, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/php/spatch/todo2/border_var2.php:3:\n `=` was unexpected",
      "path": "tests/patterns/php/spatch/todo2/border_var2.php",
      "spans": [
        {
          "end": { "col": 5, "line": 3, "offset": 1 },
          "file": "tests/patterns/php/spatch/todo2/border_var2.php",
          "start": { "col": 4, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 10, "line": 3, "offset": 3 },
          "file": "tests/patterns/php/spatch/todo2/border_var2.php",
          "start": { "col": 7, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 43, "line": 3, "offset": 18 },
          "file": "tests/patterns/php/spatch/todo2/border_var2.php",
          "start": { "col": 25, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 7, "line": 5, "offset": 14 },
          "file": "tests/patterns/php/spatch/todo2/border_var2.php",
          "start": { "col": 11, "line": 4, "offset": 0 }
        },
        {
          "end": { "col": 11, "line": 5, "offset": 3 },
          "file": "tests/patterns/php/spatch/todo2/border_var2.php",
          "start": { "col": 8, "line": 5, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 5, "line": 3, "offset": 1 },
            "path": "tests/patterns/php/spatch/todo2/border_var2.php",
            "start": { "col": 4, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 10, "line": 3, "offset": 3 },
            "path": "tests/patterns/php/spatch/todo2/border_var2.php",
            "start": { "col": 7, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 43, "line": 3, "offset": 18 },
            "path": "tests/patterns/php/spatch/todo2/border_var2.php",
            "start": { "col": 25, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 7, "line": 5, "offset": 14 },
            "path": "tests/patterns/php/spatch/todo2/border_var2.php",
            "start": { "col": 11, "line": 4, "offset": 0 }
          },
          {
            "end": { "col": 11, "line": 5, "offset": 3 },
            "path": "tests/patterns/php/spatch/todo2/border_var2.php",
            "start": { "col": 8, "line": 5, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/php/spatch/xhp_nested.php:3:\n `=` was unexpected",
      "path": "tests/patterns/php/spatch/xhp_nested.php",
      "spans": [
        {
          "end": { "col": 5, "line": 3, "offset": 1 },
          "file": "tests/patterns/php/spatch/xhp_nested.php",
          "start": { "col": 4, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 6, "line": 5, "offset": 1 },
          "file": "tests/patterns/php/spatch/xhp_nested.php",
          "start": { "col": 5, "line": 5, "offset": 0 }
        },
        {
          "end": { "col": 12, "line": 5, "offset": 2 },
          "file": "tests/patterns/php/spatch/xhp_nested.php",
          "start": { "col": 10, "line": 5, "offset": 0 }
        },
        {
          "end": { "col": 4, "line": 7, "offset": 6 },
          "file": "tests/patterns/php/spatch/xhp_nested.php",
          "start": { "col": 13, "line": 6, "offset": 0 }
        },
        {
          "end": { "col": 10, "line": 7, "offset": 1 },
          "file": "tests/patterns/php/spatch/xhp_nested.php",
          "start": { "col": 9, "line": 7, "offset": 0 }
        },
        {
          "end": { "col": 5, "line": 9, "offset": 1 },
          "file": "tests/patterns/php/spatch/xhp_nested.php",
          "start": { "col": 4, "line": 9, "offset": 0 }
        },
        {
          "end": { "col": 4, "line": 11, "offset": 1 },
          "file": "tests/patterns/php/spatch/xhp_nested.php",
          "start": { "col": 3, "line": 11, "offset": 0 }
        },
        {
          "end": { "col": 6, "line": 12, "offset": 1 },
          "file": "tests/patterns/php/spatch/xhp_nested.php",
          "start": { "col": 5, "line": 12, "offset": 0 }
        },
        {
          "end": { "col": 12, "line": 12, "offset": 2 },
          "file": "tests/patterns/php/spatch/xhp_nested.php",
          "start": { "col": 10, "line": 12, "offset": 0 }
        },
        {
          "end": { "col": 4, "line": 14, "offset": 6 },
          "file": "tests/patterns/php/spatch/xhp_nested.php",
          "start": { "col": 13, "line": 13, "offset": 0 }
        },
        {
          "end": { "col": 5, "line": 15, "offset": 2 },
          "file": "tests/patterns/php/spatch/xhp_nested.php",
          "start": { "col": 3, "line": 15, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 5, "line": 3, "offset": 1 },
            "path": "tests/patterns/php/spatch/xhp_nested.php",
            "start": { "col": 4, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 6, "line": 5, "offset": 1 },
            "path": "tests/patterns/php/spatch/xhp_nested.php",
            "start": { "col": 5, "line": 5, "offset": 0 }
          },
          {
            "end": { "col": 12, "line": 5, "offset": 2 },
            "path": "tests/patterns/php/spatch/xhp_nested.php",
            "start": { "col": 10, "line": 5, "offset": 0 }
          },
          {
            "end": { "col": 4, "line": 7, "offset": 6 },
            "path": "tests/patterns/php/spatch/xhp_nested.php",
            "start": { "col": 13, "line": 6, "offset": 0 }
          },
          {
            "end": { "col": 10, "line": 7, "offset": 1 },
            "path": "tests/patterns/php/spatch/xhp_nested.php",
            "start": { "col": 9, "line": 7, "offset": 0 }
          },
          {
            "end": { "col": 5, "line": 9, "offset": 1 },
            "path": "tests/patterns/php/spatch/xhp_nested.php",
            "start": { "col": 4, "line": 9, "offset": 0 }
          },
          {
            "end": { "col": 4, "line": 11, "offset": 1 },
            "path": "tests/patterns/php/spatch/xhp_nested.php",
            "start": { "col": 3, "line": 11, "offset": 0 }
          },
          {
            "end": { "col": 6, "line": 12, "offset": 1 },
            "path": "tests/patterns/php/spatch/xhp_nested.php",
            "start": { "col": 5, "line": 12, "offset": 0 }
          },
          {
            "end": { "col": 12, "line": 12, "offset": 2 },
            "path": "tests/patterns/php/spatch/xhp_nested.php",
            "start": { "col": 10, "line": 12, "offset": 0 }
          },
          {
            "end": { "col": 4, "line": 14, "offset": 6 },
            "path": "tests/patterns/php/spatch/xhp_nested.php",
            "start": { "col": 13, "line": 13, "offset": 0 }
          },
          {
            "end": { "col": 5, "line": 15, "offset": 2 },
            "path": "tests/patterns/php/spatch/xhp_nested.php",
            "start": { "col": 3, "line": 15, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/optimizing/Analyze_pattern.mli:3:\n `MvarSet.t\n\nval extract_specific_strings :` was unexpected",
      "path": "src/optimizing/Analyze_pattern.mli",
      "spans": [
        {
          "end": { "col": 31, "line": 5, "offset": 41 },
          "file": "src/optimizing/Analyze_pattern.mli",
          "start": { "col": 14, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 32, "line": 10, "offset": 118 },
          "file": "src/optimizing/Analyze_pattern.mli",
          "start": { "col": 61, "line": 5, "offset": 0 }
        },
        {
          "end": { "col": 37, "line": 18, "offset": 3 },
          "file": "src/optimizing/Analyze_pattern.mli",
          "start": { "col": 34, "line": 18, "offset": 0 }
        },
        {
          "end": { "col": 42, "line": 18, "offset": 1 },
          "file": "src/optimizing/Analyze_pattern.mli",
          "start": { "col": 41, "line": 18, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 31, "line": 5, "offset": 41 },
            "path": "src/optimizing/Analyze_pattern.mli",
            "start": { "col": 14, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 32, "line": 10, "offset": 118 },
            "path": "src/optimizing/Analyze_pattern.mli",
            "start": { "col": 61, "line": 5, "offset": 0 }
          },
          {
            "end": { "col": 37, "line": 18, "offset": 3 },
            "path": "src/optimizing/Analyze_pattern.mli",
            "start": { "col": 34, "line": 18, "offset": 0 }
          },
          {
            "end": { "col": 42, "line": 18, "offset": 1 },
            "path": "src/optimizing/Analyze_pattern.mli",
            "start": { "col": 41, "line": 18, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line cli/tests/check-markers:12:\n `pipenv run pytest --collect-only \\\n   -m 'not quick and not kinda_slow and not slow' \"$@\";` was unexpected",
      "path": "cli/tests/check-markers",
      "spans": [
        {
          "end": { "col": 56, "line": 13, "offset": 90 },
          "file": "cli/tests/check-markers",
          "start": { "col": 4, "line": 12, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 56, "line": 13, "offset": 90 },
            "path": "cli/tests/check-markers",
            "start": { "col": 4, "line": 12, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/osemgrep/reporting/Output.mli:20:\n `val default : conf\n\nval preprocess_result : conf -> Core_runner.result -> OutJ.cli_output\n(** [preprocess_result conf result] preprocesses the result of a scan\n  * according to the configuration [conf]. This handles\n  * nosemgrep, interpolating messages, and more.\n  *)\n\n(* Output the core results on stdout depending on flags in\n * the configuration:\n *  - Json\n -  - Vim\n *  - Emacs\n *  - TODO Text\n *  - TODO Sarif\n *  - TODO ...\n *\n * ugly: this also apply autofixes depending on the configuration.\n *)\nval output_result : conf -> Profiler.t -> Core_runner.result -> OutJ.cli_output` was unexpected",
      "path": "src/osemgrep/reporting/Output.mli",
      "spans": [
        {
          "end": { "col": 80, "line": 39, "offset": 586 },
          "file": "src/osemgrep/reporting/Output.mli",
          "start": { "col": 1, "line": 20, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 80, "line": 39, "offset": 586 },
            "path": "src/osemgrep/reporting/Output.mli",
            "start": { "col": 1, "line": 20, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/build-test-manylinux-aarch64.yml:32:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/build-test-manylinux-aarch64.yml",
      "spans": [
        {
          "end": { "col": 41, "line": 32, "offset": 738 },
          "file": ".github/workflows/build-test-manylinux-aarch64.yml",
          "start": { "col": 38, "line": 32, "offset": 735 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 41, "line": 32, "offset": 738 },
            "path": ".github/workflows/build-test-manylinux-aarch64.yml",
            "start": { "col": 38, "line": 32, "offset": 735 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/osemgrep/language_server/server/RPC_server.mli:33:\n `: LSIO\n\nval io_ref` was unexpected",
      "path": "src/osemgrep/language_server/server/RPC_server.mli",
      "spans": [
        {
          "end": { "col": 11, "line": 35, "offset": 18 },
          "file": "src/osemgrep/language_server/server/RPC_server.mli",
          "start": { "col": 6, "line": 33, "offset": 0 }
        },
        {
          "end": { "col": 21, "line": 35, "offset": 6 },
          "file": "src/osemgrep/language_server/server/RPC_server.mli",
          "start": { "col": 15, "line": 35, "offset": 0 }
        },
        {
          "end": { "col": 4, "line": 55, "offset": 45 },
          "file": "src/osemgrep/language_server/server/RPC_server.mli",
          "start": { "col": 10, "line": 53, "offset": 0 }
        },
        {
          "end": { "col": 26, "line": 58, "offset": 1 },
          "file": "src/osemgrep/language_server/server/RPC_server.mli",
          "start": { "col": 25, "line": 58, "offset": 0 }
        },
        {
          "end": { "col": 32, "line": 58, "offset": 1 },
          "file": "src/osemgrep/language_server/server/RPC_server.mli",
          "start": { "col": 31, "line": 58, "offset": 0 }
        },
        {
          "end": { "col": 22, "line": 63, "offset": 1 },
          "file": "src/osemgrep/language_server/server/RPC_server.mli",
          "start": { "col": 21, "line": 63, "offset": 0 }
        },
        {
          "end": { "col": 19, "line": 66, "offset": 1 },
          "file": "src/osemgrep/language_server/server/RPC_server.mli",
          "start": { "col": 18, "line": 66, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 11, "line": 35, "offset": 18 },
            "path": "src/osemgrep/language_server/server/RPC_server.mli",
            "start": { "col": 6, "line": 33, "offset": 0 }
          },
          {
            "end": { "col": 21, "line": 35, "offset": 6 },
            "path": "src/osemgrep/language_server/server/RPC_server.mli",
            "start": { "col": 15, "line": 35, "offset": 0 }
          },
          {
            "end": { "col": 4, "line": 55, "offset": 45 },
            "path": "src/osemgrep/language_server/server/RPC_server.mli",
            "start": { "col": 10, "line": 53, "offset": 0 }
          },
          {
            "end": { "col": 26, "line": 58, "offset": 1 },
            "path": "src/osemgrep/language_server/server/RPC_server.mli",
            "start": { "col": 25, "line": 58, "offset": 0 }
          },
          {
            "end": { "col": 32, "line": 58, "offset": 1 },
            "path": "src/osemgrep/language_server/server/RPC_server.mli",
            "start": { "col": 31, "line": 58, "offset": 0 }
          },
          {
            "end": { "col": 22, "line": 63, "offset": 1 },
            "path": "src/osemgrep/language_server/server/RPC_server.mli",
            "start": { "col": 21, "line": 63, "offset": 0 }
          },
          {
            "end": { "col": 19, "line": 66, "offset": 1 },
            "path": "src/osemgrep/language_server/server/RPC_server.mli",
            "start": { "col": 18, "line": 66, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/tests.yml:115:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ github.repository` was unexpected",
      "path": ".github/workflows/tests.yml",
      "spans": [
        {
          "end": { "col": 40, "line": 115, "offset": 4399 },
          "file": ".github/workflows/tests.yml",
          "start": { "col": 21, "line": 115, "offset": 4380 }
        },
        {
          "end": { "col": 46, "line": 116, "offset": 4402 },
          "file": ".github/workflows/tests.yml",
          "start": { "col": 24, "line": 116, "offset": 4380 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 40, "line": 115, "offset": 4399 },
            "path": ".github/workflows/tests.yml",
            "start": { "col": 21, "line": 115, "offset": 4380 }
          },
          {
            "end": { "col": 46, "line": 116, "offset": 4402 },
            "path": ".github/workflows/tests.yml",
            "start": { "col": 24, "line": 116, "offset": 4380 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/tests.yml:137:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.snapshot-commit.outputs.commit_long_sha` was unexpected",
      "path": ".github/workflows/tests.yml",
      "spans": [
        {
          "end": { "col": 134, "line": 137, "offset": 5498 },
          "file": ".github/workflows/tests.yml",
          "start": { "col": 87, "line": 137, "offset": 5451 }
        },
        {
          "end": { "col": 100, "line": 140, "offset": 5493 },
          "file": ".github/workflows/tests.yml",
          "start": { "col": 58, "line": 140, "offset": 5451 }
        },
        {
          "end": { "col": 24, "line": 142, "offset": 5454 },
          "file": ".github/workflows/tests.yml",
          "start": { "col": 21, "line": 142, "offset": 5451 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 134, "line": 137, "offset": 5498 },
            "path": ".github/workflows/tests.yml",
            "start": { "col": 87, "line": 137, "offset": 5451 }
          },
          {
            "end": { "col": 100, "line": 140, "offset": 5493 },
            "path": ".github/workflows/tests.yml",
            "start": { "col": 58, "line": 140, "offset": 5451 }
          },
          {
            "end": { "col": 24, "line": 142, "offset": 5454 },
            "path": ".github/workflows/tests.yml",
            "start": { "col": 21, "line": 142, "offset": 5451 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/tests.yml:188:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/tests.yml",
      "spans": [
        {
          "end": { "col": 72, "line": 188, "offset": 7682 },
          "file": ".github/workflows/tests.yml",
          "start": { "col": 69, "line": 188, "offset": 7679 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 72, "line": 188, "offset": 7682 },
            "path": ".github/workflows/tests.yml",
            "start": { "col": 69, "line": 188, "offset": 7679 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/tests.yml:240:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/tests.yml",
      "spans": [
        {
          "end": { "col": 41, "line": 240, "offset": 9716 },
          "file": ".github/workflows/tests.yml",
          "start": { "col": 38, "line": 240, "offset": 9713 }
        },
        {
          "end": { "col": 69, "line": 240, "offset": 9716 },
          "file": ".github/workflows/tests.yml",
          "start": { "col": 66, "line": 240, "offset": 9713 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 41, "line": 240, "offset": 9716 },
            "path": ".github/workflows/tests.yml",
            "start": { "col": 38, "line": 240, "offset": 9713 }
          },
          {
            "end": { "col": 69, "line": 240, "offset": 9716 },
            "path": ".github/workflows/tests.yml",
            "start": { "col": 66, "line": 240, "offset": 9713 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line js/libyaml/api.c:100:\n `*` was unexpected",
      "path": "js/libyaml/api.c",
      "spans": [
        {
          "end": { "col": 10, "line": 100, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 9, "line": 100, "offset": 0 }
        },
        {
          "end": { "col": 20, "line": 100, "offset": 2 },
          "file": "js/libyaml/api.c",
          "start": { "col": 18, "line": 100, "offset": 0 }
        },
        {
          "end": { "col": 78, "line": 186, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 77, "line": 186, "offset": 0 }
        },
        {
          "end": { "col": 50, "line": 188, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 49, "line": 188, "offset": 0 }
        },
        {
          "end": { "col": 68, "line": 190, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 67, "line": 190, "offset": 0 }
        },
        {
          "end": { "col": 65, "line": 192, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 64, "line": 192, "offset": 0 }
        },
        {
          "end": { "col": 56, "line": 194, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 55, "line": 194, "offset": 0 }
        },
        {
          "end": { "col": 74, "line": 196, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 73, "line": 196, "offset": 0 }
        },
        {
          "end": { "col": 68, "line": 364, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 67, "line": 364, "offset": 0 }
        },
        {
          "end": { "col": 80, "line": 366, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 79, "line": 366, "offset": 0 }
        },
        {
          "end": { "col": 52, "line": 368, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 51, "line": 368, "offset": 0 }
        },
        {
          "end": { "col": 76, "line": 370, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 75, "line": 370, "offset": 0 }
        },
        {
          "end": { "col": 77, "line": 734, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 76, "line": 734, "offset": 0 }
        },
        {
          "end": { "col": 50, "line": 1064, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 49, "line": 1064, "offset": 0 }
        },
        {
          "end": { "col": 77, "line": 1075, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 76, "line": 1075, "offset": 0 }
        },
        {
          "end": { "col": 55, "line": 1270, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 54, "line": 1270, "offset": 0 }
        },
        {
          "end": { "col": 55, "line": 1315, "offset": 1 },
          "file": "js/libyaml/api.c",
          "start": { "col": 54, "line": 1315, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 10, "line": 100, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 9, "line": 100, "offset": 0 }
          },
          {
            "end": { "col": 20, "line": 100, "offset": 2 },
            "path": "js/libyaml/api.c",
            "start": { "col": 18, "line": 100, "offset": 0 }
          },
          {
            "end": { "col": 78, "line": 186, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 77, "line": 186, "offset": 0 }
          },
          {
            "end": { "col": 50, "line": 188, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 49, "line": 188, "offset": 0 }
          },
          {
            "end": { "col": 68, "line": 190, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 67, "line": 190, "offset": 0 }
          },
          {
            "end": { "col": 65, "line": 192, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 64, "line": 192, "offset": 0 }
          },
          {
            "end": { "col": 56, "line": 194, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 55, "line": 194, "offset": 0 }
          },
          {
            "end": { "col": 74, "line": 196, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 73, "line": 196, "offset": 0 }
          },
          {
            "end": { "col": 68, "line": 364, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 67, "line": 364, "offset": 0 }
          },
          {
            "end": { "col": 80, "line": 366, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 79, "line": 366, "offset": 0 }
          },
          {
            "end": { "col": 52, "line": 368, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 51, "line": 368, "offset": 0 }
          },
          {
            "end": { "col": 76, "line": 370, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 75, "line": 370, "offset": 0 }
          },
          {
            "end": { "col": 77, "line": 734, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 76, "line": 734, "offset": 0 }
          },
          {
            "end": { "col": 50, "line": 1064, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 49, "line": 1064, "offset": 0 }
          },
          {
            "end": { "col": 77, "line": 1075, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 76, "line": 1075, "offset": 0 }
          },
          {
            "end": { "col": 55, "line": 1270, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 54, "line": 1270, "offset": 0 }
          },
          {
            "end": { "col": 55, "line": 1315, "offset": 1 },
            "path": "js/libyaml/api.c",
            "start": { "col": 54, "line": 1315, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line perf/bench/dummy/targets/malformed.js:2:\n `)` was unexpected",
      "path": "perf/bench/dummy/targets/malformed.js",
      "spans": [
        {
          "end": { "col": 2, "line": 2, "offset": 1 },
          "file": "perf/bench/dummy/targets/malformed.js",
          "start": { "col": 1, "line": 2, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 2, "line": 2, "offset": 1 },
            "path": "perf/bench/dummy/targets/malformed.js",
            "start": { "col": 1, "line": 2, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/parsing_errors/skip_tokens.ts:2:\n `)` was unexpected",
      "path": "tests/parsing_errors/skip_tokens.ts",
      "spans": [
        {
          "end": { "col": 16, "line": 2, "offset": 1 },
          "file": "tests/parsing_errors/skip_tokens.ts",
          "start": { "col": 15, "line": 2, "offset": 0 }
        },
        {
          "end": { "col": 16, "line": 9, "offset": 1 },
          "file": "tests/parsing_errors/skip_tokens.ts",
          "start": { "col": 15, "line": 9, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 16, "line": 2, "offset": 1 },
            "path": "tests/parsing_errors/skip_tokens.ts",
            "start": { "col": 15, "line": 2, "offset": 0 }
          },
          {
            "end": { "col": 16, "line": 9, "offset": 1 },
            "path": "tests/parsing_errors/skip_tokens.ts",
            "start": { "col": 15, "line": 9, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/php/spatch/todo/border1.php:3:\n `=` was unexpected",
      "path": "tests/patterns/php/spatch/todo/border1.php",
      "spans": [
        {
          "end": { "col": 5, "line": 3, "offset": 1 },
          "file": "tests/patterns/php/spatch/todo/border1.php",
          "start": { "col": 4, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 10, "line": 3, "offset": 3 },
          "file": "tests/patterns/php/spatch/todo/border1.php",
          "start": { "col": 7, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 32, "line": 3, "offset": 7 },
          "file": "tests/patterns/php/spatch/todo/border1.php",
          "start": { "col": 25, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 7, "line": 5, "offset": 14 },
          "file": "tests/patterns/php/spatch/todo/border1.php",
          "start": { "col": 11, "line": 4, "offset": 0 }
        },
        {
          "end": { "col": 11, "line": 5, "offset": 3 },
          "file": "tests/patterns/php/spatch/todo/border1.php",
          "start": { "col": 8, "line": 5, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 5, "line": 3, "offset": 1 },
            "path": "tests/patterns/php/spatch/todo/border1.php",
            "start": { "col": 4, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 10, "line": 3, "offset": 3 },
            "path": "tests/patterns/php/spatch/todo/border1.php",
            "start": { "col": 7, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 32, "line": 3, "offset": 7 },
            "path": "tests/patterns/php/spatch/todo/border1.php",
            "start": { "col": 25, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 7, "line": 5, "offset": 14 },
            "path": "tests/patterns/php/spatch/todo/border1.php",
            "start": { "col": 11, "line": 4, "offset": 0 }
          },
          {
            "end": { "col": 11, "line": 5, "offset": 3 },
            "path": "tests/patterns/php/spatch/todo/border1.php",
            "start": { "col": 8, "line": 5, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/php/sgrep/xhp_metavar_attr.php:6:\n `=` was unexpected",
      "path": "tests/patterns/php/sgrep/xhp_metavar_attr.php",
      "spans": [
        {
          "end": { "col": 9, "line": 6, "offset": 1 },
          "file": "tests/patterns/php/sgrep/xhp_metavar_attr.php",
          "start": { "col": 8, "line": 6, "offset": 0 }
        },
        {
          "end": { "col": 13, "line": 6, "offset": 2 },
          "file": "tests/patterns/php/sgrep/xhp_metavar_attr.php",
          "start": { "col": 11, "line": 6, "offset": 0 }
        },
        {
          "end": { "col": 22, "line": 6, "offset": 4 },
          "file": "tests/patterns/php/sgrep/xhp_metavar_attr.php",
          "start": { "col": 18, "line": 6, "offset": 0 }
        },
        {
          "end": { "col": 47, "line": 6, "offset": 2 },
          "file": "tests/patterns/php/sgrep/xhp_metavar_attr.php",
          "start": { "col": 45, "line": 6, "offset": 0 }
        },
        {
          "end": { "col": 50, "line": 6, "offset": 2 },
          "file": "tests/patterns/php/sgrep/xhp_metavar_attr.php",
          "start": { "col": 48, "line": 6, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 9, "line": 6, "offset": 1 },
            "path": "tests/patterns/php/sgrep/xhp_metavar_attr.php",
            "start": { "col": 8, "line": 6, "offset": 0 }
          },
          {
            "end": { "col": 13, "line": 6, "offset": 2 },
            "path": "tests/patterns/php/sgrep/xhp_metavar_attr.php",
            "start": { "col": 11, "line": 6, "offset": 0 }
          },
          {
            "end": { "col": 22, "line": 6, "offset": 4 },
            "path": "tests/patterns/php/sgrep/xhp_metavar_attr.php",
            "start": { "col": 18, "line": 6, "offset": 0 }
          },
          {
            "end": { "col": 47, "line": 6, "offset": 2 },
            "path": "tests/patterns/php/sgrep/xhp_metavar_attr.php",
            "start": { "col": 45, "line": 6, "offset": 0 }
          },
          {
            "end": { "col": 50, "line": 6, "offset": 2 },
            "path": "tests/patterns/php/sgrep/xhp_metavar_attr.php",
            "start": { "col": 48, "line": 6, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line libs/commons/Either_.mli:7:\n `('a, 'b) t = ('a, 'b) Either.t = Left of 'a | Right of 'b\n[@@deriving eq, show, sexp]\n\nval partition_either : ('a -> ('b, 'c) t) -> 'a list -> 'b list *` was unexpected",
      "path": "libs/commons/Either_.mli",
      "spans": [
        {
          "end": { "col": 66, "line": 10, "offset": 152 },
          "file": "libs/commons/Either_.mli",
          "start": { "col": 6, "line": 7, "offset": 0 }
        },
        {
          "end": { "col": 65, "line": 16, "offset": 177 },
          "file": "libs/commons/Either_.mli",
          "start": { "col": 6, "line": 12, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 66, "line": 10, "offset": 152 },
            "path": "libs/commons/Either_.mli",
            "start": { "col": 6, "line": 7, "offset": 0 }
          },
          {
            "end": { "col": 65, "line": 16, "offset": 177 },
            "path": "libs/commons/Either_.mli",
            "start": { "col": 6, "line": 12, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/osemgrep/core/Exit_code.mli:12:\n `:` was unexpected",
      "path": "src/osemgrep/core/Exit_code.mli",
      "spans": [
        {
          "end": { "col": 13, "line": 12, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 12, "line": 12, "offset": 0 }
        },
        {
          "end": { "col": 13, "line": 13, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 12, "line": 13, "offset": 0 }
        },
        {
          "end": { "col": 17, "line": 16, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 16, "line": 16, "offset": 0 }
        },
        {
          "end": { "col": 9, "line": 22, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 8, "line": 22, "offset": 0 }
        },
        {
          "end": { "col": 15, "line": 23, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 14, "line": 23, "offset": 0 }
        },
        {
          "end": { "col": 12, "line": 24, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 11, "line": 24, "offset": 0 }
        },
        {
          "end": { "col": 19, "line": 25, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 18, "line": 25, "offset": 0 }
        },
        {
          "end": { "col": 22, "line": 26, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 21, "line": 26, "offset": 0 }
        },
        {
          "end": { "col": 23, "line": 27, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 22, "line": 27, "offset": 0 }
        },
        {
          "end": { "col": 21, "line": 28, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 20, "line": 28, "offset": 0 }
        },
        {
          "end": { "col": 23, "line": 29, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 22, "line": 29, "offset": 0 }
        },
        {
          "end": { "col": 22, "line": 30, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 21, "line": 30, "offset": 0 }
        },
        {
          "end": { "col": 16, "line": 31, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 15, "line": 31, "offset": 0 }
        },
        {
          "end": { "col": 34, "line": 34, "offset": 1 },
          "file": "src/osemgrep/core/Exit_code.mli",
          "start": { "col": 33, "line": 34, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 13, "line": 12, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 12, "line": 12, "offset": 0 }
          },
          {
            "end": { "col": 13, "line": 13, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 12, "line": 13, "offset": 0 }
          },
          {
            "end": { "col": 17, "line": 16, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 16, "line": 16, "offset": 0 }
          },
          {
            "end": { "col": 9, "line": 22, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 8, "line": 22, "offset": 0 }
          },
          {
            "end": { "col": 15, "line": 23, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 14, "line": 23, "offset": 0 }
          },
          {
            "end": { "col": 12, "line": 24, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 11, "line": 24, "offset": 0 }
          },
          {
            "end": { "col": 19, "line": 25, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 18, "line": 25, "offset": 0 }
          },
          {
            "end": { "col": 22, "line": 26, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 21, "line": 26, "offset": 0 }
          },
          {
            "end": { "col": 23, "line": 27, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 22, "line": 27, "offset": 0 }
          },
          {
            "end": { "col": 21, "line": 28, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 20, "line": 28, "offset": 0 }
          },
          {
            "end": { "col": 23, "line": 29, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 22, "line": 29, "offset": 0 }
          },
          {
            "end": { "col": 22, "line": 30, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 21, "line": 30, "offset": 0 }
          },
          {
            "end": { "col": 16, "line": 31, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 15, "line": 31, "offset": 0 }
          },
          {
            "end": { "col": 34, "line": 34, "offset": 1 },
            "path": "src/osemgrep/core/Exit_code.mli",
            "start": { "col": 33, "line": 34, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/update-semgrep-rules.yml:25:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.jwt.outputs.jwt` was unexpected",
      "path": ".github/workflows/update-semgrep-rules.yml",
      "spans": [
        {
          "end": { "col": 58, "line": 25, "offset": 602 },
          "file": ".github/workflows/update-semgrep-rules.yml",
          "start": { "col": 35, "line": 25, "offset": 579 }
        },
        {
          "end": { "col": 91, "line": 27, "offset": 619 },
          "file": ".github/workflows/update-semgrep-rules.yml",
          "start": { "col": 51, "line": 27, "offset": 579 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 58, "line": 25, "offset": 602 },
            "path": ".github/workflows/update-semgrep-rules.yml",
            "start": { "col": 35, "line": 25, "offset": 579 }
          },
          {
            "end": { "col": 91, "line": 27, "offset": 619 },
            "path": ".github/workflows/update-semgrep-rules.yml",
            "start": { "col": 51, "line": 27, "offset": 579 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/tainting/Taint_smatch.mli:28:\n `val is_exact : 'spec t -> bool` was unexpected",
      "path": "src/tainting/Taint_smatch.mli",
      "spans": [
        {
          "end": { "col": 31, "line": 28, "offset": 30 },
          "file": "src/tainting/Taint_smatch.mli",
          "start": { "col": 1, "line": 28, "offset": 0 }
        },
        {
          "end": { "col": 18, "line": 47, "offset": 65 },
          "file": "src/tainting/Taint_smatch.mli",
          "start": { "col": 20, "line": 41, "offset": 0 }
        },
        {
          "end": { "col": 57, "line": 51, "offset": 163 },
          "file": "src/tainting/Taint_smatch.mli",
          "start": { "col": 38, "line": 47, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 31, "line": 28, "offset": 30 },
            "path": "src/tainting/Taint_smatch.mli",
            "start": { "col": 1, "line": 28, "offset": 0 }
          },
          {
            "end": { "col": 18, "line": 47, "offset": 65 },
            "path": "src/tainting/Taint_smatch.mli",
            "start": { "col": 20, "line": 41, "offset": 0 }
          },
          {
            "end": { "col": 57, "line": 51, "offset": 163 },
            "path": "src/tainting/Taint_smatch.mli",
            "start": { "col": 38, "line": 47, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/build-test-osx-x86.yml:41:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ env.OPAM_SWITCH_NAME` was unexpected",
      "path": ".github/workflows/build-test-osx-x86.yml",
      "spans": [
        {
          "end": { "col": 72, "line": 41, "offset": 1262 },
          "file": ".github/workflows/build-test-osx-x86.yml",
          "start": { "col": 50, "line": 41, "offset": 1240 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 72, "line": 41, "offset": 1262 },
            "path": ".github/workflows/build-test-osx-x86.yml",
            "start": { "col": 50, "line": 41, "offset": 1240 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line js/shared/Semgrep_js_shared.mli:67:\n `'` was unexpected",
      "path": "js/shared/Semgrep_js_shared.mli",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line TCB/Cap.mli:112:\n `:` was unexpected",
      "path": "TCB/Cap.mli",
      "spans": [
        {
          "end": { "col": 26, "line": 112, "offset": 1 },
          "file": "TCB/Cap.mli",
          "start": { "col": 25, "line": 112, "offset": 0 }
        },
        {
          "end": { "col": 36, "line": 112, "offset": 3 },
          "file": "TCB/Cap.mli",
          "start": { "col": 33, "line": 112, "offset": 0 }
        },
        {
          "end": { "col": 46, "line": 112, "offset": 1 },
          "file": "TCB/Cap.mli",
          "start": { "col": 45, "line": 112, "offset": 0 }
        },
        {
          "end": { "col": 11, "line": 121, "offset": 1 },
          "file": "TCB/Cap.mli",
          "start": { "col": 10, "line": 121, "offset": 0 }
        },
        {
          "end": { "col": 26, "line": 121, "offset": 13 },
          "file": "TCB/Cap.mli",
          "start": { "col": 13, "line": 121, "offset": 0 }
        },
        {
          "end": { "col": 31, "line": 121, "offset": 1 },
          "file": "TCB/Cap.mli",
          "start": { "col": 30, "line": 121, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 26, "line": 112, "offset": 1 },
            "path": "TCB/Cap.mli",
            "start": { "col": 25, "line": 112, "offset": 0 }
          },
          {
            "end": { "col": 36, "line": 112, "offset": 3 },
            "path": "TCB/Cap.mli",
            "start": { "col": 33, "line": 112, "offset": 0 }
          },
          {
            "end": { "col": 46, "line": 112, "offset": 1 },
            "path": "TCB/Cap.mli",
            "start": { "col": 45, "line": 112, "offset": 0 }
          },
          {
            "end": { "col": 11, "line": 121, "offset": 1 },
            "path": "TCB/Cap.mli",
            "start": { "col": 10, "line": 121, "offset": 0 }
          },
          {
            "end": { "col": 26, "line": 121, "offset": 13 },
            "path": "TCB/Cap.mli",
            "start": { "col": 13, "line": 121, "offset": 0 }
          },
          {
            "end": { "col": 31, "line": 121, "offset": 1 },
            "path": "TCB/Cap.mli",
            "start": { "col": 30, "line": 121, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/check-semgrep-pro-version.yml:60:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ inputs.bucket-name` was unexpected",
      "path": ".github/workflows/check-semgrep-pro-version.yml",
      "spans": [
        {
          "end": { "col": 53, "line": 60, "offset": 1965 },
          "file": ".github/workflows/check-semgrep-pro-version.yml",
          "start": { "col": 33, "line": 60, "offset": 1945 }
        },
        {
          "end": { "col": 80, "line": 60, "offset": 1966 },
          "file": ".github/workflows/check-semgrep-pro-version.yml",
          "start": { "col": 59, "line": 60, "offset": 1945 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 53, "line": 60, "offset": 1965 },
            "path": ".github/workflows/check-semgrep-pro-version.yml",
            "start": { "col": 33, "line": 60, "offset": 1945 }
          },
          {
            "end": { "col": 80, "line": 60, "offset": 1966 },
            "path": ".github/workflows/check-semgrep-pro-version.yml",
            "start": { "col": 59, "line": 60, "offset": 1945 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/check-semgrep-pro-version.yml:64:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/check-semgrep-pro-version.yml",
      "spans": [
        {
          "end": { "col": 60, "line": 64, "offset": 2130 },
          "file": ".github/workflows/check-semgrep-pro-version.yml",
          "start": { "col": 57, "line": 64, "offset": 2127 }
        },
        {
          "end": { "col": 104, "line": 70, "offset": 2151 },
          "file": ".github/workflows/check-semgrep-pro-version.yml",
          "start": { "col": 80, "line": 70, "offset": 2127 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 60, "line": 64, "offset": 2130 },
            "path": ".github/workflows/check-semgrep-pro-version.yml",
            "start": { "col": 57, "line": 64, "offset": 2127 }
          },
          {
            "end": { "col": 104, "line": 70, "offset": 2151 },
            "path": ".github/workflows/check-semgrep-pro-version.yml",
            "start": { "col": 80, "line": 70, "offset": 2127 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/check-semgrep-pro-version.yml:76:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": ".github/workflows/check-semgrep-pro-version.yml",
      "spans": [
        {
          "end": { "col": 60, "line": 76, "offset": 2769 },
          "file": ".github/workflows/check-semgrep-pro-version.yml",
          "start": { "col": 57, "line": 76, "offset": 2766 }
        },
        {
          "end": { "col": 104, "line": 82, "offset": 2790 },
          "file": ".github/workflows/check-semgrep-pro-version.yml",
          "start": { "col": 80, "line": 82, "offset": 2766 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 60, "line": 76, "offset": 2769 },
            "path": ".github/workflows/check-semgrep-pro-version.yml",
            "start": { "col": 57, "line": 76, "offset": 2766 }
          },
          {
            "end": { "col": 104, "line": 82, "offset": 2790 },
            "path": ".github/workflows/check-semgrep-pro-version.yml",
            "start": { "col": 80, "line": 82, "offset": 2766 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line libs/spacegrep/scripts/show-perf:23:\n `let rec of_pattern (pat : Pattern_AST.t) : t =\n  List.fold_left of_pattern_node [] pat |> List.rev\n\nand of_pattern_node acc pat_node =\n  match pat_node with\n  | End -> acc\n  | Atom (loc, atom) -> (\n      match atom with\n      | Word s -> Atom (loc, Word s) :: acc\n      | Punct c -> Atom (loc, Punct c) :: acc\n      | Byte c -> Atom (loc, Byte c) :: acc\n      | Metavar s ->\n          let start, end_ = loc in\n          let word_loc = (Loc.Pos.shift start 1, end_) in\n          Atom (word_loc, Word s) :: Atom (Loc.sub loc 0 1, Punct '$` was unexpected",
      "path": "libs/spacegrep/scripts/show-perf",
      "spans": [
        {
          "end": { "col": 69, "line": 37, "offset": 536 },
          "file": "libs/spacegrep/scripts/show-perf",
          "start": { "col": 1, "line": 23, "offset": 0 }
        },
        {
          "end": { "col": 65, "line": 143, "offset": 330 },
          "file": "libs/spacegrep/scripts/show-perf",
          "start": { "col": 29, "line": 136, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 69, "line": 37, "offset": 536 },
            "path": "libs/spacegrep/scripts/show-perf",
            "start": { "col": 1, "line": 23, "offset": 0 }
          },
          {
            "end": { "col": 65, "line": 143, "offset": 330 },
            "path": "libs/spacegrep/scripts/show-perf",
            "start": { "col": 29, "line": 136, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/tainting/Taint.mli:97:\n `val trace_of_pm : Pattern_match.t * 'a -> 'a call_trace\nval pm_of_trace : 'a call_trace -> Pattern_match.t * 'a\n\n(* TODO: Move 'Dataflow_tainting.subst_in_precondition' here, parameterized\n     by 'arg_to_taints'. *)\n(* This function just maps, bottom-up, the preconditions in a taint.\n   Since this only acts on the children of a taint, the type remains\n   the same.\n*)\nval map_preconditions : (taint list -> taint list) -> taint -> taint option\n\nval _show_arg : arg -> string\n(** Debugging functions. (TODO: Rename to 'debug_xyz' ? Replace 'show_xyz' ?) *)\n\nval _show_taint : taint -> string` was unexpected",
      "path": "src/tainting/Taint.mli",
      "spans": [
        {
          "end": { "col": 34, "line": 111, "offset": 593 },
          "file": "src/tainting/Taint.mli",
          "start": { "col": 1, "line": 97, "offset": 0 }
        },
        {
          "end": { "col": 25, "line": 141, "offset": 1 },
          "file": "src/tainting/Taint.mli",
          "start": { "col": 24, "line": 141, "offset": 0 }
        },
        {
          "end": { "col": 21, "line": 142, "offset": 1 },
          "file": "src/tainting/Taint.mli",
          "start": { "col": 20, "line": 142, "offset": 0 }
        },
        {
          "end": { "col": 30, "line": 144, "offset": 1 },
          "file": "src/tainting/Taint.mli",
          "start": { "col": 29, "line": 144, "offset": 0 }
        },
        {
          "end": { "col": 20, "line": 146, "offset": 1 },
          "file": "src/tainting/Taint.mli",
          "start": { "col": 19, "line": 146, "offset": 0 }
        },
        {
          "end": { "col": 12, "line": 147, "offset": 1 },
          "file": "src/tainting/Taint.mli",
          "start": { "col": 11, "line": 147, "offset": 0 }
        },
        {
          "end": { "col": 18, "line": 149, "offset": 1 },
          "file": "src/tainting/Taint.mli",
          "start": { "col": 17, "line": 149, "offset": 0 }
        },
        {
          "end": { "col": 48, "line": 199, "offset": 47 },
          "file": "src/tainting/Taint.mli",
          "start": { "col": 1, "line": 199, "offset": 0 }
        },
        {
          "end": { "col": 20, "line": 233, "offset": 1 },
          "file": "src/tainting/Taint.mli",
          "start": { "col": 19, "line": 233, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 34, "line": 111, "offset": 593 },
            "path": "src/tainting/Taint.mli",
            "start": { "col": 1, "line": 97, "offset": 0 }
          },
          {
            "end": { "col": 25, "line": 141, "offset": 1 },
            "path": "src/tainting/Taint.mli",
            "start": { "col": 24, "line": 141, "offset": 0 }
          },
          {
            "end": { "col": 21, "line": 142, "offset": 1 },
            "path": "src/tainting/Taint.mli",
            "start": { "col": 20, "line": 142, "offset": 0 }
          },
          {
            "end": { "col": 30, "line": 144, "offset": 1 },
            "path": "src/tainting/Taint.mli",
            "start": { "col": 29, "line": 144, "offset": 0 }
          },
          {
            "end": { "col": 20, "line": 146, "offset": 1 },
            "path": "src/tainting/Taint.mli",
            "start": { "col": 19, "line": 146, "offset": 0 }
          },
          {
            "end": { "col": 12, "line": 147, "offset": 1 },
            "path": "src/tainting/Taint.mli",
            "start": { "col": 11, "line": 147, "offset": 0 }
          },
          {
            "end": { "col": 18, "line": 149, "offset": 1 },
            "path": "src/tainting/Taint.mli",
            "start": { "col": 17, "line": 149, "offset": 0 }
          },
          {
            "end": { "col": 48, "line": 199, "offset": 47 },
            "path": "src/tainting/Taint.mli",
            "start": { "col": 1, "line": 199, "offset": 0 }
          },
          {
            "end": { "col": 20, "line": 233, "offset": 1 },
            "path": "src/tainting/Taint.mli",
            "start": { "col": 19, "line": 233, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line js/libyaml/loader.c:95:\n `*` was unexpected",
      "path": "js/libyaml/loader.c",
      "spans": [
        {
          "end": { "col": 58, "line": 95, "offset": 1 },
          "file": "js/libyaml/loader.c",
          "start": { "col": 57, "line": 95, "offset": 0 }
        },
        {
          "end": { "col": 64, "line": 113, "offset": 1 },
          "file": "js/libyaml/loader.c",
          "start": { "col": 63, "line": 113, "offset": 0 }
        },
        {
          "end": { "col": 38, "line": 202, "offset": 1 },
          "file": "js/libyaml/loader.c",
          "start": { "col": 37, "line": 202, "offset": 0 }
        },
        {
          "end": { "col": 53, "line": 435, "offset": 1 },
          "file": "js/libyaml/loader.c",
          "start": { "col": 52, "line": 435, "offset": 0 }
        },
        {
          "end": { "col": 53, "line": 503, "offset": 1 },
          "file": "js/libyaml/loader.c",
          "start": { "col": 52, "line": 503, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 58, "line": 95, "offset": 1 },
            "path": "js/libyaml/loader.c",
            "start": { "col": 57, "line": 95, "offset": 0 }
          },
          {
            "end": { "col": 64, "line": 113, "offset": 1 },
            "path": "js/libyaml/loader.c",
            "start": { "col": 63, "line": 113, "offset": 0 }
          },
          {
            "end": { "col": 38, "line": 202, "offset": 1 },
            "path": "js/libyaml/loader.c",
            "start": { "col": 37, "line": 202, "offset": 0 }
          },
          {
            "end": { "col": 53, "line": 435, "offset": 1 },
            "path": "js/libyaml/loader.c",
            "start": { "col": 52, "line": 435, "offset": 0 }
          },
          {
            "end": { "col": 53, "line": 503, "offset": 1 },
            "path": "js/libyaml/loader.c",
            "start": { "col": 52, "line": 503, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/TODO/bad.py:1:\n `def foo\n  return` was unexpected",
      "path": "tests/TODO/bad.py",
      "spans": [
        {
          "end": { "col": 9, "line": 2, "offset": 16 },
          "file": "tests/TODO/bad.py",
          "start": { "col": 1, "line": 1, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 9, "line": 2, "offset": 16 },
            "path": "tests/TODO/bad.py",
            "start": { "col": 1, "line": 1, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line perf/bench/dummy/input/dummy/targets/malformed.js:2:\n `)` was unexpected",
      "path": "perf/bench/dummy/input/dummy/targets/malformed.js",
      "spans": [
        {
          "end": { "col": 2, "line": 2, "offset": 1 },
          "file": "perf/bench/dummy/input/dummy/targets/malformed.js",
          "start": { "col": 1, "line": 2, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 2, "line": 2, "offset": 1 },
            "path": "perf/bench/dummy/input/dummy/targets/malformed.js",
            "start": { "col": 1, "line": 2, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/misc/skipping_errors/test.js:6:\n `%%` was unexpected",
      "path": "tests/misc/skipping_errors/test.js",
      "spans": [
        {
          "end": { "col": 17, "line": 6, "offset": 2 },
          "file": "tests/misc/skipping_errors/test.js",
          "start": { "col": 15, "line": 6, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 17, "line": 6, "offset": 2 },
            "path": "tests/misc/skipping_errors/test.js",
            "start": { "col": 15, "line": 6, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line tests/patterns/php/spatch/todo2/border_var.php:3:\n `=` was unexpected",
      "path": "tests/patterns/php/spatch/todo2/border_var.php",
      "spans": [
        {
          "end": { "col": 5, "line": 3, "offset": 1 },
          "file": "tests/patterns/php/spatch/todo2/border_var.php",
          "start": { "col": 4, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 10, "line": 3, "offset": 3 },
          "file": "tests/patterns/php/spatch/todo2/border_var.php",
          "start": { "col": 7, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 43, "line": 3, "offset": 25 },
          "file": "tests/patterns/php/spatch/todo2/border_var.php",
          "start": { "col": 18, "line": 3, "offset": 0 }
        },
        {
          "end": { "col": 7, "line": 5, "offset": 14 },
          "file": "tests/patterns/php/spatch/todo2/border_var.php",
          "start": { "col": 11, "line": 4, "offset": 0 }
        },
        {
          "end": { "col": 11, "line": 5, "offset": 3 },
          "file": "tests/patterns/php/spatch/todo2/border_var.php",
          "start": { "col": 8, "line": 5, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 5, "line": 3, "offset": 1 },
            "path": "tests/patterns/php/spatch/todo2/border_var.php",
            "start": { "col": 4, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 10, "line": 3, "offset": 3 },
            "path": "tests/patterns/php/spatch/todo2/border_var.php",
            "start": { "col": 7, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 43, "line": 3, "offset": 25 },
            "path": "tests/patterns/php/spatch/todo2/border_var.php",
            "start": { "col": 18, "line": 3, "offset": 0 }
          },
          {
            "end": { "col": 7, "line": 5, "offset": 14 },
            "path": "tests/patterns/php/spatch/todo2/border_var.php",
            "start": { "col": 11, "line": 4, "offset": 0 }
          },
          {
            "end": { "col": 11, "line": 5, "offset": 3 },
            "path": "tests/patterns/php/spatch/todo2/border_var.php",
            "start": { "col": 8, "line": 5, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/osemgrep/cli_ci/Github_metadata.mli:18:\n `val env : env Cmdliner.Term.t` was unexpected",
      "path": "src/osemgrep/cli_ci/Github_metadata.mli",
      "spans": [
        {
          "end": { "col": 30, "line": 18, "offset": 29 },
          "file": "src/osemgrep/cli_ci/Github_metadata.mli",
          "start": { "col": 1, "line": 18, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 30, "line": 18, "offset": 29 },
            "path": "src/osemgrep/cli_ci/Github_metadata.mli",
            "start": { "col": 1, "line": 18, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/osemgrep/cli_ci/Git_metadata.mli:21:\n `val env : env Cmdliner.Term.t` was unexpected",
      "path": "src/osemgrep/cli_ci/Git_metadata.mli",
      "spans": [
        {
          "end": { "col": 30, "line": 21, "offset": 29 },
          "file": "src/osemgrep/cli_ci/Git_metadata.mli",
          "start": { "col": 1, "line": 21, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 30, "line": 21, "offset": 29 },
            "path": "src/osemgrep/cli_ci/Git_metadata.mli",
            "start": { "col": 1, "line": 21, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/call-bump-pr-workflow.yml:41:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.jwt.outputs.jwt` was unexpected",
      "path": ".github/workflows/call-bump-pr-workflow.yml",
      "spans": [
        {
          "end": { "col": 52, "line": 41, "offset": 1148 },
          "file": ".github/workflows/call-bump-pr-workflow.yml",
          "start": { "col": 29, "line": 41, "offset": 1125 }
        },
        {
          "end": { "col": 85, "line": 43, "offset": 1165 },
          "file": ".github/workflows/call-bump-pr-workflow.yml",
          "start": { "col": 45, "line": 43, "offset": 1125 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 52, "line": 41, "offset": 1148 },
            "path": ".github/workflows/call-bump-pr-workflow.yml",
            "start": { "col": 29, "line": 41, "offset": 1125 }
          },
          {
            "end": { "col": 85, "line": 43, "offset": 1165 },
            "path": ".github/workflows/call-bump-pr-workflow.yml",
            "start": { "col": 45, "line": 43, "offset": 1125 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/core/Lang.mli:17:\n `t = Language.t =\n  | Apex\n  | Bash\n  | C\n  | Cairo\n  | Clojure\n  | Cpp\n  | Csharp\n  | Dart\n  | Dockerfile\n  | Elixir\n  | Go\n  | Hack\n  | Html\n  | Java\n  | Js\n  | Json\n  | Jsonnet\n  | Julia\n  | Kotlin\n  | Lisp\n  | Lua\n  | Ocaml\n  | Php\n  | Promql\n  | Protobuf\n  | Python2\n  | Python3\n  | Python\n  | R\n  | Ruby\n  | Rust\n  | Scala\n  | Scheme\n  | Solidity\n  | Swift\n  | Terraform\n  | Ts\n  | Vue\n  | Xml\n  | Yaml\n[@@deriving show, eq, hash]\n\n(* unsupported_language_message [lang] takes the language as a string and\n * returns an error message.\n *\n * If the language is \"unset\", it returns a \"no language specified error\"\n * coupling: Main.lang reference.\n * Otherwise it returns an error with the list of supported languages.\n *)\nval unsupported_language_message : string -> string\nval of_string_opt : string -> t option\n\n(* may raise Failure unsupported_language_message *)\nval of_string : string -> t\n\n(*\n   Produce a human-readable representation of the language e.g. \"C#\"\n*)\nval to_string : t -> string\n\n(*\n   Convert to the most standard and unambiguous representation of the\n   language name of form [a-z][a-z0-9]*\n   e.g. 'python3' or 'csharp'.\n\n   This is meant to be URL-friendly, filesystem-friendly, and generally\n   programmer-friendly.\n*)\nval to_lowercase_alnum : t -> string\n\n(*\n   Convert to the most standard and unambiguous representation of the\n   language name of form [A-Z][a-z0-9]*\n   e.g. 'Python3' or 'Csharp'.\n\n   This is meant to be URL-friendly, filesystem-friendly, and generally\n   programmer-friendly. Furthermore, it matches the type name.\n*)\nval to_capitalized_alnum : t -> string\n\n(*\n   Return a list of extensions for a language such that a file with that\n   extension can reasonably be expected to be in that language.\n\n   Dubious extensions like '.php' for Hack files won't be returned by this\n   function because most '.php' files actually contain PHP.\n\n   Likewise, executable scripts without an extension are common for many\n   languages and we don't return <no extension> as a valid suffix\n   for these languages.\n*)\nval ext_of_lang : t -> string list\n\n(*\n   Return a list of extensions that Semgrep will never scan.\n\n   This will be the case even if the extension contains on of ext_of_lang in\n   its tail.\n\n   E.g., if excluded_exts_of_lang is [\".min.js\"], and ext_of_lang is [\".js\"],\n   the file should not be scanned.\n*)\nval excluded_exts_of_lang : t -> string list\n\n(*\n   Return a list of programs that can run a script written in this language.\n*)\nval shebangs_of_lang : t -> string list\n\n(* See also Find_target.files_of_dirs_or_files *)\nval langs_of_filename : Fpath.t -> t list\n\n(* This should be used only in testing code. This may raise\n * Failure \"Could not infer a language from the filename\".\n * Use langs_of_filename() if you can instead.\n *)\nval lang_of_filename_exn : Fpath.t -> t\n\n(* accept any variants *)\nval is_js : t -> bool\n\n(* accept any variants *)\nval is_proprietary : t -> bool\nval lang_map : (string, t) Hashtbl.t\n\n(* Association from a valid name for a language to its unique internal ID. *)\nval assoc : (string * t) list\n\n(* list of languages *)\nval keys : string` was unexpected",
      "path": "src/core/Lang.mli",
      "spans": [
        {
          "end": { "col": 18, "line": 147, "offset": 3128 },
          "file": "src/core/Lang.mli",
          "start": { "col": 6, "line": 17, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 18, "line": 147, "offset": 3128 },
            "path": "src/core/Lang.mli",
            "start": { "col": 6, "line": 17, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line .github/workflows/build-test-osx-arm64.yml:51:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ env.OPAM_SWITCH_NAME` was unexpected",
      "path": ".github/workflows/build-test-osx-arm64.yml",
      "spans": [
        {
          "end": { "col": 72, "line": 51, "offset": 1599 },
          "file": ".github/workflows/build-test-osx-arm64.yml",
          "start": { "col": 50, "line": 51, "offset": 1577 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 72, "line": 51, "offset": 1599 },
            "path": ".github/workflows/build-test-osx-arm64.yml",
            "start": { "col": 50, "line": 51, "offset": 1577 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line libs/commons/Pcre_.mli:44:\n `val regexp :\n  ?study:bool ->\n  ?iflags:Pcre.icflag ->\n  ?flags:Pcre.cflag list ->\n  ?chtables:Pcre.chtables ->\n  string ->\n  t\n\n(*\n   Same as Pcre.pmatch but makes errors explicit.\n   Option '?pat' was removed so as to force the use of our modified 'regexp'\n   function. TODO: add it back for convenience.\n*)\nval pmatch :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?callout:Pcre.callout ->\n  string ->\n  (bool, Pcre.error) result\n\n(* Return 'on_error' in case of a PCRE error. The error is logged. *)\nval pmatch_noerr :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?callout:Pcre.callout ->\n  ?on_error:bool ->\n  string ->\n  bool\n\n(*\n   See notes about 'pmatch'.\n   Additionally, exception 'Not_found' is converted to a 'None' value.\n*)\nval exec :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?callout:Pcre.callout ->\n  string ->\n  (Pcre.substrings option, Pcre.error) result\n\n(* Return 'None' in case of a PCRE error. The error is logged. *)\nval exec_noerr :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?callout:Pcre.callout ->\n  string ->\n  Pcre.substrings option\n\n(*\n   See notes about 'pmatch'.\n   Additionally, exception 'Not_found' is converted to the empty array.\n*)\nval exec_all :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?callout:Pcre.callout ->\n  string ->\n  (Pcre.substrings array, Pcre.error) result\n\n(* Return all captured subgroups as strings.\n   This is useful for debugging in utop. *)\nval exec_to_strings :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?callout:Pcre.callout ->\n  string ->\n  (string array array, Pcre.error) result\n\n(* Return '[| |]' in case of a PCRE error. The error is logged. *)\nval exec_all_noerr :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?callout:Pcre.callout ->\n  string ->\n  Pcre.substrings array\n\n(* See notes about 'pmatch'. *)\nval split :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?max:int ->\n  ?callout:Pcre.callout ->\n  string ->\n  (string list, Pcre.error) result\n\n(* See notes about 'pmatch'. *)\nval full_split :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?max:int ->\n  ?callout:Pcre.callout ->\n  string ->\n  (Pcre.split_result list, Pcre.error) result\n\n(* Return 'on_error' in case of a PCRE error. The error is logged. *)\nval split_noerr :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?max:int ->\n  ?callout:Pcre.callout ->\n  on_error:string list ->\n  string ->\n  string list\n\n(*\n   Register printers for the Pcre module/library so that exceptions show up\n   nicely with 'Printexc.to_string' e.g. 'Pcre.Error(RecursionLimit)'\n   instead of 'Pcre.Error(5)'.\n\n   See issue https://github.com/mmottl/pcre-ocaml/issues/24\n*)\nval register_exception_printer : unit -> unit\n\nval substitute :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?callout:Pcre.callout ->\n  subst:(string -> string) ->\n  string ->\n  string\n(** [substitute] replaces according to the substitution function [subst] *)\n\nval replace_first :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?callout:Pcre.callout ->\n  template:string ->\n  string ->\n  string\n(** [replace_first] replaces the first match according to the substitution template `templ` *)\n\nval replace :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?callout:Pcre.callout ->\n  template:string ->\n  string ->\n  string\n(** [replace] replaces all matches according to the substitution template `templ` *)\n\nval extract_all :\n  ?iflags:Pcre.irflag ->\n  ?flags:Pcre.rflag list ->\n  rex:t ->\n  ?pos:int ->\n  ?full_match:bool ->\n  ?callout:Pcre.callout ->\n  string ->\n  string array array\n\n(*\n   Exception-less version of Pcre.get_named_substring.\n\n   Ok None: variable name is valid but unbound\n   Error msg: no such variable in the original pattern\n*)\nval get_named_substring :\n  t -> string -> Pcre.substrings -> (string option, string) Result.t` was unexpected",
      "path": "libs/commons/Pcre_.mli",
      "spans": [
        {
          "end": { "col": 69, "line": 227, "offset": 4182 },
          "file": "libs/commons/Pcre_.mli",
          "start": { "col": 1, "line": 44, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 69, "line": 227, "offset": 4182 },
            "path": "libs/commons/Pcre_.mli",
            "start": { "col": 1, "line": 44, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line libs/alcotest_ext/Alcotest_ext.mli:86:\n `unit Lwt.t t\n\n(*\n   Create a test to appear in a test suite.\n*)\nval create :` was unexpected",
      "path": "libs/alcotest_ext/Alcotest_ext.mli",
      "spans": [
        {
          "end": { "col": 13, "line": 91, "offset": 76 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 17, "line": 86, "offset": 0 }
        },
        {
          "end": { "col": 4, "line": 107, "offset": 5 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 12, "line": 106, "offset": 0 }
        },
        {
          "end": { "col": 13, "line": 107, "offset": 1 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 12, "line": 107, "offset": 0 }
        },
        {
          "end": { "col": 14, "line": 117, "offset": 1 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 13, "line": 117, "offset": 0 }
        },
        {
          "end": { "col": 18, "line": 120, "offset": 1 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 17, "line": 120, "offset": 0 }
        },
        {
          "end": { "col": 11, "line": 131, "offset": 330 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 44, "line": 120, "offset": 0 }
        },
        {
          "end": { "col": 15, "line": 138, "offset": 20 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 3, "line": 136, "offset": 0 }
        },
        {
          "end": { "col": 27, "line": 146, "offset": 1 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 26, "line": 146, "offset": 0 }
        },
        {
          "end": { "col": 31, "line": 147, "offset": 1 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 30, "line": 147, "offset": 0 }
        },
        {
          "end": { "col": 21, "line": 155, "offset": 1 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 20, "line": 155, "offset": 0 }
        },
        {
          "end": { "col": 18, "line": 156, "offset": 1 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 17, "line": 156, "offset": 0 }
        },
        {
          "end": { "col": 17, "line": 160, "offset": 1 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 16, "line": 160, "offset": 0 }
        },
        {
          "end": { "col": 13, "line": 171, "offset": 3 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 10, "line": 171, "offset": 0 }
        },
        {
          "end": { "col": 18, "line": 192, "offset": 1 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 17, "line": 192, "offset": 0 }
        },
        {
          "end": { "col": 22, "line": 193, "offset": 1 },
          "file": "libs/alcotest_ext/Alcotest_ext.mli",
          "start": { "col": 21, "line": 193, "offset": 0 }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": { "col": 13, "line": 91, "offset": 76 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 17, "line": 86, "offset": 0 }
          },
          {
            "end": { "col": 4, "line": 107, "offset": 5 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 12, "line": 106, "offset": 0 }
          },
          {
            "end": { "col": 13, "line": 107, "offset": 1 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 12, "line": 107, "offset": 0 }
          },
          {
            "end": { "col": 14, "line": 117, "offset": 1 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 13, "line": 117, "offset": 0 }
          },
          {
            "end": { "col": 18, "line": 120, "offset": 1 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 17, "line": 120, "offset": 0 }
          },
          {
            "end": { "col": 11, "line": 131, "offset": 330 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 44, "line": 120, "offset": 0 }
          },
          {
            "end": { "col": 15, "line": 138, "offset": 20 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 3, "line": 136, "offset": 0 }
          },
          {
            "end": { "col": 27, "line": 146, "offset": 1 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 26, "line": 146, "offset": 0 }
          },
          {
            "end": { "col": 31, "line": 147, "offset": 1 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 30, "line": 147, "offset": 0 }
          },
          {
            "end": { "col": 21, "line": 155, "offset": 1 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 20, "line": 155, "offset": 0 }
          },
          {
            "end": { "col": 18, "line": 156, "offset": 1 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 17, "line": 156, "offset": 0 }
          },
          {
            "end": { "col": 17, "line": 160, "offset": 1 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 16, "line": 160, "offset": 0 }
          },
          {
            "end": { "col": 13, "line": 171, "offset": 3 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 10, "line": 171, "offset": 0 }
          },
          {
            "end": { "col": 18, "line": 192, "offset": 1 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 17, "line": 192, "offset": 0 }
          },
          {
            "end": { "col": 22, "line": 193, "offset": 1 },
            "path": "libs/alcotest_ext/Alcotest_ext.mli",
            "start": { "col": 21, "line": 193, "offset": 0 }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line src/targeting/Find_targets.ml:115:\n `:` was unexpected",
      "path": "src/targeting/Find_targets.ml",
      "type": "Syntax error"
    },
    {
      "code": 2,
      "level": "warn",
      "message": "Timeout when running python.django.security.audit.xss.template-translate-as-no-escape.template-translate-as-no-escape on src/osemgrep/cli_interactive/Interactive_subcommand.ml:\n ",
      "path": "src/osemgrep/cli_interactive/Interactive_subcommand.ml",
      "rule_id": "python.django.security.audit.xss.template-translate-as-no-escape.template-translate-as-no-escape",
      "type": "Timeout"
    },
    {
      "code": 2,
      "level": "warn",
      "message": "Timeout when running python.boto3.security.hardcoded-token.hardcoded-token on tests/perf/my_first_calculator.py:\n ",
      "path": "tests/perf/my_first_calculator.py",
      "rule_id": "python.boto3.security.hardcoded-token.hardcoded-token",
      "type": "Timeout"
    }
  ],
  "interfile_languages_used": [],
  "paths": {
    "scanned": [
      ".circleci/README.md",
      ".circleci/config.yml",
      ".codemapignore",
      ".dockerignore",
      ".gitattributes",
      ".github/CODEOWNERS",
      ".github/ISSUE_TEMPLATE/bug_report.md",
      ".github/ISSUE_TEMPLATE/feature_request.md",
      ".github/PULL_REQUEST_TEMPLATE/release_pr_template.md",
      ".github/actionlint.yaml",
      ".github/pull_request_template.md",
      ".github/stale.yml",
      ".github/workflows/.codemapignore",
      ".github/workflows/Makefile",
      ".github/workflows/README.md",
      ".github/workflows/build-test-core-x86-ocaml5.jsonnet",
      ".github/workflows/build-test-core-x86-ocaml5.yml",
      ".github/workflows/build-test-core-x86.jsonnet",
      ".github/workflows/build-test-core-x86.yml",
      ".github/workflows/build-test-docker.yaml",
      ".github/workflows/build-test-javascript.jsonnet",
      ".github/workflows/build-test-javascript.yml",
      ".github/workflows/build-test-manylinux-aarch64.jsonnet",
      ".github/workflows/build-test-manylinux-aarch64.yml",
      ".github/workflows/build-test-manylinux-x86.jsonnet",
      ".github/workflows/build-test-manylinux-x86.yml",
      ".github/workflows/build-test-osx-arm64.jsonnet",
      ".github/workflows/build-test-osx-arm64.yml",
      ".github/workflows/build-test-osx-x86.jsonnet",
      ".github/workflows/build-test-osx-x86.yml",
      ".github/workflows/call-bump-pr-workflow.yml",
      ".github/workflows/check-semgrep-pro-version.yml",
      ".github/workflows/check-semgrep-pro.jsonnet",
      ".github/workflows/check-semgrep-pro.yml",
      ".github/workflows/libs/actions.libsonnet",
      ".github/workflows/libs/gha.libsonnet",
      ".github/workflows/libs/semgrep.libsonnet",
      ".github/workflows/libs/util.libsonnet",
      ".github/workflows/lint.jsonnet",
      ".github/workflows/lint.yml",
      ".github/workflows/nightly.jsonnet",
      ".github/workflows/nightly.yml",
      ".github/workflows/open-bump-pr.yml",
      ".github/workflows/pr-checklist.yaml",
      ".github/workflows/promote-canary-to-latest.yml",
      ".github/workflows/push-docker.yaml",
      ".github/workflows/release.yml",
      ".github/workflows/semgrep.jsonnet",
      ".github/workflows/semgrep.yml",
      ".github/workflows/set-semgrep-docker-tag.yml",
      ".github/workflows/start-release.yml",
      ".github/workflows/test-e2e-semgrep-ci.jsonnet",
      ".github/workflows/test-e2e-semgrep-ci.yml",
      ".github/workflows/test-pro-rules.jsonnet",
      ".github/workflows/test-pro-rules.yml",
      ".github/workflows/test-semgrep-pro.yaml",
      ".github/workflows/tests.jsonnet",
      ".github/workflows/tests.yml",
      ".github/workflows/trigger-doc-update.yml",
      ".github/workflows/trigger-semgrep-comparison-argo.jsonnet",
      ".github/workflows/trigger-semgrep-comparison-argo.yml",
      ".github/workflows/update-semgrep-rules.jsonnet",
      ".github/workflows/update-semgrep-rules.yml",
      ".github/workflows/validate-release.yml",
      ".gitignore",
      ".gitmodules",
      ".ocamlformat",
      ".pre-commit-config.yaml",
      ".pre-commit-hooks.yaml",
      ".semgrepignore",
      ".vscode/extensions.json",
      ".vscode/launch.json",
      ".vscode/tasks.json",
      "CHANGELOG.md",
      "CODE_OF_CONDUCT.md",
      "CONTRIBUTING.md",
      "COPYRIGHT",
      "Dockerfile",
      "INSTALL.md",
      "LICENSE",
      "Makefile",
      "PRIVACY.md",
      "README.md",
      "SECURITY.md",
      "TCB/Cap.ml",
      "TCB/Cap.mli",
      "TCB/CapStdlib.ml",
      "TCB/CapStdlib.mli",
      "TCB/CapSys.ml",
      "TCB/CapSys.mli",
      "TCB/No_TCB.ml",
      "TCB/TCB.ml",
      "TCB/dune",
      "TCB/semgrep_TCB.jsonnet",
      "changelog.d/README",
      "changelog.d/ea-268.changed",
      "changelog.d/gh-1234.example",
      "changelog.d/pa-3262.fixed",
      "changelog.d/pa-3284.added",
      "changelog.d/pa-3284.fixed",
      "changelog.d/rust.fixed",
      "changelog.d/scrt-271.changed",
      "cli/MANIFEST.in",
      "cli/Makefile",
      "cli/Pipfile",
      "cli/Pipfile.lock",
      "cli/bin/pysemgrep",
      "cli/bin/semgrep",
      "cli/bin/sg",
      "cli/park.cfg",
      "cli/pyproject.toml",
      "cli/setup.py",
      "cli/src/semdep/__init__.py",
      "cli/src/semdep/external/__init__.py",
      "cli/src/semdep/external/packaging/LICENSE",
      "cli/src/semdep/external/packaging/LICENSE.APACHE",
      "cli/src/semdep/external/packaging/LICENSE.BSD",
      "cli/src/semdep/external/packaging/README",
      "cli/src/semdep/external/packaging/__about__.py",
      "cli/src/semdep/external/packaging/__init__.py",
      "cli/src/semdep/external/packaging/_manylinux.py",
      "cli/src/semdep/external/packaging/_musllinux.py",
      "cli/src/semdep/external/packaging/_structures.py",
      "cli/src/semdep/external/packaging/py.typed",
      "cli/src/semdep/external/packaging/specifiers.py",
      "cli/src/semdep/external/packaging/tags.py",
      "cli/src/semdep/external/packaging/utils.py",
      "cli/src/semdep/external/packaging/version.py",
      "cli/src/semdep/external/parsy/LICENSE",
      "cli/src/semdep/external/parsy/README.rst",
      "cli/src/semdep/external/parsy/VENDOR_README.md",
      "cli/src/semdep/external/parsy/__init__.py",
      "cli/src/semdep/external/parsy/__init__.pyi",
      "cli/src/semdep/external/parsy/version.py",
      "cli/src/semdep/maven_version.py",
      "cli/src/semdep/package_restrictions.py",
      "cli/src/semdep/parse_lockfile.py",
      "cli/src/semdep/parsers/__init__.py",
      "cli/src/semdep/parsers/composer.py",
      "cli/src/semdep/parsers/gem.py",
      "cli/src/semdep/parsers/go_mod.py",
      "cli/src/semdep/parsers/gradle.py",
      "cli/src/semdep/parsers/package_lock.py",
      "cli/src/semdep/parsers/packages_lock_c_sharp.py",
      "cli/src/semdep/parsers/pipfile.py",
      "cli/src/semdep/parsers/pnpm.py",
      "cli/src/semdep/parsers/poetry.py",
      "cli/src/semdep/parsers/pom_tree.py",
      "cli/src/semdep/parsers/preprocessors.py",
      "cli/src/semdep/parsers/pubspec_lock.py",
      "cli/src/semdep/parsers/requirements.py",
      "cli/src/semdep/parsers/util.py",
      "cli/src/semdep/parsers/yarn.py",
      "cli/src/semgrep/__init__.py",
      "cli/src/semgrep/__main__.py",
      "cli/src/semgrep/app/__init__.py",
      "cli/src/semgrep/app/auth.py",
      "cli/src/semgrep/app/project_config.py",
      "cli/src/semgrep/app/scans.py",
      "cli/src/semgrep/app/session.py",
      "cli/src/semgrep/app/version.py",
      "cli/src/semgrep/autofix.py",
      "cli/src/semgrep/bin/__init__.py",
      "cli/src/semgrep/bytesize.py",
      "cli/src/semgrep/cli.py",
      "cli/src/semgrep/commands/__init__.py",
      "cli/src/semgrep/commands/ci.py",
      "cli/src/semgrep/commands/install.py",
      "cli/src/semgrep/commands/login.py",
      "cli/src/semgrep/commands/publish.py",
      "cli/src/semgrep/commands/scan.py",
      "cli/src/semgrep/commands/wrapper.py",
      "cli/src/semgrep/config_resolver.py",
      "cli/src/semgrep/console.py",
      "cli/src/semgrep/constants.py",
      "cli/src/semgrep/core_output.py",
      "cli/src/semgrep/core_runner.py",
      "cli/src/semgrep/core_targets_plan.py",
      "cli/src/semgrep/default_group.py",
      "cli/src/semgrep/dependency_aware_rule.py",
      "cli/src/semgrep/engine.py",
      "cli/src/semgrep/env.py",
      "cli/src/semgrep/error.py",
      "cli/src/semgrep/error_handler.py",
      "cli/src/semgrep/exclude_rules.py",
      "cli/src/semgrep/external/__init__.py",
      "cli/src/semgrep/external/git_url_parser.py",
      "cli/src/semgrep/external/junit_xml.py",
      "cli/src/semgrep/external/pymmh3.py",
      "cli/src/semgrep/fork_subprocess.py",
      "cli/src/semgrep/formatter/__init__.py",
      "cli/src/semgrep/formatter/base.py",
      "cli/src/semgrep/formatter/emacs.py",
      "cli/src/semgrep/formatter/gitlab_sast.py",
      "cli/src/semgrep/formatter/gitlab_secrets.py",
      "cli/src/semgrep/formatter/json.py",
      "cli/src/semgrep/formatter/junit_xml.py",
      "cli/src/semgrep/formatter/sarif.py",
      "cli/src/semgrep/formatter/text.py",
      "cli/src/semgrep/formatter/vim.py",
      "cli/src/semgrep/git.py",
      "cli/src/semgrep/ignores.py",
      "cli/src/semgrep/join_rule.py",
      "cli/src/semgrep/main.py",
      "cli/src/semgrep/meta.py",
      "cli/src/semgrep/metrics.py",
      "cli/src/semgrep/nosemgrep.py",
      "cli/src/semgrep/notifications.py",
      "cli/src/semgrep/output.py",
      "cli/src/semgrep/output_extra.py",
      "cli/src/semgrep/parsing_data.py",
      "cli/src/semgrep/profile_manager.py",
      "cli/src/semgrep/rule.py",
      "cli/src/semgrep/rule_lang.py",
      "cli/src/semgrep/rule_match.py",
      "cli/src/semgrep/run_scan.py",
      "cli/src/semgrep/scan_report.py",
      "cli/src/semgrep/semgrep_core.py",
      "cli/src/semgrep/semgrep_types.py",
      "cli/src/semgrep/settings.py",
      "cli/src/semgrep/state.py",
      "cli/src/semgrep/target_manager.py",
      "cli/src/semgrep/target_mode.py",
      "cli/src/semgrep/templates/.semgrepignore",
      "cli/src/semgrep/terminal.py",
      "cli/src/semgrep/test.py",
      "cli/src/semgrep/types.py",
      "cli/src/semgrep/util.py",
      "cli/src/semgrep/verbose_logging.py",
      "cli/stubs/astpretty.pyi",
      "cli/stubs/boltons/__init__.pyi",
      "cli/stubs/boltons/cacheutils.pyi",
      "cli/stubs/boltons/debugutils.pyi",
      "cli/stubs/boltons/deprutils.pyi",
      "cli/stubs/boltons/dictutils.pyi",
      "cli/stubs/boltons/easterutils.pyi",
      "cli/stubs/boltons/ecoutils.pyi",
      "cli/stubs/boltons/excutils.pyi",
      "cli/stubs/boltons/fileutils.pyi",
      "cli/stubs/boltons/formatutils.pyi",
      "cli/stubs/boltons/funcutils.pyi",
      "cli/stubs/boltons/gcutils.pyi",
      "cli/stubs/boltons/ioutils.pyi",
      "cli/stubs/boltons/iterutils.pyi",
      "cli/stubs/boltons/jsonutils.pyi",
      "cli/stubs/boltons/listutils.pyi",
      "cli/stubs/boltons/mathutils.pyi",
      "cli/stubs/boltons/mboxutils.pyi",
      "cli/stubs/boltons/namedutils.pyi",
      "cli/stubs/boltons/queueutils.pyi",
      "cli/stubs/boltons/setutils.pyi",
      "cli/stubs/boltons/socketutils.pyi",
      "cli/stubs/boltons/statsutils.pyi",
      "cli/stubs/boltons/strutils.pyi",
      "cli/stubs/boltons/tableutils.pyi",
      "cli/stubs/boltons/tbutils.pyi",
      "cli/stubs/boltons/timeutils.pyi",
      "cli/stubs/boltons/typeutils.pyi",
      "cli/stubs/boltons/urlutils.pyi",
      "cli/stubs/click_option_group/__init__.py",
      "cli/stubs/click_option_group/optgroup.pyi",
      "cli/stubs/glom/__init__.pyi",
      "cli/stubs/glom/core.pyi",
      "cli/stubs/packaging/__init__.py",
      "cli/stubs/packaging/version.pyi",
      "cli/stubs/ruamel/__init__.py",
      "cli/stubs/ruamel/yaml.pyi",
      "cli/tests/README.md",
      "cli/tests/__init__.py",
      "cli/tests/check-markers",
      "cli/tests/conftest.py",
      "cli/tests/consistency/__init__.py",
      "cli/tests/consistency/test_lang_consistency.py",
      "cli/tests/e2e/__init__.py",
      "cli/tests/e2e/rules/aliengrep/begin-end.yaml",
      "cli/tests/e2e/rules/aliengrep/dockerfile.yaml",
      "cli/tests/e2e/rules/aliengrep/html.yaml",
      "cli/tests/e2e/rules/aliengrep/httpresponse.yaml",
      "cli/tests/e2e/rules/aliengrep/long-match.yaml",
      "cli/tests/e2e/rules/aliengrep/markdown.yaml",
      "cli/tests/e2e/rules/aliengrep/multi-lines.yaml",
      "cli/tests/e2e/rules/aliengrep/nosem-html.yaml",
      "cli/tests/e2e/rules/aliengrep/terraform.yaml",
      "cli/tests/e2e/rules/autofix/autofix.yaml",
      "cli/tests/e2e/rules/autofix/csv-writer.yaml",
      "cli/tests/e2e/rules/autofix/defaulthttpclient.yaml",
      "cli/tests/e2e/rules/autofix/django-none-password-default.yaml",
      "cli/tests/e2e/rules/autofix/exact-collision.yaml",
      "cli/tests/e2e/rules/autofix/flask-use-jsonify.yaml",
      "cli/tests/e2e/rules/autofix/imported-entity.yaml",
      "cli/tests/e2e/rules/autofix/java-string-wrap.yaml",
      "cli/tests/e2e/rules/autofix/ocaml_paren_expr.yaml",
      "cli/tests/e2e/rules/autofix/overlapping-collision.yaml",
      "cli/tests/e2e/rules/autofix/python-assert-statement.yaml",
      "cli/tests/e2e/rules/autofix/python-delete-import.yaml",
      "cli/tests/e2e/rules/autofix/python-ranges.yaml",
      "cli/tests/e2e/rules/autofix/requests-use-timeout.yaml",
      "cli/tests/e2e/rules/autofix/terraform-ec2-instance-metadata-options.yaml",
      "cli/tests/e2e/rules/autofix/three-autofixes.yaml",
      "cli/tests/e2e/rules/autofix/two-autofixes.yaml",
      "cli/tests/e2e/rules/autofix/yaml-excessive-mapping-capture.yaml",
      "cli/tests/e2e/rules/bad-java-rule.yaml",
      "cli/tests/e2e/rules/cli_test/basic/basic.yaml",
      "cli/tests/e2e/rules/cli_test/error/long.py",
      "cli/tests/e2e/rules/cli_test/error/long.yaml",
      "cli/tests/e2e/rules/cli_test/ignore_rule_paths/foo.yaml",
      "cli/tests/e2e/rules/cli_test/language/yaml_language.yaml",
      "cli/tests/e2e/rules/cli_test/match_diff_rules_same_msg/src.py",
      "cli/tests/e2e/rules/cli_test/match_rules_same_message/rules.yml",
      "cli/tests/e2e/rules/cli_test/multiple_annotations/multiple-annotations.yaml",
      "cli/tests/e2e/rules/cli_test/parse_errors/eqeq.yaml",
      "cli/tests/e2e/rules/cli_test/parse_errors/func.yaml",
      "cli/tests/e2e/rules/cli_test/suffixes/this.that.check.yaml",
      "cli/tests/e2e/rules/deduplication/duplication-different-message.yaml",
      "cli/tests/e2e/rules/deduplication/duplication-same-message.yaml",
      "cli/tests/e2e/rules/dependency_aware/ansi-html.yaml",
      "cli/tests/e2e/rules/dependency_aware/awscli_vuln.yaml",
      "cli/tests/e2e/rules/dependency_aware/dart-parity.yaml",
      "cli/tests/e2e/rules/dependency_aware/generic-sca.yaml",
      "cli/tests/e2e/rules/dependency_aware/go-sca.yaml",
      "cli/tests/e2e/rules/dependency_aware/gradle-guava.yaml",
      "cli/tests/e2e/rules/dependency_aware/java-gradle-sca.yaml",
      "cli/tests/e2e/rules/dependency_aware/js-pnpm-sca.yaml",
      "cli/tests/e2e/rules/dependency_aware/js-sca.yaml",
      "cli/tests/e2e/rules/dependency_aware/js-yarn2-sca.yaml",
      "cli/tests/e2e/rules/dependency_aware/lodash-4.17.19.yaml",
      "cli/tests/e2e/rules/dependency_aware/log4shell.yaml",
      "cli/tests/e2e/rules/dependency_aware/maven-guice.yaml",
      "cli/tests/e2e/rules/dependency_aware/monorepo.yaml",
      "cli/tests/e2e/rules/dependency_aware/monorepo_with_first_party.yaml",
      "cli/tests/e2e/rules/dependency_aware/nested_package_lock.yaml",
      "cli/tests/e2e/rules/dependency_aware/no-pattern.yaml",
      "cli/tests/e2e/rules/dependency_aware/nuget-sca-simple.yaml",
      "cli/tests/e2e/rules/dependency_aware/php-sca.yaml",
      "cli/tests/e2e/rules/dependency_aware/python-pipfile-sca.yaml",
      "cli/tests/e2e/rules/dependency_aware/python-poetry-sca.yaml",
      "cli/tests/e2e/rules/dependency_aware/python-requirements-sca.yaml",
      "cli/tests/e2e/rules/dependency_aware/ruby-sca.yaml",
      "cli/tests/e2e/rules/dependency_aware/rust-sca.yaml",
      "cli/tests/e2e/rules/dependency_aware/transitive_and_direct.yaml",
      "cli/tests/e2e/rules/dependency_aware/yarn-sass.yaml",
      "cli/tests/e2e/rules/duplicate-rule.yaml",
      "cli/tests/e2e/rules/eqeq-basic.yaml",
      "cli/tests/e2e/rules/eqeq-meta.yaml",
      "cli/tests/e2e/rules/eqeq-python.yaml",
      "cli/tests/e2e/rules/eqeq-source.yml",
      "cli/tests/e2e/rules/eqeq.yaml",
      "cli/tests/e2e/rules/experiment/experiment.yaml",
      "cli/tests/e2e/rules/experiment-rule.yaml",
      "cli/tests/e2e/rules/extra_field.yaml",
      "cli/tests/e2e/rules/extract_rules/js_html_concat.yaml",
      "cli/tests/e2e/rules/extract_rules/python_jupyter_paths_exclude.yaml",
      "cli/tests/e2e/rules/extract_rules/python_jupyter_paths_include.yaml",
      "cli/tests/e2e/rules/fixtest/test1.yaml",
      "cli/tests/e2e/rules/fixtest/test2.yaml",
      "cli/tests/e2e/rules/fixtest/test3.yaml",
      "cli/tests/e2e/rules/fixtest/test4.yaml",
      "cli/tests/e2e/rules/fixtest/test5.yaml",
      "cli/tests/e2e/rules/hidden/.hidden/eqeq.yaml",
      "cli/tests/e2e/rules/inside.yaml",
      "cli/tests/e2e/rules/invalid-rules/additional-invalid-pattern-operator.yaml",
      "cli/tests/e2e/rules/invalid-rules/invalid-metavariable-regex.yaml",
      "cli/tests/e2e/rules/invalid-rules/invalid-missing-top-item.yaml",
      "cli/tests/e2e/rules/invalid-rules/invalid-pattern-child.yaml",
      "cli/tests/e2e/rules/invalid-rules/invalid-pattern-operator.yaml",
      "cli/tests/e2e/rules/invalid-rules/invalid-pattern.yaml",
      "cli/tests/e2e/rules/invalid-rules/missing-hyphen.yaml",
      "cli/tests/e2e/rules/invalid-rules/string-pattern-under-patterns.yaml",
      "cli/tests/e2e/rules/invalid-rules/string-pattern.yaml",
      "cli/tests/e2e/rules/inventory/invent.yaml",
      "cli/tests/e2e/rules/inventory-rule.yaml",
      "cli/tests/e2e/rules/join_rules/inline/inline-rules.yaml",
      "cli/tests/e2e/rules/join_rules/inline/taint.yaml",
      "cli/tests/e2e/rules/join_rules/multiple-rules.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/flask-deep-stored-xss-example/flask-stored-xss.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/flask-deep-stored-xss-example/rule-parts/callgraph.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/flask-deep-stored-xss-example/rule-parts/callgraph2.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/flask-deep-stored-xss-example/rule-parts/model-data-returned.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/flask-deep-stored-xss-example/rule-parts/models.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/flask-deep-stored-xss-example/rule-parts/param-saved-in-model.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/flask-deep-stored-xss-example/rule-parts/template-variables.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/flask-deep-stored-xss-example/rule-parts/unsafely-rendered-data.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/flask-deep-stored-xss-example/rule-parts/unsanitized-data-sink.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/java-callgraph-example/rule-parts/java-callgraph.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/java-callgraph-example/rule-parts/java-spring-user-input.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/java-callgraph-example/rule-parts/method-parameter-formatted-sql.yaml",
      "cli/tests/e2e/rules/join_rules/recursive/java-callgraph-example/vulnado-sqli.yaml",
      "cli/tests/e2e/rules/join_rules/rule_parts/any-template-var.yaml",
      "cli/tests/e2e/rules/join_rules/rule_parts/flask-user-input.yaml",
      "cli/tests/e2e/rules/join_rules/rule_parts/java-callgraph.yaml",
      "cli/tests/e2e/rules/join_rules/rule_parts/method-parameter-formatted-sql.yaml",
      "cli/tests/e2e/rules/join_rules/rule_parts/render-template-input.yaml",
      "cli/tests/e2e/rules/join_rules/rule_parts/template-var-safe.yaml",
      "cli/tests/e2e/rules/join_rules/rule_parts/unescaped-template-extension.yaml",
      "cli/tests/e2e/rules/join_rules/rule_parts/user-input.yaml",
      "cli/tests/e2e/rules/join_rules/user-input-escaped-with-safe.yaml",
      "cli/tests/e2e/rules/join_rules/user-input-with-unescaped-extension.yaml",
      "cli/tests/e2e/rules/jsonnet/example_rule.yaml",
      "cli/tests/e2e/rules/jsonnet/lib/template.libsonnet",
      "cli/tests/e2e/rules/jsonnet/part_of_rule.unknown_yaml_extension",
      "cli/tests/e2e/rules/jsonnet/python/basic.jsonnet",
      "cli/tests/e2e/rules/language-filtering.yaml",
      "cli/tests/e2e/rules/long.yaml",
      "cli/tests/e2e/rules/match_based_id/duplicates.yaml",
      "cli/tests/e2e/rules/match_based_id/formatting.yaml",
      "cli/tests/e2e/rules/match_based_id/join.yaml",
      "cli/tests/e2e/rules/match_based_id/operator.yaml",
      "cli/tests/e2e/rules/message_interpolation/multi-pattern-inside.yaml",
      "cli/tests/e2e/rules/message_interpolation/pattern-either.yaml",
      "cli/tests/e2e/rules/message_interpolation/pattern-inside.yaml",
      "cli/tests/e2e/rules/message_interpolation/pattern-not-inside.yaml",
      "cli/tests/e2e/rules/message_interpolation/propagated-constant.yaml",
      "cli/tests/e2e/rules/metavariable-comparison-bad-content.yaml",
      "cli/tests/e2e/rules/metavariable-comparison-base.yaml",
      "cli/tests/e2e/rules/metavariable-comparison-strip.yaml",
      "cli/tests/e2e/rules/metavariable-comparison.yaml",
      "cli/tests/e2e/rules/metavariable-pattern/test1.json",
      "cli/tests/e2e/rules/metavariable-pattern/test2.yaml",
      "cli/tests/e2e/rules/metavariable-regex-const-prop.yaml",
      "cli/tests/e2e/rules/metavariable-regex-multi-regex.yaml",
      "cli/tests/e2e/rules/metavariable-regex-multi-rule.yaml",
      "cli/tests/e2e/rules/metavariable-regex.yaml",
      "cli/tests/e2e/rules/metavariable_propagation/metavariable-comparison-propagation.yaml",
      "cli/tests/e2e/rules/metavariable_propagation/metavariable-regex-propagation.yaml",
      "cli/tests/e2e/rules/metrics_send/deep.yaml",
      "cli/tests/e2e/rules/metrics_send/taint_assume_safe_numbers1.yaml",
      "cli/tests/e2e/rules/multi-focus-metavariable.yaml",
      "cli/tests/e2e/rules/multi_config_fail/error.yaml",
      "cli/tests/e2e/rules/multi_config_fail/no_error.yaml",
      "cli/tests/e2e/rules/multiline.yaml",
      "cli/tests/e2e/rules/multiple-long.yaml",
      "cli/tests/e2e/rules/nested-pattern-either.yaml",
      "cli/tests/e2e/rules/nested-patterns.yaml",
      "cli/tests/e2e/rules/nosem.yaml",
      "cli/tests/e2e/rules/numeric-regex-capture-rule.yaml",
      "cli/tests/e2e/rules/paths.yaml",
      "cli/tests/e2e/rules/pattern-not-regex/issue2465.yaml",
      "cli/tests/e2e/rules/pattern-not-regex/regex-not-with-pattern-regex.yaml",
      "cli/tests/e2e/rules/pattern-not-regex/regex-not.yaml",
      "cli/tests/e2e/rules/pattern-not-regex/regex-not2.yaml",
      "cli/tests/e2e/rules/pattern-regex-empty-file.yaml",
      "cli/tests/e2e/rules/per-rule-include.yaml",
      "cli/tests/e2e/rules/pro-rule-skipping-no-parsing.yaml",
      "cli/tests/e2e/rules/pro-rule-skipping.yaml",
      "cli/tests/e2e/rules/promql-duration-capture.yaml",
      "cli/tests/e2e/rules/regex-any-language-alias-none.yaml",
      "cli/tests/e2e/rules/regex-any-language-invalid.yaml",
      "cli/tests/e2e/rules/regex-any-language-multiple-alias-none.yaml",
      "cli/tests/e2e/rules/regex-any-language-multiple.yaml",
      "cli/tests/e2e/rules/regex-any-language.yaml",
      "cli/tests/e2e/rules/regex-capture-groups.yaml",
      "cli/tests/e2e/rules/regex-child.yaml",
      "cli/tests/e2e/rules/regex-invalid.yaml",
      "cli/tests/e2e/rules/regex-nosemgrep.yaml",
      "cli/tests/e2e/rules/regex-top.yaml",
      "cli/tests/e2e/rules/regex-utf8.yaml",
      "cli/tests/e2e/rules/rule-board-eqeq.yaml",
      "cli/tests/e2e/rules/rule_id/;/hello.yml",
      "cli/tests/e2e/rules/rule_id/@/hello.yml",
      "cli/tests/e2e/rules/rule_id/@npm-style/hello.yml",
      "cli/tests/e2e/rules/secrets.yaml",
      "cli/tests/e2e/rules/sort-findings.yaml",
      "cli/tests/e2e/rules/spacegrep/dockerfile.yaml",
      "cli/tests/e2e/rules/spacegrep/html.yaml",
      "cli/tests/e2e/rules/spacegrep/httpresponse.yaml",
      "cli/tests/e2e/rules/spacegrep/markdown.yaml",
      "cli/tests/e2e/rules/spacegrep/multi-lines.yaml",
      "cli/tests/e2e/rules/spacegrep/nosem-html.yaml",
      "cli/tests/e2e/rules/spacegrep/terraform.yaml",
      "cli/tests/e2e/rules/syntax/bad-three-layers.yaml",
      "cli/tests/e2e/rules/syntax/bad1.yaml",
      "cli/tests/e2e/rules/syntax/bad10.yaml",
      "cli/tests/e2e/rules/syntax/bad11.yaml",
      "cli/tests/e2e/rules/syntax/bad12.yaml",
      "cli/tests/e2e/rules/syntax/bad13.yaml",
      "cli/tests/e2e/rules/syntax/bad14.yaml",
      "cli/tests/e2e/rules/syntax/bad15.yaml",
      "cli/tests/e2e/rules/syntax/bad16.yaml",
      "cli/tests/e2e/rules/syntax/bad2.yaml",
      "cli/tests/e2e/rules/syntax/bad3.yaml",
      "cli/tests/e2e/rules/syntax/bad4.yaml",
      "cli/tests/e2e/rules/syntax/bad5.yaml",
      "cli/tests/e2e/rules/syntax/bad6.yaml",
      "cli/tests/e2e/rules/syntax/bad7.yaml",
      "cli/tests/e2e/rules/syntax/bad8.yaml",
      "cli/tests/e2e/rules/syntax/bad9.yaml",
      "cli/tests/e2e/rules/syntax/badlanguage.yaml",
      "cli/tests/e2e/rules/syntax/badpaths1.yaml",
      "cli/tests/e2e/rules/syntax/badpaths2.yaml",
      "cli/tests/e2e/rules/syntax/badpattern.yaml",
      "cli/tests/e2e/rules/syntax/empty.yaml",
      "cli/tests/e2e/rules/syntax/good.yaml",
      "cli/tests/e2e/rules/syntax/good_info_severity.yaml",
      "cli/tests/e2e/rules/syntax/good_metadata.yaml",
      "cli/tests/e2e/rules/syntax/good_metadata_supply_chain.yaml",
      "cli/tests/e2e/rules/syntax/good_new_syntax.yaml",
      "cli/tests/e2e/rules/syntax/good_new_syntax_taint.yaml",
      "cli/tests/e2e/rules/syntax/good_new_syntax_taint_no_mode.yaml",
      "cli/tests/e2e/rules/syntax/invalid-key-name.yml",
      "cli/tests/e2e/rules/syntax/invalid-metavariable-regex.yml",
      "cli/tests/e2e/rules/syntax/invalid-patterns-key.yml",
      "cli/tests/e2e/rules/syntax/invalid.yaml",
      "cli/tests/e2e/rules/syntax/missing-field.yaml",
      "cli/tests/e2e/rules/syntax/missing-toplevel.yaml",
      "cli/tests/e2e/rules/taint.yaml",
      "cli/tests/e2e/rules/taint_trace.yaml",
      "cli/tests/e2e/rules/version-constraints.yaml",
      "cli/tests/e2e/rules/yaml_capture.yaml",
      "cli/tests/e2e/rules/yaml_key.yaml",
      "cli/tests/e2e/test_aliengrep.py",
      "cli/tests/e2e/test_autofix.py",
      "cli/tests/e2e/test_baseline.py",
      "cli/tests/e2e/test_check.py",
      "cli/tests/e2e/test_cli_test.py",
      "cli/tests/e2e/test_cli_test_fixtest.py",
      "cli/tests/e2e/test_exclude_include.py",
      "cli/tests/e2e/test_extract.py",
      "cli/tests/e2e/test_help.py",
      "cli/tests/e2e/test_ignores.py",
      "cli/tests/e2e/test_max_target_bytes.py",
      "cli/tests/e2e/test_message_interpolation.py",
      "cli/tests/e2e/test_metavariable_matching.py",
      "cli/tests/e2e/test_metavariable_pattern.py",
      "cli/tests/e2e/test_metavariable_regex_const_prop.py",
      "cli/tests/e2e/test_metrics.py",
      "cli/tests/e2e/test_missing_file.py",
      "cli/tests/e2e/test_multi_config_fail.py",
      "cli/tests/e2e/test_nosemgrep.py",
      "cli/tests/e2e/test_output.py",
      "cli/tests/e2e/test_output_sarif.py",
      "cli/tests/e2e/test_parse_rate_metrics.py",
      "cli/tests/e2e/test_paths.py",
      "cli/tests/e2e/test_rule_id.py",
      "cli/tests/e2e/test_rule_parser.py",
      "cli/tests/e2e/test_rule_validation.py",
      "cli/tests/e2e/test_semgrep_core_parse_error.py",
      "cli/tests/e2e/test_severity.py",
      "cli/tests/e2e/test_spacegrep.py",
      "cli/tests/e2e/test_version.py",
      "cli/tests/e2e/test_version_constraints.py",
      "cli/tests/e2e-pro/test_api.py",
      "cli/tests/e2e-pro/test_ci.py",
      "cli/tests/e2e-pro/test_dependency_aware_rules.py",
      "cli/tests/e2e-pro/test_download_config.py",
      "cli/tests/e2e-pro/test_join_rules.py",
      "cli/tests/e2e-pro/test_log_file.py",
      "cli/tests/e2e-pro/test_login.py",
      "cli/tests/e2e-pro/test_match_based_id.py",
      "cli/tests/e2e-pro/test_meta.py",
      "cli/tests/e2e-pro/test_pro_rule_skipping.py",
      "cli/tests/e2e-pro/test_publish.py",
      "cli/tests/e2e-pro/test_sca.py",
      "cli/tests/e2e-pro/test_secret.py",
      "cli/tests/e2e-pysemgrep/test_performance.py",
      "cli/tests/e2e-pysemgrep/test_utility_commands.py",
      "cli/tests/fixtures.py",
      "cli/tests/performance/targets_perf_sca/10k/Gemfile.lock",
      "cli/tests/performance/targets_perf_sca/10k/Pipfile.lock",
      "cli/tests/performance/targets_perf_sca/10k/go.mod",
      "cli/tests/performance/targets_perf_sca/10k/gradle.lockfile",
      "cli/tests/performance/targets_perf_sca/10k/maven_dep_tree.txt",
      "cli/tests/performance/targets_perf_sca/10k/package-lock.json",
      "cli/tests/performance/targets_perf_sca/10k/poetry.lock",
      "cli/tests/performance/targets_perf_sca/10k/requirements.txt",
      "cli/tests/performance/targets_perf_sca/10k/yarn.lock",
      "cli/tests/performance/targets_perf_sca/50k/go.mod",
      "cli/tests/performance/targets_perf_sca/50k/poetry.lock",
      "cli/tests/performance/targets_perf_sca/readme.txt",
      "cli/tests/performance/test_semdep.py",
      "cli/tests/qa/__init__.py",
      "cli/tests/qa/public_repos.py",
      "cli/tests/qa/rules/regex-sentinel.yaml",
      "cli/tests/qa/test_public_repos.py",
      "cli/tests/qa/test_semgrep_rules_repo.py",
      "cli/tests/semgrep_runner.py",
      "cli/tests/unit/snapshots/test_rule_match/test_rule_match_to_app_finding/results.json",
      "cli/tests/unit/targeting/test_exclude.py",
      "cli/tests/unit/targeting/test_include.py",
      "cli/tests/unit/targeting/test_size_limit.py",
      "cli/tests/unit/targeting/test_target_manager.py",
      "cli/tests/unit/test_baseline.py",
      "cli/tests/unit/test_bytesize.py",
      "cli/tests/unit/test_config_resolver.py",
      "cli/tests/unit/test_dump_contributions.py",
      "cli/tests/unit/test_engine_type.py",
      "cli/tests/unit/test_error_handler.py",
      "cli/tests/unit/test_filter_exclude_rule.py",
      "cli/tests/unit/test_fork_subprocess.py",
      "cli/tests/unit/test_formatters.py",
      "cli/tests/unit/test_join_rule.py",
      "cli/tests/unit/test_match_hashes.py",
      "cli/tests/unit/test_metric_manager.py",
      "cli/tests/unit/test_paths_to_transitivity.py",
      "cli/tests/unit/test_project_config.py",
      "cli/tests/unit/test_rule.py",
      "cli/tests/unit/test_rule_match.py",
      "cli/tests/unit/test_semgrep_test.py",
      "cli/tests/unit/test_semver_matching.py",
      "cli/tests/unit/test_version.py",
      "cli/tests/unit/test_yaml_parsing.py",
      "debug",
      "dev/optional.opam",
      "dev/required.opam",
      "dune",
      "dune-project",
      "images/semgrep-api-token.jpg",
      "images/semgrep-auto-config-example.jpg",
      "images/semgrep-ci-cd-popup.jpg",
      "images/semgrep-example-rules-editor.jpg",
      "images/semgrep-login.jpg",
      "images/semgrep-logo-dark.svg",
      "images/semgrep-logo-light.svg",
      "images/semgrep-main-image.jpg",
      "images/semgrep-scan-cli.jpg",
      "interfaces/Input_to_core.atd",
      "interfaces/Parsing_stats.atd",
      "interfaces/Rule_options.atd",
      "interfaces/Semgrep_prefilter.atd",
      "interfaces/notes.txt",
      "js/.gitignore",
      "js/Makefile",
      "js/README.md",
      "js/engine/Main.ml",
      "js/engine/Makefile",
      "js/engine/Makefile.include",
      "js/engine/dune",
      "js/engine/package-lock.json",
      "js/engine/package.json",
      "js/engine/src/index.d.ts",
      "js/engine/src/index.js",
      "js/engine/tests/A.java",
      "js/engine/tests/B.java",
      "js/engine/tests/C.java",
      "js/engine/tests/__snapshots__/index.test.js.snap",
      "js/engine/tests/index.test.js",
      "js/engine/tests/test-interpolate-metavars.json",
      "js/engine/tests/test-representation.json",
      "js/engine/tests/test-representation.py",
      "js/engine/tests/test-rule-java.json",
      "js/engine/tests/test-rule-python.json",
      "js/engine/tests/test-rule-yaml-regex.json",
      "js/engine/tests/test-rule-yaml.json",
      "js/engine/tests/test.py",
      "js/engine/tests/test.yaml",
      "js/examples/README.md",
      "js/examples/index.html",
      "js/examples/yaml.html",
      "js/language_server/.mocharc.json",
      "js/language_server/Main.ml",
      "js/language_server/Makefile",
      "js/language_server/XMLHttpRequest.js",
      "js/language_server/dune",
      "js/language_server/package-lock.json",
      "js/language_server/package.json",
      "js/language_server/src/semgrep-lsp-bindings.ts",
      "js/language_server/src/semgrep-lsp.ts",
      "js/language_server/src/tests/index.ts",
      "js/language_server/src/tests/integration.test.ts",
      "js/language_server/src/tests/runTests.ts",
      "js/language_server/targets/rules.yaml",
      "js/language_server/targets/test.py",
      "js/language_server/tsconfig.json",
      "js/languages/Makefile",
      "js/languages/README.md",
      "js/languages/bash/Makefile",
      "js/languages/bash/Parser.ml",
      "js/languages/bash/dune",
      "js/languages/bash/package-lock.json",
      "js/languages/bash/package.json",
      "js/languages/bash/tests/index.test.js",
      "js/languages/c/Makefile",
      "js/languages/c/Parser.ml",
      "js/languages/c/dune",
      "js/languages/c/package-lock.json",
      "js/languages/c/package.json",
      "js/languages/c/tests/index.test.js",
      "js/languages/cairo/Makefile",
      "js/languages/cairo/Parser.ml",
      "js/languages/cairo/dune",
      "js/languages/cairo/package-lock.json",
      "js/languages/cairo/package.json",
      "js/languages/cairo/tests/index.test.js",
      "js/languages/cpp/Makefile",
      "js/languages/cpp/Parser.ml",
      "js/languages/cpp/dune",
      "js/languages/cpp/package-lock.json",
      "js/languages/cpp/package.json",
      "js/languages/cpp/tests/index.test.js",
      "js/languages/csharp/Makefile",
      "js/languages/csharp/Parser.ml",
      "js/languages/csharp/dune",
      "js/languages/csharp/package-lock.json",
      "js/languages/csharp/package.json",
      "js/languages/csharp/tests/index.test.js",
      "js/languages/dart/Makefile",
      "js/languages/dart/Parser.ml",
      "js/languages/dart/dune",
      "js/languages/dart/package-lock.json",
      "js/languages/dart/package.json",
      "js/languages/dart/tests/index.test.js",
      "js/languages/dockerfile/Makefile",
      "js/languages/dockerfile/Parser.ml",
      "js/languages/dockerfile/dune",
      "js/languages/dockerfile/package-lock.json",
      "js/languages/dockerfile/package.json",
      "js/languages/dockerfile/tests/index.test.js",
      "js/languages/go/Makefile",
      "js/languages/go/Parser.ml",
      "js/languages/go/dune",
      "js/languages/go/package-lock.json",
      "js/languages/go/package.json",
      "js/languages/go/tests/index.test.js",
      "js/languages/hack/Makefile",
      "js/languages/hack/Parser.ml",
      "js/languages/hack/dune",
      "js/languages/hack/package-lock.json",
      "js/languages/hack/package.json",
      "js/languages/hack/tests/index.test.js",
      "js/languages/html/Makefile",
      "js/languages/html/Parser.ml",
      "js/languages/html/dune",
      "js/languages/html/package-lock.json",
      "js/languages/html/package.json",
      "js/languages/html/tests/index.test.js",
      "js/languages/java/Makefile",
      "js/languages/java/Parser.ml",
      "js/languages/java/dune",
      "js/languages/java/package-lock.json",
      "js/languages/java/package.json",
      "js/languages/java/tests/index.test.js",
      "js/languages/json/Makefile",
      "js/languages/json/Parser.ml",
      "js/languages/json/dune",
      "js/languages/json/package-lock.json",
      "js/languages/json/package.json",
      "js/languages/json/tests/index.test.js",
      "js/languages/jsonnet/Makefile",
      "js/languages/jsonnet/Parser.ml",
      "js/languages/jsonnet/dune",
      "js/languages/jsonnet/package-lock.json",
      "js/languages/jsonnet/package.json",
      "js/languages/jsonnet/tests/index.test.js",
      "js/languages/julia/Makefile",
      "js/languages/julia/Parser.ml",
      "js/languages/julia/dune",
      "js/languages/julia/package-lock.json",
      "js/languages/julia/package.json",
      "js/languages/julia/tests/index.test.js",
      "js/languages/kotlin/Makefile",
      "js/languages/kotlin/Parser.ml",
      "js/languages/kotlin/dune",
      "js/languages/kotlin/package-lock.json",
      "js/languages/kotlin/package.json",
      "js/languages/kotlin/tests/index.test.js",
      "js/languages/lisp/Makefile",
      "js/languages/lisp/Parser.ml",
      "js/languages/lisp/dune",
      "js/languages/lisp/package-lock.json",
      "js/languages/lisp/package.json",
      "js/languages/lisp/tests/index.test.js",
      "js/languages/lua/Makefile",
      "js/languages/lua/Parser.ml",
      "js/languages/lua/dune",
      "js/languages/lua/package-lock.json",
      "js/languages/lua/package.json",
      "js/languages/lua/tests/index.test.js",
      "js/languages/ocaml/Makefile",
      "js/languages/ocaml/Parser.ml",
      "js/languages/ocaml/dune",
      "js/languages/ocaml/package-lock.json",
      "js/languages/ocaml/package.json",
      "js/languages/ocaml/tests/index.test.js",
      "js/languages/php/Makefile",
      "js/languages/php/Parser.ml",
      "js/languages/php/dune",
      "js/languages/php/package-lock.json",
      "js/languages/php/package.json",
      "js/languages/php/tests/index.test.js",
      "js/languages/promql/Makefile",
      "js/languages/promql/Parser.ml",
      "js/languages/promql/dune",
      "js/languages/promql/package-lock.json",
      "js/languages/promql/package.json",
      "js/languages/promql/tests/index.test.js",
      "js/languages/protobuf/Makefile",
      "js/languages/protobuf/Parser.ml",
      "js/languages/protobuf/dune",
      "js/languages/protobuf/package-lock.json",
      "js/languages/protobuf/package.json",
      "js/languages/protobuf/tests/index.test.js",
      "js/languages/python/Makefile",
      "js/languages/python/Parser.ml",
      "js/languages/python/dune",
      "js/languages/python/package-lock.json",
      "js/languages/python/package.json",
      "js/languages/python/tests/index.test.js",
      "js/languages/r/Makefile",
      "js/languages/r/Parser.ml",
      "js/languages/r/dune",
      "js/languages/r/package-lock.json",
      "js/languages/r/package.json",
      "js/languages/r/tests/index.test.js",
      "js/languages/ruby/Makefile",
      "js/languages/ruby/Parser.ml",
      "js/languages/ruby/dune",
      "js/languages/ruby/package-lock.json",
      "js/languages/ruby/package.json",
      "js/languages/ruby/tests/index.test.js",
      "js/languages/rust/Makefile",
      "js/languages/rust/Parser.ml",
      "js/languages/rust/dune",
      "js/languages/rust/package-lock.json",
      "js/languages/rust/package.json",
      "js/languages/rust/tests/index.test.js",
      "js/languages/scala/Makefile",
      "js/languages/scala/Parser.ml",
      "js/languages/scala/dune",
      "js/languages/scala/package-lock.json",
      "js/languages/scala/package.json",
      "js/languages/scala/tests/index.test.js",
      "js/languages/shared/Makefile.include",
      "js/languages/shared/entrypoint.js.liquid",
      "js/languages/shared/generate-package-json.sh",
      "js/languages/shared/generate-semgrep-js.sh",
      "js/languages/shared/index.d.ts",
      "js/languages/shared/parser.js",
      "js/languages/solidity/Makefile",
      "js/languages/solidity/Parser.ml",
      "js/languages/solidity/dune",
      "js/languages/solidity/package-lock.json",
      "js/languages/solidity/package.json",
      "js/languages/solidity/tests/index.test.js",
      "js/languages/swift/Makefile",
      "js/languages/swift/Parser.ml",
      "js/languages/swift/dune",
      "js/languages/swift/package-lock.json",
      "js/languages/swift/package.json",
      "js/languages/swift/tests/index.test.js",
      "js/languages/terraform/Makefile",
      "js/languages/terraform/Parser.ml",
      "js/languages/terraform/dune",
      "js/languages/terraform/package-lock.json",
      "js/languages/terraform/package.json",
      "js/languages/terraform/tests/index.test.js",
      "js/languages/typescript/Makefile",
      "js/languages/typescript/Parser.ml",
      "js/languages/typescript/dune",
      "js/languages/typescript/package-lock.json",
      "js/languages/typescript/package.json",
      "js/languages/typescript/tests/index.test.js",
      "js/languages/vue/Makefile",
      "js/languages/vue/Parser.ml",
      "js/languages/vue/dune",
      "js/languages/vue/package-lock.json",
      "js/languages/vue/package.json",
      "js/languages/vue/tests/index.test.js",
      "js/libpcre/Makefile",
      "js/libpcre/Makefile.include",
      "js/libpcre/dune",
      "js/libpcre/package-lock.json",
      "js/libpcre/package.json",
      "js/libpcre/runtime.js",
      "js/libpcre/runtime.test.js",
      "js/libyaml/Libyaml_stubs_js.ml",
      "js/libyaml/License",
      "js/libyaml/Makefile",
      "js/libyaml/Makefile.include",
      "js/libyaml/README.md",
      "js/libyaml/api.c",
      "js/libyaml/config.h",
      "js/libyaml/ctypes.js",
      "js/libyaml/dumper.c",
      "js/libyaml/dune",
      "js/libyaml/emitter.c",
      "js/libyaml/extra.c",
      "js/libyaml/loader.c",
      "js/libyaml/package-lock.json",
      "js/libyaml/package.json",
      "js/libyaml/parser.c",
      "js/libyaml/reader.c",
      "js/libyaml/runtime.js",
      "js/libyaml/runtime.test.js",
      "js/libyaml/scanner.c",
      "js/libyaml/writer.c",
      "js/libyaml/yaml.h",
      "js/libyaml/yaml_private.h",
      "js/node_shared/dune",
      "js/node_shared/unix.js",
      "js/shared/Semgrep_js_shared.ml",
      "js/shared/Semgrep_js_shared.mli",
      "js/shared/core.js",
      "js/shared/dune",
      "js/shared/ocaml-tree-sitter.js",
      "js/tests/Makefile",
      "js/tests/Test_jsoo.ml",
      "js/tests/dune",
      "js/tests/index.test.js",
      "js/tree-sitter/Makefile",
      "js/tree-sitter/Makefile.include",
      "js/yaml_ctypes_overrides/Yaml_ctypes_overrides.ml",
      "js/yaml_ctypes_overrides/dune",
      "languages/bash/ast/AST_bash.ml",
      "languages/bash/ast/AST_bash_builder.ml",
      "languages/bash/ast/AST_bash_builder.mli",
      "languages/bash/ast/AST_bash_loc.ml",
      "languages/bash/ast/AST_bash_loc.mli",
      "languages/bash/ast/dune",
      "languages/bash/generic/Bash_to_generic.ml",
      "languages/bash/generic/Bash_to_generic.mli",
      "languages/bash/generic/dune",
      "languages/bash/tree-sitter/Parse_bash_tree_sitter.ml",
      "languages/bash/tree-sitter/Parse_bash_tree_sitter.mli",
      "languages/bash/tree-sitter/dune",
      "languages/c/ast/ast_c.ml",
      "languages/c/ast/ast_c_build.ml",
      "languages/c/ast/ast_c_build.mli",
      "languages/c/ast/dune",
      "languages/c/ast/lib_parsing_c.ml",
      "languages/c/ast/lib_parsing_c.mli",
      "languages/c/generic/c_to_generic.ml",
      "languages/c/generic/c_to_generic.mli",
      "languages/c/generic/dune",
      "languages/c/menhir/dune",
      "languages/c/menhir/parse_c.ml",
      "languages/c/menhir/parse_c.mli",
      "languages/c/menhir/test_parsing_c.ml",
      "languages/c/menhir/test_parsing_c.mli",
      "languages/c/tree-sitter/Parse_c_tree_sitter.ml",
      "languages/c/tree-sitter/Parse_c_tree_sitter.mli",
      "languages/c/tree-sitter/dune",
      "languages/cairo/generic/Parse_cairo_tree_sitter.ml",
      "languages/cairo/generic/Parse_cairo_tree_sitter.mli",
      "languages/cairo/generic/dune",
      "languages/cpp/ast/ast_cpp.ml",
      "languages/cpp/ast/dune",
      "languages/cpp/generic/cpp_to_generic.ml",
      "languages/cpp/generic/cpp_to_generic.mli",
      "languages/cpp/generic/dune",
      "languages/cpp/menhir/authors.txt",
      "languages/cpp/menhir/conflicts.txt",
      "languages/cpp/menhir/copyright.txt",
      "languages/cpp/menhir/credits.txt",
      "languages/cpp/menhir/dune",
      "languages/cpp/menhir/flag_parsing_cpp.ml",
      "languages/cpp/menhir/lexer_cpp.mll",
      "languages/cpp/menhir/license.txt",
      "languages/cpp/menhir/notes.txt",
      "languages/cpp/menhir/parse_cpp.ml",
      "languages/cpp/menhir/parse_cpp.mli",
      "languages/cpp/menhir/parser_cpp.mly",
      "languages/cpp/menhir/parser_cpp_mly_helper.ml",
      "languages/cpp/menhir/parsing_hacks.ml",
      "languages/cpp/menhir/parsing_hacks.mli",
      "languages/cpp/menhir/parsing_hacks_cpp.ml",
      "languages/cpp/menhir/parsing_hacks_cpp.mli",
      "languages/cpp/menhir/parsing_hacks_define.ml",
      "languages/cpp/menhir/parsing_hacks_define.mli",
      "languages/cpp/menhir/parsing_hacks_lib.ml",
      "languages/cpp/menhir/parsing_hacks_lib.mli",
      "languages/cpp/menhir/parsing_hacks_pp.ml",
      "languages/cpp/menhir/parsing_hacks_pp.mli",
      "languages/cpp/menhir/parsing_hacks_typedef.ml",
      "languages/cpp/menhir/parsing_hacks_typedef.mli",
      "languages/cpp/menhir/parsing_recovery_cpp.ml",
      "languages/cpp/menhir/parsing_recovery_cpp.mli",
      "languages/cpp/menhir/pp_token.ml",
      "languages/cpp/menhir/pp_token.mli",
      "languages/cpp/menhir/test_parsing_cpp.ml",
      "languages/cpp/menhir/test_parsing_cpp.mli",
      "languages/cpp/menhir/token_cpp.ml",
      "languages/cpp/menhir/token_cpp.mli",
      "languages/cpp/menhir/token_helpers_cpp.ml",
      "languages/cpp/menhir/token_helpers_cpp.mli",
      "languages/cpp/menhir/token_views_context.ml",
      "languages/cpp/menhir/token_views_context.mli",
      "languages/cpp/menhir/token_views_cpp.ml",
      "languages/cpp/menhir/token_views_cpp.mli",
      "languages/cpp/menhir/type_cpp.ml",
      "languages/cpp/menhir/type_cpp.mli",
      "languages/cpp/menhir/unit_parsing_cpp.ml",
      "languages/cpp/menhir/unit_parsing_cpp.mli",
      "languages/cpp/orig_spec/orig_c.mly",
      "languages/cpp/orig_spec/orig_cpp.mly",
      "languages/cpp/tree-sitter/Parse_cpp_tree_sitter.ml",
      "languages/cpp/tree-sitter/Parse_cpp_tree_sitter.mli",
      "languages/cpp/tree-sitter/dune",
      "languages/csharp/generic/Parse_csharp_tree_sitter.ml",
      "languages/csharp/generic/Parse_csharp_tree_sitter.mli",
      "languages/csharp/generic/dune",
      "languages/dart/generic/Parse_dart_tree_sitter.ml",
      "languages/dart/generic/Parse_dart_tree_sitter.mli",
      "languages/dart/generic/dune",
      "languages/dockerfile/ast/AST_dockerfile.ml",
      "languages/dockerfile/ast/AST_dockerfile_loc.ml",
      "languages/dockerfile/ast/AST_dockerfile_loc.mli",
      "languages/dockerfile/ast/dune",
      "languages/dockerfile/generic/Dockerfile_to_generic.ml",
      "languages/dockerfile/generic/Dockerfile_to_generic.mli",
      "languages/dockerfile/generic/dune",
      "languages/dockerfile/tree-sitter/Parse_dockerfile_tree_sitter.ml",
      "languages/dockerfile/tree-sitter/Parse_dockerfile_tree_sitter.mli",
      "languages/dockerfile/tree-sitter/dune",
      "languages/go/ast/ast_go.ml",
      "languages/go/ast/dune",
      "languages/go/generic/dune",
      "languages/go/generic/go_to_generic.ml",
      "languages/go/generic/go_to_generic.mli",
      "languages/go/menhir/conflicts.txt",
      "languages/go/menhir/dune",
      "languages/go/menhir/lexer_go.mll",
      "languages/go/menhir/lib_parsing_go.ml",
      "languages/go/menhir/lib_parsing_go.mli",
      "languages/go/menhir/pad.txt",
      "languages/go/menhir/parse_go.ml",
      "languages/go/menhir/parser_go.mly",
      "languages/go/menhir/parsing_hacks_go.ml",
      "languages/go/menhir/parsing_hacks_go.mli",
      "languages/go/menhir/test_parsing_go.ml",
      "languages/go/menhir/test_parsing_go.mli",
      "languages/go/menhir/token_helpers_go.ml",
      "languages/go/menhir/token_helpers_go.mli",
      "languages/go/menhir/unit_parsing_go.ml",
      "languages/go/menhir/unit_parsing_go.mli",
      "languages/go/orig_spec/go.y",
      "languages/go/orig_spec/lex.go",
      "languages/go/orig_spec/rest_todo",
      "languages/go/tree-sitter/Parse_go_tree_sitter.ml",
      "languages/go/tree-sitter/Parse_go_tree_sitter.mli",
      "languages/go/tree-sitter/dune",
      "languages/html/generic/Parse_html_tree_sitter.ml",
      "languages/html/generic/Parse_html_tree_sitter.mli",
      "languages/html/generic/dune",
      "languages/java/ast/ast_java.ml",
      "languages/java/ast/dune",
      "languages/java/generic/dune",
      "languages/java/generic/java_to_generic.ml",
      "languages/java/generic/java_to_generic.mli",
      "languages/java/menhir/conflicts.txt",
      "languages/java/menhir/copyright.txt",
      "languages/java/menhir/dune",
      "languages/java/menhir/lexer_java.mll",
      "languages/java/menhir/license.txt",
      "languages/java/menhir/modif-orig.txt",
      "languages/java/menhir/parse_java.ml",
      "languages/java/menhir/parse_java.mli",
      "languages/java/menhir/parser_java.mly",
      "languages/java/menhir/parsing_hacks_java.ml",
      "languages/java/menhir/parsing_hacks_java.mli",
      "languages/java/menhir/readme.txt",
      "languages/java/menhir/test_parsing_java.ml",
      "languages/java/menhir/test_parsing_java.mli",
      "languages/java/menhir/token_helpers_java.ml",
      "languages/java/menhir/token_helpers_java.mli",
      "languages/java/menhir/unit_parsing_java.ml",
      "languages/java/menhir/unit_parsing_java.mli",
      "languages/java/tree-sitter/Parse_java_tree_sitter.ml",
      "languages/java/tree-sitter/Parse_java_tree_sitter.mli",
      "languages/java/tree-sitter/dune",
      "languages/javascript/ast/ast_js.ml",
      "languages/javascript/ast/dune",
      "languages/javascript/ast/visitor_js.ml",
      "languages/javascript/ast/visitor_js.mli",
      "languages/javascript/generic/dune",
      "languages/javascript/generic/js_to_generic.ml",
      "languages/javascript/generic/js_to_generic.mli",
      "languages/javascript/menhir/conflicts.txt",
      "languages/javascript/menhir/copyright.txt",
      "languages/javascript/menhir/dune",
      "languages/javascript/menhir/flag_parsing_js.ml",
      "languages/javascript/menhir/lexer_js.mll",
      "languages/javascript/menhir/license.txt",
      "languages/javascript/menhir/parse_js.ml",
      "languages/javascript/menhir/parse_js.mli",
      "languages/javascript/menhir/parser_js.mly",
      "languages/javascript/menhir/parsing_hacks_js.ml",
      "languages/javascript/menhir/parsing_hacks_js.mli",
      "languages/javascript/menhir/test_parsing_js.ml",
      "languages/javascript/menhir/test_parsing_js.mli",
      "languages/javascript/menhir/token_helpers_js.ml",
      "languages/javascript/menhir/token_helpers_js.mli",
      "languages/javascript/menhir/unit_parsing_js.ml",
      "languages/javascript/menhir/unit_parsing_js.mli",
      "languages/javascript/orig_spec/orig.mly",
      "languages/json/ast/ast_json.ml",
      "languages/json/ast/dune",
      "languages/json/generic/dune",
      "languages/json/generic/json_to_generic.ml",
      "languages/json/generic/json_to_generic.mli",
      "languages/json/menhir/dune",
      "languages/json/menhir/parse_json.ml",
      "languages/json/menhir/parse_json.mli",
      "languages/json/menhir/test_parsing_json.ml",
      "languages/json/menhir/test_parsing_json.mli",
      "languages/json/menhir/unit_parsing_json.ml",
      "languages/json/menhir/unit_parsing_json.mli",
      "languages/jsonnet/ast/AST_jsonnet.ml",
      "languages/jsonnet/ast/dune",
      "languages/jsonnet/generic/Jsonnet_to_generic.ml",
      "languages/jsonnet/generic/Jsonnet_to_generic.mli",
      "languages/jsonnet/generic/dune",
      "languages/jsonnet/tree-sitter/Parse_jsonnet_tree_sitter.ml",
      "languages/jsonnet/tree-sitter/Parse_jsonnet_tree_sitter.mli",
      "languages/jsonnet/tree-sitter/dune",
      "languages/julia/generic/Parse_julia_tree_sitter.ml",
      "languages/julia/generic/Parse_julia_tree_sitter.mli",
      "languages/julia/generic/dune",
      "languages/kotlin/generic/Parse_kotlin_tree_sitter.ml",
      "languages/kotlin/generic/Parse_kotlin_tree_sitter.mli",
      "languages/kotlin/generic/dune",
      "languages/lisp/ast/ast_lisp.ml",
      "languages/lisp/ast/dune",
      "languages/lisp/ast/lib_parsing_lisp.ml",
      "languages/lisp/ast/lib_parsing_lisp.mli",
      "languages/lisp/recursive_descent/META",
      "languages/lisp/recursive_descent/Makefile",
      "languages/lisp/recursive_descent/dune",
      "languages/lisp/recursive_descent/lexer_lisp.mll",
      "languages/lisp/recursive_descent/parse_lisp.ml",
      "languages/lisp/recursive_descent/parse_lisp.mli",
      "languages/lisp/recursive_descent/parser_lisp.ml",
      "languages/lisp/recursive_descent/test_parsing_lisp.ml",
      "languages/lisp/recursive_descent/test_parsing_lisp.mli",
      "languages/lisp/tree-sitter/Parse_clojure_tree_sitter.ml",
      "languages/lisp/tree-sitter/Parse_clojure_tree_sitter.mli",
      "languages/lisp/tree-sitter/dune",
      "languages/lua/generic/Parse_lua_tree_sitter.ml",
      "languages/lua/generic/Parse_lua_tree_sitter.mli",
      "languages/lua/generic/dune",
      "languages/ocaml/ast/ast_ml.ml",
      "languages/ocaml/ast/dune",
      "languages/ocaml/ast/lib_parsing_ml.ml",
      "languages/ocaml/ast/lib_parsing_ml.mli",
      "languages/ocaml/generic/dune",
      "languages/ocaml/generic/ml_to_generic.ml",
      "languages/ocaml/generic/ml_to_generic.mli",
      "languages/ocaml/menhir/dune",
      "languages/ocaml/menhir/lexer_ml.mll",
      "languages/ocaml/menhir/license_parser_ml_mly.txt",
      "languages/ocaml/menhir/parse_ml.ml",
      "languages/ocaml/menhir/parse_ml.mli",
      "languages/ocaml/menhir/parser_ml.mly",
      "languages/ocaml/menhir/test_parsing_ml.ml",
      "languages/ocaml/menhir/test_parsing_ml.mli",
      "languages/ocaml/menhir/token_helpers_ml.ml",
      "languages/ocaml/menhir/token_helpers_ml.mli",
      "languages/ocaml/menhir/unit_parsing_ml.ml",
      "languages/ocaml/menhir/unit_parsing_ml.mli",
      "languages/ocaml/orig_spec/orig_ocaml.mly",
      "languages/ocaml/orig_spec/orig_ocaml_4_10_menhir.mly",
      "languages/ocaml/tree-sitter/Parse_ocaml_tree_sitter.ml",
      "languages/ocaml/tree-sitter/Parse_ocaml_tree_sitter.mli",
      "languages/ocaml/tree-sitter/dune",
      "languages/php/ast/ast_php.ml",
      "languages/php/ast/cst_php.ml",
      "languages/php/ast/dune",
      "languages/php/ast/lib_parsing_php.ml",
      "languages/php/ast/lib_parsing_php.mli",
      "languages/php/generic/dune",
      "languages/php/generic/php_to_generic.ml",
      "languages/php/generic/php_to_generic.mli",
      "languages/php/menhir/ast_php_build.ml",
      "languages/php/menhir/ast_php_build.mli",
      "languages/php/menhir/conflicts.txt",
      "languages/php/menhir/dune",
      "languages/php/menhir/flag_parsing_php.ml",
      "languages/php/menhir/lexer_php.mll",
      "languages/php/menhir/parse_php.ml",
      "languages/php/menhir/parse_php.mli",
      "languages/php/menhir/parser_php.mly",
      "languages/php/menhir/parsing_hacks_php.ml",
      "languages/php/menhir/parsing_hacks_php.mli",
      "languages/php/menhir/test_analyze_php.ml",
      "languages/php/menhir/test_analyze_php.mli",
      "languages/php/menhir/test_parsing_php.ml",
      "languages/php/menhir/test_parsing_php.mli",
      "languages/php/menhir/token_helpers_php.ml",
      "languages/php/menhir/token_helpers_php.mli",
      "languages/php/menhir/unit_parsing_php.ml",
      "languages/php/menhir/unit_parsing_php.mli",
      "languages/php/orig_spec/hphp-may-2012/hphp.x",
      "languages/php/orig_spec/hphp-may-2012/hphp.y",
      "languages/php/orig_spec/orig_php_5.x.mly",
      "languages/php/orig_spec/php-src-8.x/zend_language_parser.y",
      "languages/php/orig_spec/php-src-8.x/zend_language_scanner.l",
      "languages/php/orig_spec/xhp/xhp_orig_when_port.l",
      "languages/php/orig_spec/xhp/xhp_orig_when_port.y",
      "languages/php/tree-sitter/Parse_php_tree_sitter.ml",
      "languages/php/tree-sitter/Parse_php_tree_sitter.mli",
      "languages/php/tree-sitter/dune",
      "languages/promql/generic/Parse_promql_tree_sitter.ml",
      "languages/promql/generic/Parse_promql_tree_sitter.mli",
      "languages/promql/generic/dune",
      "languages/protobuf/generic/Parse_protobuf_tree_sitter.ml",
      "languages/protobuf/generic/Parse_protobuf_tree_sitter.mli",
      "languages/protobuf/generic/dune",
      "languages/python/ast/AST_python.ml",
      "languages/python/ast/dune",
      "languages/python/generic/Python_to_generic.ml",
      "languages/python/generic/Python_to_generic.mli",
      "languages/python/generic/dune",
      "languages/python/menhir/Flag_parsing_python.ml",
      "languages/python/menhir/Lexer_python.mll",
      "languages/python/menhir/Parse_python.ml",
      "languages/python/menhir/Parse_python.mli",
      "languages/python/menhir/Parser_python.mly",
      "languages/python/menhir/Parsing_hacks_python.ml",
      "languages/python/menhir/Parsing_hacks_python.mli",
      "languages/python/menhir/Test_parsing_python.ml",
      "languages/python/menhir/Test_parsing_python.mli",
      "languages/python/menhir/Token_helpers_python.ml",
      "languages/python/menhir/Token_helpers_python.mli",
      "languages/python/menhir/Unit_parsing_python.ml",
      "languages/python/menhir/Unit_parsing_python.mli",
      "languages/python/menhir/conflicts.txt",
      "languages/python/menhir/copyright.txt",
      "languages/python/menhir/dune",
      "languages/python/menhir/license.txt",
      "languages/python/menhir/modif-orig.txt",
      "languages/python/menhir/readme.txt",
      "languages/python/tree-sitter/Parse_python_tree_sitter.ml",
      "languages/python/tree-sitter/Parse_python_tree_sitter.mli",
      "languages/python/tree-sitter/dune",
      "languages/r/generic/Parse_r_tree_sitter.ml",
      "languages/r/generic/Parse_r_tree_sitter.mli",
      "languages/r/generic/dune",
      "languages/regexp/.gitignore",
      "languages/regexp/AST.ml",
      "languages/regexp/AST.mli",
      "languages/regexp/Char_class.ml",
      "languages/regexp/Conf.ml",
      "languages/regexp/Conf.mli",
      "languages/regexp/Dialect.ml",
      "languages/regexp/Dialect.mli",
      "languages/regexp/Lexer.mll",
      "languages/regexp/Parse.ml",
      "languages/regexp/Parse.mli",
      "languages/regexp/Parser.mly",
      "languages/regexp/README.md",
      "languages/regexp/Unit_parsing.ml",
      "languages/regexp/dune",
      "languages/ruby/ast/ast_ruby.ml",
      "languages/ruby/ast/dune",
      "languages/ruby/ast/il_ruby.ml",
      "languages/ruby/ast/lib_parsing_ruby.ml",
      "languages/ruby/ast/utils_ruby.ml",
      "languages/ruby/ast/visitor.ml",
      "languages/ruby/ast/visitor.mli",
      "languages/ruby/generic/dune",
      "languages/ruby/generic/ruby_to_generic.ml",
      "languages/ruby/generic/ruby_to_generic.mli",
      "languages/ruby/orig_spec/orig.mly",
      "languages/ruby/tree-sitter/Parse_ruby_tree_sitter.ml",
      "languages/ruby/tree-sitter/Parse_ruby_tree_sitter.mli",
      "languages/ruby/tree-sitter/dune",
      "languages/rust/generic/Parse_rust_tree_sitter.ml",
      "languages/rust/generic/Parse_rust_tree_sitter.mli",
      "languages/rust/generic/dune",
      "languages/scala/ast/AST_scala.ml",
      "languages/scala/ast/dune",
      "languages/scala/generic/dune",
      "languages/scala/generic/scala_to_generic.ml",
      "languages/scala/generic/scala_to_generic.mli",
      "languages/scala/orig_spec/scala.ebnf",
      "languages/scala/recursive_descent/Lexer_scala.mll",
      "languages/scala/recursive_descent/Parse_scala.ml",
      "languages/scala/recursive_descent/Parse_scala.mli",
      "languages/scala/recursive_descent/Parser_scala.mly",
      "languages/scala/recursive_descent/Parser_scala_recursive_descent.ml",
      "languages/scala/recursive_descent/Parser_scala_recursive_descent.mli",
      "languages/scala/recursive_descent/Test_parsing_scala.ml",
      "languages/scala/recursive_descent/Test_parsing_scala.mli",
      "languages/scala/recursive_descent/Token_helpers_scala.ml",
      "languages/scala/recursive_descent/Token_scala.ml",
      "languages/scala/recursive_descent/Unit_parsing_scala.ml",
      "languages/scala/recursive_descent/Unit_parsing_scala.mli",
      "languages/scala/recursive_descent/dune",
      "languages/solidity/generic/Parse_solidity_tree_sitter.ml",
      "languages/solidity/generic/Parse_solidity_tree_sitter.mli",
      "languages/solidity/generic/dune",
      "languages/swift/generic/Parse_swift_tree_sitter.ml",
      "languages/swift/generic/Parse_swift_tree_sitter.mli",
      "languages/swift/generic/dune",
      "languages/terraform/ast/AST_terraform.ml",
      "languages/terraform/ast/dune",
      "languages/terraform/generic/Terraform_to_generic.ml",
      "languages/terraform/generic/Terraform_to_generic.mli",
      "languages/terraform/generic/dune",
      "languages/terraform/tree-sitter/Parse_terraform_tree_sitter.ml",
      "languages/terraform/tree-sitter/Parse_terraform_tree_sitter.mli",
      "languages/terraform/tree-sitter/dune",
      "languages/tree-sitter-to-generic/Parse_hack_tree_sitter.ml",
      "languages/tree-sitter-to-generic/Parse_hack_tree_sitter.mli",
      "languages/tree-sitter-to-generic/Parse_vue_tree_sitter.ml",
      "languages/tree-sitter-to-generic/Parse_vue_tree_sitter.mli",
      "languages/tree-sitter-to-generic/dune",
      "languages/typescript/tree-sitter/.ocamlformat-ignore",
      "languages/typescript/tree-sitter/Boilerplate_tree_sitter_typescript.ml",
      "languages/typescript/tree-sitter/CST_tree_sitter_typescript.ml",
      "languages/typescript/tree-sitter/Parse_typescript_tree_sitter.ml",
      "languages/typescript/tree-sitter/Parse_typescript_tree_sitter.mli",
      "languages/typescript/tree-sitter/dune",
      "languages/yaml/generic/dune",
      "languages/yaml/generic/yaml_to_generic.ml",
      "languages/yaml/generic/yaml_to_generic.mli",
      "libs/alcotest_ext/Alcotest_ext.ml",
      "libs/alcotest_ext/Alcotest_ext.mli",
      "libs/alcotest_ext/dune",
      "libs/aliengrep/Conf.ml",
      "libs/aliengrep/Conf.mli",
      "libs/aliengrep/Match.ml",
      "libs/aliengrep/Match.mli",
      "libs/aliengrep/Pat_AST.ml",
      "libs/aliengrep/Pat_AST.mli",
      "libs/aliengrep/Pat_compile.ml",
      "libs/aliengrep/Pat_compile.mli",
      "libs/aliengrep/Pat_lexer.ml",
      "libs/aliengrep/Pat_lexer.mli",
      "libs/aliengrep/Pat_parser.ml",
      "libs/aliengrep/Pat_parser.mli",
      "libs/aliengrep/Pcre_util.ml",
      "libs/aliengrep/Pcre_util.mli",
      "libs/aliengrep/README.md",
      "libs/aliengrep/Unit_Match.ml",
      "libs/aliengrep/Unit_Match.mli",
      "libs/aliengrep/Unit_Pat_parser.ml",
      "libs/aliengrep/Unit_Pat_parser.mli",
      "libs/aliengrep/Unit_tests.ml",
      "libs/aliengrep/dune",
      "libs/ast_generic/AST_generic.ml",
      "libs/ast_generic/AST_generic_equals.ml",
      "libs/ast_generic/AST_generic_equals.mli",
      "libs/ast_generic/AST_generic_helpers.ml",
      "libs/ast_generic/AST_generic_helpers.mli",
      "libs/ast_generic/AST_generic_to_v1.ml",
      "libs/ast_generic/AST_generic_to_v1.mli",
      "libs/ast_generic/IdFlags.ml",
      "libs/ast_generic/IdFlags.mli",
      "libs/ast_generic/Meta_AST.ml",
      "libs/ast_generic/Meta_AST.mli",
      "libs/ast_generic/Raw_tree.ml",
      "libs/ast_generic/Raw_tree.mli",
      "libs/ast_generic/dune",
      "libs/commons/ATD_string_wrap.ml",
      "libs/commons/Arg_.ml",
      "libs/commons/Arg_.mli",
      "libs/commons/Assoc.ml",
      "libs/commons/Assoc.mli",
      "libs/commons/Cache_disk.ml",
      "libs/commons/Cache_disk.mli",
      "libs/commons/CapConsole.ml",
      "libs/commons/CapConsole.mli",
      "libs/commons/CapExec.ml",
      "libs/commons/CapExec.mli",
      "libs/commons/CapFS.ml",
      "libs/commons/CapFS.mli",
      "libs/commons/CapMisc.ml",
      "libs/commons/CapMisc.mli",
      "libs/commons/CapProcess.ml",
      "libs/commons/CapProcess.mli",
      "libs/commons/Chan.ml",
      "libs/commons/Chan.mli",
      "libs/commons/Cmd.ml",
      "libs/commons/Cmdliner_.ml",
      "libs/commons/Cmdliner_.mli",
      "libs/commons/Common.ml",
      "libs/commons/Common.mli",
      "libs/commons/Commons_TCB.ml",
      "libs/commons/Console.ml",
      "libs/commons/Console.mli",
      "libs/commons/Dumper.ml",
      "libs/commons/Dumper.mli",
      "libs/commons/Either_.ml",
      "libs/commons/Either_.mli",
      "libs/commons/Exception.ml",
      "libs/commons/Exception.mli",
      "libs/commons/File_type.ml",
      "libs/commons/File_type.mli",
      "libs/commons/Filename_.ml",
      "libs/commons/Filename_.mli",
      "libs/commons/Fmt_.ml",
      "libs/commons/Fmt_.mli",
      "libs/commons/Fpath_.ml",
      "libs/commons/Fpath_.mli",
      "libs/commons/Gensym.ml",
      "libs/commons/Gensym.mli",
      "libs/commons/Glom.ml",
      "libs/commons/Glom.mli",
      "libs/commons/Hashtbl_.ml",
      "libs/commons/Hashtbl_.mli",
      "libs/commons/Immutable_buffer.ml",
      "libs/commons/Immutable_buffer.mli",
      "libs/commons/Int64_.ml",
      "libs/commons/Int64_.mli",
      "libs/commons/JSON.ml",
      "libs/commons/JSON.mli",
      "libs/commons/List_.ml",
      "libs/commons/List_.mli",
      "libs/commons/Logging.ml",
      "libs/commons/Logging.mli",
      "libs/commons/Logging_.ml",
      "libs/commons/Logging_.mli",
      "libs/commons/Logs_.ml",
      "libs/commons/Logs_.mli",
      "libs/commons/Map_.ml",
      "libs/commons/Map_.mli",
      "libs/commons/OCaml.ml",
      "libs/commons/OCaml.mli",
      "libs/commons/Out.ml",
      "libs/commons/Out.mli",
      "libs/commons/Pcre_.ml",
      "libs/commons/Pcre_.mli",
      "libs/commons/Platform.ml",
      "libs/commons/Platform.mli",
      "libs/commons/Regexp_engine.ml",
      "libs/commons/Regexp_engine.mli",
      "libs/commons/Result_.ml",
      "libs/commons/Result_.mli",
      "libs/commons/Set_.ml",
      "libs/commons/Set_.mli",
      "libs/commons/Stack_.ml",
      "libs/commons/Stack_.mli",
      "libs/commons/String_.ml",
      "libs/commons/String_.mli",
      "libs/commons/Testutil.ml",
      "libs/commons/Testutil.mli",
      "libs/commons/Testutil_files.ml",
      "libs/commons/Testutil_files.mli",
      "libs/commons/Testutil_mock.ml",
      "libs/commons/Testutil_mock.mli",
      "libs/commons/Textedit.ml",
      "libs/commons/Textedit.mli",
      "libs/commons/UChan.ml",
      "libs/commons/UChan.mli",
      "libs/commons/UCmd.ml",
      "libs/commons/UCommon.ml",
      "libs/commons/UCommon.mli",
      "libs/commons/UFile.ml",
      "libs/commons/UFile.mli",
      "libs/commons/authors.txt",
      "libs/commons/common2.ml",
      "libs/commons/common2.mli",
      "libs/commons/copyright.txt",
      "libs/commons/credits.txt",
      "libs/commons/dune",
      "libs/commons/license.txt",
      "libs/commons/tests/Unit_Pcre_.ml",
      "libs/commons/tests/Unit_Pcre_.mli",
      "libs/commons/tests/Unit_commons.ml",
      "libs/commons/tests/Unit_immutable_buffer.ml",
      "libs/commons/tests/Unit_regexp_engine.ml",
      "libs/commons/tests/Unit_regexp_engine.mli",
      "libs/commons/tests/dune",
      "libs/concurrency/Concurrency.ml",
      "libs/concurrency/Concurrency.mli",
      "libs/concurrency/Lock_protected.ml",
      "libs/concurrency/Lock_protected.mli",
      "libs/concurrency/dune",
      "libs/git_wrapper/Git_wrapper.ml",
      "libs/git_wrapper/Git_wrapper.mli",
      "libs/git_wrapper/dune",
      "libs/gitignore/Gitignore.ml",
      "libs/gitignore/Gitignore_filter.ml",
      "libs/gitignore/Gitignore_filter.mli",
      "libs/gitignore/Gitignores_cache.ml",
      "libs/gitignore/Gitignores_cache.mli",
      "libs/gitignore/Parse_gitignore.ml",
      "libs/gitignore/Parse_gitignore.mli",
      "libs/gitignore/Unit_gitignore.ml",
      "libs/gitignore/Unit_gitignore.mli",
      "libs/gitignore/dune",
      "libs/glob/Lexer.mli",
      "libs/glob/Lexer.mll",
      "libs/glob/Match.ml",
      "libs/glob/Match.mli",
      "libs/glob/Parse.ml",
      "libs/glob/Parse.mli",
      "libs/glob/Parser.mly",
      "libs/glob/Pattern.ml",
      "libs/glob/Unit_glob.ml",
      "libs/glob/Unit_glob.mli",
      "libs/glob/dune",
      "libs/graph_code/dependencies_matrix_build.ml",
      "libs/graph_code/dependencies_matrix_build.mli",
      "libs/graph_code/dependencies_matrix_code.ml",
      "libs/graph_code/dependencies_matrix_code.mli",
      "libs/graph_code/dune",
      "libs/graph_code/entity_code.ml",
      "libs/graph_code/entity_code.mli",
      "libs/graph_code/graph_code.ml",
      "libs/graph_code/graph_code.mli",
      "libs/graph_code/graph_code_class_analysis.ml",
      "libs/graph_code/graph_code_class_analysis.mli",
      "libs/graph_code/graph_code_export.ml",
      "libs/graph_code/graph_code_export.mli",
      "libs/graph_code/graph_code_helpers.ml",
      "libs/graph_code/graph_code_helpers.mli",
      "libs/graph_code/graph_code_opti.ml",
      "libs/graph_code/graph_code_opti.mli",
      "libs/graph_code/graph_code_prolog.ml",
      "libs/graph_code/graph_code_prolog.mli",
      "libs/graph_code/graphe.ml",
      "libs/graph_code/graphe.mli",
      "libs/graph_code/prolog_code.ml",
      "libs/graph_code/prolog_code.mli",
      "libs/graph_code/test_graph_code.ml",
      "libs/graph_code/test_graph_code.mli",
      "libs/graph_code/unit_graph_code.ml",
      "libs/graph_code/unit_graph_code.mli",
      "libs/lib_parsing/Flag_parsing.ml",
      "libs/lib_parsing/Loc.ml",
      "libs/lib_parsing/Parsed_int.ml",
      "libs/lib_parsing/Parsed_int.mli",
      "libs/lib_parsing/Parsing_error.ml",
      "libs/lib_parsing/Parsing_helpers.ml",
      "libs/lib_parsing/Parsing_helpers.mli",
      "libs/lib_parsing/Parsing_result.ml",
      "libs/lib_parsing/Parsing_stat.ml",
      "libs/lib_parsing/Parsing_stat.mli",
      "libs/lib_parsing/Pos.ml",
      "libs/lib_parsing/Pos.mli",
      "libs/lib_parsing/Skip_code.ml",
      "libs/lib_parsing/Skip_code.mli",
      "libs/lib_parsing/Tok.ml",
      "libs/lib_parsing/Tok.mli",
      "libs/lib_parsing/Tok_range.ml",
      "libs/lib_parsing/Tok_range.mli",
      "libs/lib_parsing/Unit_tok.ml",
      "libs/lib_parsing/ast_fuzzy.ml",
      "libs/lib_parsing/copyright.txt",
      "libs/lib_parsing/dune",
      "libs/lib_parsing/lib_ast_fuzzy.ml",
      "libs/lib_parsing/lib_ast_fuzzy.mli",
      "libs/lib_parsing/license.txt",
      "libs/lib_parsing_tree_sitter/Parse_tree_sitter_helpers.ml",
      "libs/lib_parsing_tree_sitter/Parse_tree_sitter_helpers.mli",
      "libs/lib_parsing_tree_sitter/dune",
      "libs/lwt_platform/Lwt_platform.mli",
      "libs/lwt_platform/dune",
      "libs/lwt_platform/js/Lwt_platform.ml",
      "libs/lwt_platform/js/dune",
      "libs/lwt_platform/unix/Lwt_platform.ml",
      "libs/lwt_platform/unix/dune",
      "libs/networking/dune",
      "libs/networking/http_helpers/dune",
      "libs/networking/http_helpers/http_helpers.ml",
      "libs/networking/http_helpers/http_helpers.mli",
      "libs/networking/http_mock_client/Http_mock_client.ml",
      "libs/networking/http_mock_client/Http_mock_client.mli",
      "libs/networking/http_mock_client/dune",
      "libs/ograph/dune",
      "libs/ograph/oassoc.ml",
      "libs/ograph/oassoc.mli",
      "libs/ograph/oassocb.ml",
      "libs/ograph/objet.ml",
      "libs/ograph/objet.mli",
      "libs/ograph/ocollection.ml",
      "libs/ograph/ocollection.mli",
      "libs/ograph/ograph_extended.ml",
      "libs/ograph/ograph_extended.mli",
      "libs/ograph/oset.ml",
      "libs/ograph/oset.mli",
      "libs/ograph/osetb.ml",
      "libs/ojsonnet/Check_jsonnet.ml",
      "libs/ojsonnet/Check_jsonnet.mli",
      "libs/ojsonnet/Core_jsonnet.ml",
      "libs/ojsonnet/Desugar_jsonnet.ml",
      "libs/ojsonnet/Desugar_jsonnet.mli",
      "libs/ojsonnet/Eval_jsonnet.ml",
      "libs/ojsonnet/Eval_jsonnet.mli",
      "libs/ojsonnet/Eval_jsonnet_common.ml",
      "libs/ojsonnet/Eval_jsonnet_envir.ml",
      "libs/ojsonnet/Eval_jsonnet_envir.mli",
      "libs/ojsonnet/Eval_jsonnet_subst.ml",
      "libs/ojsonnet/Eval_jsonnet_subst.mli",
      "libs/ojsonnet/Interpret_jsonnet.ml",
      "libs/ojsonnet/Interpret_jsonnet.mli",
      "libs/ojsonnet/Manifest_jsonnet.ml",
      "libs/ojsonnet/Manifest_jsonnet.mli",
      "libs/ojsonnet/Parse_jsonnet.ml",
      "libs/ojsonnet/Parse_jsonnet.mli",
      "libs/ojsonnet/Std_jsonnet.ml",
      "libs/ojsonnet/Std_jsonnet.mli",
      "libs/ojsonnet/Test_ojsonnet.ml",
      "libs/ojsonnet/Test_ojsonnet.mli",
      "libs/ojsonnet/Unit_jsonnet.ml",
      "libs/ojsonnet/Unit_jsonnet.mli",
      "libs/ojsonnet/Unit_jsonnet_subst.ml",
      "libs/ojsonnet/Value_jsonnet.ml",
      "libs/ojsonnet/dune",
      "libs/paths/Fppath.ml",
      "libs/paths/Fppath.mli",
      "libs/paths/Git_project.ml",
      "libs/paths/Git_project.mli",
      "libs/paths/List_files.ml",
      "libs/paths/List_files.mli",
      "libs/paths/Ppath.ml",
      "libs/paths/Ppath.mli",
      "libs/paths/Project.ml",
      "libs/paths/Rpath.ml",
      "libs/paths/Rpath.mli",
      "libs/paths/Unit_Rpath.ml",
      "libs/paths/Unit_Rpath.mli",
      "libs/paths/Unit_list_files.ml",
      "libs/paths/Unit_list_files.mli",
      "libs/paths/Unit_ppath.ml",
      "libs/paths/Unit_ppath.mli",
      "libs/paths/dune",
      "libs/process_limits/Memory_limit.ml",
      "libs/process_limits/Memory_limit.mli",
      "libs/process_limits/Time_limit.ml",
      "libs/process_limits/Time_limit.mli",
      "libs/process_limits/Unit_memory_limit.ml",
      "libs/process_limits/Unit_memory_limit.mli",
      "libs/process_limits/dune",
      "libs/profiling/Profiling.ml",
      "libs/profiling/Profiling.mli",
      "libs/profiling/dune",
      "libs/profiling/ppx/dune",
      "libs/profiling/ppx/ppx_profiling.ml",
      "libs/profiling/ppx/tests/basic.ml",
      "libs/profiling/ppx/tests/label.ml",
      "libs/profiling/ppx/tests/optional_param.ml",
      "libs/spacegrep/.gitignore",
      "libs/spacegrep/Makefile",
      "libs/spacegrep/README.md",
      "libs/spacegrep/dune",
      "libs/spacegrep/examples/exec.doc",
      "libs/spacegrep/examples/exec.pat",
      "libs/spacegrep/examples/go-package.doc",
      "libs/spacegrep/examples/go-package.pat",
      "libs/spacegrep/examples/go-package.url",
      "libs/spacegrep/examples/hello.doc",
      "libs/spacegrep/examples/hello.pat",
      "libs/spacegrep/examples/js-internal-error.doc",
      "libs/spacegrep/examples/js-internal-error.pat",
      "libs/spacegrep/examples/js-optional-chain.doc",
      "libs/spacegrep/examples/js-optional-chain.pat",
      "libs/spacegrep/examples/my_first_calculator.py.doc",
      "libs/spacegrep/examples/my_first_calculator.py.pat",
      "libs/spacegrep/examples/python-from.doc",
      "libs/spacegrep/examples/python-from.pat",
      "libs/spacegrep/examples/python-tab.doc",
      "libs/spacegrep/examples/python-tab.pat",
      "libs/spacegrep/examples/ruby-erb.doc",
      "libs/spacegrep/examples/ruby-erb.pat",
      "libs/spacegrep/perf-data/django-template.pat",
      "libs/spacegrep/perf-data/django-template.po.gz",
      "libs/spacegrep/scripts/run-examples",
      "libs/spacegrep/scripts/show-perf",
      "libs/spacegrep/src/bin/Space_main.ml",
      "libs/spacegrep/src/bin/Spacecat_main.ml",
      "libs/spacegrep/src/bin/Spacegrep_main.ml",
      "libs/spacegrep/src/bin/dune",
      "libs/spacegrep/src/lib/Comment.ml",
      "libs/spacegrep/src/lib/Comment.mli",
      "libs/spacegrep/src/lib/Doc_AST.ml",
      "libs/spacegrep/src/lib/File_type.ml",
      "libs/spacegrep/src/lib/Find_files.ml",
      "libs/spacegrep/src/lib/Find_files.mli",
      "libs/spacegrep/src/lib/Lexer.mll",
      "libs/spacegrep/src/lib/Loc.ml",
      "libs/spacegrep/src/lib/Match.ml",
      "libs/spacegrep/src/lib/Match.mli",
      "libs/spacegrep/src/lib/Parse_doc.ml",
      "libs/spacegrep/src/lib/Parse_doc.mli",
      "libs/spacegrep/src/lib/Parse_pattern.ml",
      "libs/spacegrep/src/lib/Parse_pattern.mli",
      "libs/spacegrep/src/lib/Pattern_AST.ml",
      "libs/spacegrep/src/lib/Pre_match.ml",
      "libs/spacegrep/src/lib/Pre_match.mli",
      "libs/spacegrep/src/lib/Print.ml",
      "libs/spacegrep/src/lib/Print_match.ml",
      "libs/spacegrep/src/lib/Src_file.ml",
      "libs/spacegrep/src/lib/Src_file.mli",
      "libs/spacegrep/src/lib/Timeout.ml",
      "libs/spacegrep/src/lib/dune",
      "libs/spacegrep/src/test/.ocamlformat-ignore",
      "libs/spacegrep/src/test/Comment.ml",
      "libs/spacegrep/src/test/File_type.ml",
      "libs/spacegrep/src/test/Matcher.ml",
      "libs/spacegrep/src/test/Parser.ml",
      "libs/spacegrep/src/test/Src_file.ml",
      "libs/spacegrep/src/test/dune",
      "libs/spacegrep/src/test/test.ml",
      "mypy-tests.ini",
      "mypy.ini",
      "perf/Makefile",
      "perf/README.md",
      "perf/bench/dogfood/prep",
      "perf/bench/dogfood/semgrep_r_all.yml.gz",
      "perf/bench/dummy/input/dummy/rules/exec.yaml",
      "perf/bench/dummy/input/dummy/targets/hello.js",
      "perf/bench/dummy/input/dummy/targets/malformed.js",
      "perf/bench/dummy/prep",
      "perf/bench/dummy/rules/exec.yaml",
      "perf/bench/dummy/targets/hello.js",
      "perf/bench/dummy/targets/malformed.js",
      "perf/benchmark-against-version.py",
      "perf/compare-bench-findings",
      "perf/compare-perf",
      "perf/config.py",
      "perf/configs/ci_large_repos.yaml",
      "perf/configs/ci_medium_repos.yaml",
      "perf/configs/ci_small_repos.yaml",
      "perf/constants.py",
      "perf/corpus.py",
      "perf/perf-matching/README.md",
      "perf/perf-matching/input/.gitignore",
      "perf/perf-matching/input/anyorder-metavar-key.sgrep",
      "perf/perf-matching/input/empty.js",
      "perf/perf-matching/input/empty.sgrep",
      "perf/perf-matching/input/foo.sgrep",
      "perf/perf-matching/input/function-ellipsis.sgrep",
      "perf/perf-matching/input/function-ellipsis2.sgrep",
      "perf/perf-matching/input/l1000.js",
      "perf/perf-matching/input/l10000.js",
      "perf/perf-matching/input/l300.py",
      "perf/perf-matching/input/l5000.cs.gz",
      "perf/perf-matching/input/l5000.java",
      "perf/perf-matching/input/l5000.json",
      "perf/perf-matching/input/l50000.js.gz",
      "perf/perf-matching/input/metavariable-regexp-dict.yaml",
      "perf/perf-matching/input/metavariable-regexp-dict2.yaml",
      "perf/perf-matching/input/range-stmts.yaml",
      "perf/perf-matching/input/semgrep_targets.txt.gz",
      "perf/perf-matching/input/semgrep_targets.yaml",
      "perf/perf-matching/input/stmts-double-ellipsis-aaa.sgrep",
      "perf/perf-matching/input/stmts-double-ellipsis-aab.sgrep",
      "perf/perf-matching/input/stmts-double-ellipsis-aba.sgrep",
      "perf/perf-matching/input/stmts-double-ellipsis-abb.sgrep",
      "perf/perf-matching/input/stmts-double-ellipsis-abc.sgrep",
      "perf/perf-matching/input/stmts-ellipsis-aa.sgrep",
      "perf/perf-matching/input/stmts-ellipsis-ab.sgrep",
      "perf/perf-matching/input/stmts-ellipsis-inside.yaml",
      "perf/perf-matching/input/stmts-simple.sgrep",
      "perf/perf-matching/input/svalue.sgrep",
      "perf/perf-matching/run-perf-suite",
      "perf/repository_time_per_rule.py",
      "perf/run-benchmarks",
      "perf/snapshots/ci_small_repos_baseline.json",
      "perf/temp_findings.json",
      "perf/variant.py",
      "scripts/build-semgrep-proprietary",
      "scripts/build-wheels.sh",
      "scripts/cheatsheet.json",
      "scripts/check-bash-version",
      "scripts/compare.py",
      "scripts/generate-cheatsheet",
      "scripts/generate_cheatsheet.py",
      "scripts/lint-ocaml",
      "scripts/merge-rules.py",
      "scripts/osx-setup-for-release.sh",
      "scripts/processing-output/diff-files.py",
      "scripts/processing-output/duplicate-diff.py",
      "scripts/processing-output/read-action-timing.py",
      "scripts/processing-output/read-core-timing.py",
      "scripts/processing-output/read-timing.py",
      "scripts/release/Pipfile",
      "scripts/release/Pipfile.lock",
      "scripts/release/bump",
      "scripts/release/get_semgrep_runs_zip.py",
      "scripts/release/git/__init__.py",
      "scripts/release/git/constants.py",
      "scripts/release/linuxbrew.Dockerfile",
      "scripts/release/towncrier.toml",
      "scripts/report_pysemgrep_loc.ml",
      "scripts/report_test_metrics.sh",
      "scripts/run-benchmarks.sh",
      "scripts/run-core-test",
      "scripts/run-coverage.py",
      "scripts/run-ocamldebug.sh",
      "scripts/run-perf-tests-old.sh",
      "scripts/setup-m1-builder.sh",
      "scripts/test-compare-perf",
      "scripts/test-pro.sh",
      "scripts/validate-docker-build.sh",
      "scripts/validate-docker-release.sh",
      "scripts/validate-wheel.sh",
      "semgrep.jsonnet",
      "semgrep.opam",
      "semgrep.svg",
      "semgrep.yml",
      "setup.py",
      "src/analyzing/AST_to_IL.ml",
      "src/analyzing/AST_to_IL.mli",
      "src/analyzing/CFG_build.ml",
      "src/analyzing/CFG_build.mli",
      "src/analyzing/Constant_propagation.ml",
      "src/analyzing/Constant_propagation.mli",
      "src/analyzing/Dataflow_core.ml",
      "src/analyzing/Dataflow_core.mli",
      "src/analyzing/Dataflow_svalue.ml",
      "src/analyzing/Dataflow_svalue.mli",
      "src/analyzing/Dataflow_var_env.ml",
      "src/analyzing/Dataflow_var_env.mli",
      "src/analyzing/Implicit_return.ml",
      "src/analyzing/Implicit_return.mli",
      "src/analyzing/Iter_with_context.ml",
      "src/analyzing/Visit_class_defs.ml",
      "src/analyzing/Visit_function_defs.ml",
      "src/analyzing/Visit_pattern_ids.ml",
      "src/analyzing/Visit_wildcard_imports.ml",
      "src/analyzing/dune",
      "src/analyzing/tests/Test_analyze_generic.ml",
      "src/analyzing/tests/Test_analyze_generic.mli",
      "src/analyzing/tests/Unit_dataflow.ml",
      "src/analyzing/tests/Unit_dataflow.mli",
      "src/analyzing/tests/dune",
      "src/configuring/Flag_semgrep.ml",
      "src/configuring/Limits_semgrep.ml",
      "src/configuring/Rule_options.ml",
      "src/configuring/dune",
      "src/core/Core_error.ml",
      "src/core/Core_error.mli",
      "src/core/Core_profiling.ml",
      "src/core/Core_profiling.mli",
      "src/core/Core_result.ml",
      "src/core/Core_result.mli",
      "src/core/Differential_scan_config.ml",
      "src/core/Engine_kind.ml",
      "src/core/Equivalence.ml",
      "src/core/Extract.ml",
      "src/core/Globals.ml",
      "src/core/Hooks.ml",
      "src/core/Hooks.mli",
      "src/core/Lang.ml",
      "src/core/Lang.mli",
      "src/core/Matching_explanation.ml",
      "src/core/Metavariable.ml",
      "src/core/Metavariable.mli",
      "src/core/Mini_rule.ml",
      "src/core/Pattern.ml",
      "src/core/Pattern_match.ml",
      "src/core/Range.ml",
      "src/core/Range.mli",
      "src/core/Rule.ml",
      "src/core/Rule_ID.ml",
      "src/core/Rule_ID.mli",
      "src/core/Rule_match.ml",
      "src/core/Semgrep_output_utils.ml",
      "src/core/Semgrep_output_utils.mli",
      "src/core/Target.ml",
      "src/core/Target_selector.ml",
      "src/core/Test_tags.ml",
      "src/core/Test_tags.mli",
      "src/core/Type.ml",
      "src/core/Version.ml",
      "src/core/Version_info.ml",
      "src/core/Version_info.mli",
      "src/core/Xlang.ml",
      "src/core/Xlang.mli",
      "src/core/Xpattern.ml",
      "src/core/Xtarget.ml",
      "src/core/dune",
      "src/core_cli/Core_CLI.ml",
      "src/core_cli/Core_actions.ml",
      "src/core_cli/Core_command.ml",
      "src/core_cli/Core_command.mli",
      "src/core_cli/Core_exit_code.ml",
      "src/core_cli/Core_exit_code.mli",
      "src/core_cli/dune",
      "src/core_scan/Core_scan.ml",
      "src/core_scan/Core_scan.mli",
      "src/core_scan/Core_scan_config.ml",
      "src/core_scan/Parmap_helpers.ml",
      "src/core_scan/Parmap_helpers.mli",
      "src/core_scan/Pre_post_core_scan.ml",
      "src/core_scan/Pre_post_core_scan.mli",
      "src/core_scan/dune",
      "src/data/Data_init.ml",
      "src/data/Data_init.mli",
      "src/data/Entropy_data.ml",
      "src/data/dune",
      "src/engine/Entropy.ml",
      "src/engine/Entropy.mli",
      "src/engine/Eval_generic.ml",
      "src/engine/Eval_generic.mli",
      "src/engine/Match_env.ml",
      "src/engine/Match_extract_mode.ml",
      "src/engine/Match_extract_mode.mli",
      "src/engine/Match_rules.ml",
      "src/engine/Match_rules.mli",
      "src/engine/Match_search_mode.ml",
      "src/engine/Match_search_mode.mli",
      "src/engine/Match_tainting_mode.ml",
      "src/engine/Match_tainting_mode.mli",
      "src/engine/Metavariable_analysis.ml",
      "src/engine/Metavariable_analysis.mli",
      "src/engine/Metavariable_pattern.ml",
      "src/engine/Metavariable_pattern.mli",
      "src/engine/Metavariable_regex.ml",
      "src/engine/Metavariable_regex.mli",
      "src/engine/Range_with_metavars.ml",
      "src/engine/Range_with_metavars.mli",
      "src/engine/ReDoS.ml",
      "src/engine/ReDoS.mli",
      "src/engine/String_literal.ml",
      "src/engine/String_literal.mli",
      "src/engine/Test_dataflow_tainting.ml",
      "src/engine/Test_dataflow_tainting.mli",
      "src/engine/Test_engine.ml",
      "src/engine/Test_engine.mli",
      "src/engine/Unit_ReDoS.ml",
      "src/engine/Unit_engine.ml",
      "src/engine/Unit_engine.mli",
      "src/engine/Unit_entropy.ml",
      "src/engine/Xpattern_match_aliengrep.ml",
      "src/engine/Xpattern_match_aliengrep.mli",
      "src/engine/Xpattern_match_regexp.ml",
      "src/engine/Xpattern_match_regexp.mli",
      "src/engine/Xpattern_match_spacegrep.ml",
      "src/engine/Xpattern_match_spacegrep.mli",
      "src/engine/Xpattern_matcher.ml",
      "src/engine/dune",
      "src/experiments/datalog/Datalog_experiment.ml",
      "src/experiments/datalog/Datalog_experiment.mli",
      "src/experiments/datalog/Datalog_fact.ml",
      "src/experiments/datalog/Datalog_io.ml",
      "src/experiments/datalog/Datalog_io.mli",
      "src/experiments/datalog/dune",
      "src/experiments/misc/Experiments.ml",
      "src/experiments/misc/Function_range.ml",
      "src/experiments/misc/Function_range.mli",
      "src/experiments/misc/dune",
      "src/experiments/synthesizing/Pattern_from_Code.ml",
      "src/experiments/synthesizing/Pattern_from_Code.mli",
      "src/experiments/synthesizing/Pattern_from_Targets.ml",
      "src/experiments/synthesizing/Pattern_from_Targets.mli",
      "src/experiments/synthesizing/Pattern_from_diff.ml",
      "src/experiments/synthesizing/Pattern_from_diff.mli",
      "src/experiments/synthesizing/Pretty_print_pattern.ml",
      "src/experiments/synthesizing/Pretty_print_pattern.mli",
      "src/experiments/synthesizing/Range_to_AST.ml",
      "src/experiments/synthesizing/Range_to_AST.mli",
      "src/experiments/synthesizing/Synthesizer.ml",
      "src/experiments/synthesizing/Synthesizer.mli",
      "src/experiments/synthesizing/Test_synthesizing.ml",
      "src/experiments/synthesizing/Test_synthesizing.mli",
      "src/experiments/synthesizing/Unit_synthesizer.ml",
      "src/experiments/synthesizing/Unit_synthesizer_targets.ml",
      "src/experiments/synthesizing/dune",
      "src/fixing/Autofix.ml",
      "src/fixing/Autofix.mli",
      "src/fixing/Autofix_metavar_replacement.ml",
      "src/fixing/Autofix_metavar_replacement.mli",
      "src/fixing/Autofix_printer.ml",
      "src/fixing/Autofix_printer.mli",
      "src/fixing/Hybrid_print.ml",
      "src/fixing/Hybrid_print.mli",
      "src/fixing/dune",
      "src/fixing/tests/README.txt",
      "src/fixing/tests/Unit_autofix_printer.ml",
      "src/fixing/tests/Unit_autofix_printer.mli",
      "src/fixing/tests/dune",
      "src/il/CFG.ml",
      "src/il/Display_IL.ml",
      "src/il/Display_IL.mli",
      "src/il/IL.ml",
      "src/il/IL_helpers.ml",
      "src/il/IL_helpers.mli",
      "src/il/dune",
      "src/main/Main.ml",
      "src/main/dune",
      "src/main/flags.sh",
      "src/matching/Apply_equivalences.ml",
      "src/matching/Apply_equivalences.mli",
      "src/matching/Generic_vs_generic.ml",
      "src/matching/Generic_vs_generic.mli",
      "src/matching/Match_patterns.ml",
      "src/matching/Match_patterns.mli",
      "src/matching/Matching_generic.ml",
      "src/matching/Matching_generic.mli",
      "src/matching/Matching_visitor.ml",
      "src/matching/Normalize_generic.ml",
      "src/matching/Normalize_generic.mli",
      "src/matching/SubAST_generic.ml",
      "src/matching/SubAST_generic.mli",
      "src/matching/Trace_matching.ml",
      "src/matching/Trace_matching.mli",
      "src/matching/Unit_matcher.ml",
      "src/matching/Unit_matcher.mli",
      "src/matching/dune",
      "src/metachecking/Check_rule.ml",
      "src/metachecking/Check_rule.mli",
      "src/metachecking/Test_metachecking.ml",
      "src/metachecking/Test_metachecking.mli",
      "src/metachecking/Translate_rule.ml",
      "src/metachecking/Translate_rule.mli",
      "src/metachecking/Unit_metachecking.ml",
      "src/metachecking/Unit_metachecking.mli",
      "src/metachecking/dune",
      "src/naming/Naming_AST.ml",
      "src/naming/Naming_AST.mli",
      "src/naming/Naming_utils.ml",
      "src/naming/Naming_utils.mli",
      "src/naming/Test_naming_generic.ml",
      "src/naming/Test_naming_generic.mli",
      "src/naming/Unit_naming_generic.ml",
      "src/naming/Unit_naming_generic.mli",
      "src/naming/Unit_typing_generic.ml",
      "src/naming/Unit_typing_generic.mli",
      "src/naming/dune",
      "src/optimizing/Analyze_pattern.ml",
      "src/optimizing/Analyze_pattern.mli",
      "src/optimizing/Analyze_rule.ml",
      "src/optimizing/Analyze_rule.mli",
      "src/optimizing/Mini_rules_filter.ml",
      "src/optimizing/Mini_rules_filter.mli",
      "src/optimizing/dune",
      "src/osemgrep/README.md",
      "src/osemgrep/TODO.md",
      "src/osemgrep/cli/CLI.ml",
      "src/osemgrep/cli/CLI.mli",
      "src/osemgrep/cli/Help.ml",
      "src/osemgrep/cli/Help.mli",
      "src/osemgrep/cli/dune",
      "src/osemgrep/cli_ci/Ci_CLI.ml",
      "src/osemgrep/cli_ci/Ci_CLI.mli",
      "src/osemgrep/cli_ci/Ci_subcommand.ml",
      "src/osemgrep/cli_ci/Ci_subcommand.mli",
      "src/osemgrep/cli_ci/Git_metadata.ml",
      "src/osemgrep/cli_ci/Git_metadata.mli",
      "src/osemgrep/cli_ci/Github_metadata.ml",
      "src/osemgrep/cli_ci/Github_metadata.mli",
      "src/osemgrep/cli_ci/dune",
      "src/osemgrep/cli_install/Install_CLI.ml",
      "src/osemgrep/cli_install/Install_CLI.mli",
      "src/osemgrep/cli_install/Install_subcommand.ml",
      "src/osemgrep/cli_install/Install_subcommand.mli",
      "src/osemgrep/cli_install/dune",
      "src/osemgrep/cli_install_semgrep_pro/Install_semgrep_pro_CLI.ml",
      "src/osemgrep/cli_install_semgrep_pro/Install_semgrep_pro_CLI.mli",
      "src/osemgrep/cli_install_semgrep_pro/Install_semgrep_pro_subcommand.ml",
      "src/osemgrep/cli_install_semgrep_pro/Install_semgrep_pro_subcommand.mli",
      "src/osemgrep/cli_install_semgrep_pro/dune",
      "src/osemgrep/cli_interactive/Framed_zipper.ml",
      "src/osemgrep/cli_interactive/Framed_zipper.mli",
      "src/osemgrep/cli_interactive/Interactive_CLI.ml",
      "src/osemgrep/cli_interactive/Interactive_CLI.mli",
      "src/osemgrep/cli_interactive/Interactive_subcommand.ml",
      "src/osemgrep/cli_interactive/Interactive_subcommand.mli",
      "src/osemgrep/cli_interactive/Unit_framed_zipper.ml",
      "src/osemgrep/cli_interactive/Zipper.ml",
      "src/osemgrep/cli_interactive/Zipper.mli",
      "src/osemgrep/cli_interactive/dune",
      "src/osemgrep/cli_login/Login_CLI.ml",
      "src/osemgrep/cli_login/Login_CLI.mli",
      "src/osemgrep/cli_login/Login_subcommand.ml",
      "src/osemgrep/cli_login/Login_subcommand.mli",
      "src/osemgrep/cli_login/Logout_CLI.ml",
      "src/osemgrep/cli_login/Logout_CLI.mli",
      "src/osemgrep/cli_login/Logout_subcommand.ml",
      "src/osemgrep/cli_login/Logout_subcommand.mli",
      "src/osemgrep/cli_login/Test_login_subcommand.ml",
      "src/osemgrep/cli_login/Test_login_subcommand.mli",
      "src/osemgrep/cli_login/dune",
      "src/osemgrep/cli_lsp/Lsp_CLI.ml",
      "src/osemgrep/cli_lsp/Lsp_CLI.mli",
      "src/osemgrep/cli_lsp/Lsp_subcommand.ml",
      "src/osemgrep/cli_lsp/Lsp_subcommand.mli",
      "src/osemgrep/cli_lsp/dune",
      "src/osemgrep/cli_publish/Publish_CLI.ml",
      "src/osemgrep/cli_publish/Publish_CLI.mli",
      "src/osemgrep/cli_publish/Publish_subcommand.ml",
      "src/osemgrep/cli_publish/Publish_subcommand.mli",
      "src/osemgrep/cli_publish/Test_publish_subcommand.ml",
      "src/osemgrep/cli_publish/Test_publish_subcommand.mli",
      "src/osemgrep/cli_publish/dune",
      "src/osemgrep/cli_scan/Ls_subcommand.ml",
      "src/osemgrep/cli_scan/Ls_subcommand.mli",
      "src/osemgrep/cli_scan/Scan_CLI.ml",
      "src/osemgrep/cli_scan/Scan_CLI.mli",
      "src/osemgrep/cli_scan/Scan_subcommand.ml",
      "src/osemgrep/cli_scan/Scan_subcommand.mli",
      "src/osemgrep/cli_scan/Validate_subcommand.ml",
      "src/osemgrep/cli_scan/Validate_subcommand.mli",
      "src/osemgrep/cli_scan/dune",
      "src/osemgrep/cli_show/Show_CLI.ml",
      "src/osemgrep/cli_show/Show_CLI.mli",
      "src/osemgrep/cli_show/Show_subcommand.ml",
      "src/osemgrep/cli_show/Show_subcommand.mli",
      "src/osemgrep/cli_show/Whoami.ml",
      "src/osemgrep/cli_show/Whoami.mli",
      "src/osemgrep/cli_show/dune",
      "src/osemgrep/cli_test/Test_subcommand.ml",
      "src/osemgrep/cli_test/Test_subcommand.mli",
      "src/osemgrep/cli_test/dune",
      "src/osemgrep/cli_ui/Console_Spinner.ml",
      "src/osemgrep/cli_ui/Console_Spinner.mli",
      "src/osemgrep/cli_ui/dune",
      "src/osemgrep/configuring/Engine_type.ml",
      "src/osemgrep/configuring/Semgrep_envvars.ml",
      "src/osemgrep/configuring/Semgrep_envvars.mli",
      "src/osemgrep/configuring/Semgrep_settings.ml",
      "src/osemgrep/configuring/Semgrep_settings.mli",
      "src/osemgrep/configuring/dune",
      "src/osemgrep/core/Auth.ml",
      "src/osemgrep/core/Auth.mli",
      "src/osemgrep/core/CLI_common.ml",
      "src/osemgrep/core/CLI_common.mli",
      "src/osemgrep/core/Constants.ml",
      "src/osemgrep/core/Constants.mli",
      "src/osemgrep/core/Error.ml",
      "src/osemgrep/core/Error.mli",
      "src/osemgrep/core/Exit_code.ml",
      "src/osemgrep/core/Exit_code.mli",
      "src/osemgrep/core/Lang_job.ml",
      "src/osemgrep/core/Maturity.ml",
      "src/osemgrep/core/Maturity.mli",
      "src/osemgrep/core/Metrics_.ml",
      "src/osemgrep/core/Metrics_.mli",
      "src/osemgrep/core/Migration.ml",
      "src/osemgrep/core/Migration.mli",
      "src/osemgrep/core/Profiler.ml",
      "src/osemgrep/core/Profiler.mli",
      "src/osemgrep/core/Project_metadata.ml",
      "src/osemgrep/core/Project_metadata.mli",
      "src/osemgrep/core/Pysemgrep.ml",
      "src/osemgrep/core/Rule_filtering.ml",
      "src/osemgrep/core/Rule_filtering.mli",
      "src/osemgrep/core/Rule_tests.ml",
      "src/osemgrep/core/Rule_tests.mli",
      "src/osemgrep/core/Rules_config.ml",
      "src/osemgrep/core/Rules_config.mli",
      "src/osemgrep/core/Rules_source.ml",
      "src/osemgrep/core/Status_report.ml",
      "src/osemgrep/core/Status_report.mli",
      "src/osemgrep/core/dune",
      "src/osemgrep/core_runner/Core_runner.ml",
      "src/osemgrep/core_runner/Core_runner.mli",
      "src/osemgrep/core_runner/dune",
      "src/osemgrep/jsonnet/AST_generic_to_jsonnet.ml",
      "src/osemgrep/jsonnet/AST_generic_to_jsonnet.mli",
      "src/osemgrep/jsonnet/dune",
      "src/osemgrep/language_server/LS.ml",
      "src/osemgrep/language_server/LS.mli",
      "src/osemgrep/language_server/Test_LS_e2e.ml",
      "src/osemgrep/language_server/Test_LS_e2e.mli",
      "src/osemgrep/language_server/Unit_LS.ml",
      "src/osemgrep/language_server/Unit_LS.mli",
      "src/osemgrep/language_server/custom_requests/Login.ml",
      "src/osemgrep/language_server/custom_requests/Login.mli",
      "src/osemgrep/language_server/custom_requests/LoginStatus.ml",
      "src/osemgrep/language_server/custom_requests/LoginStatus.mli",
      "src/osemgrep/language_server/custom_requests/Search.ml",
      "src/osemgrep/language_server/custom_requests/Search.mli",
      "src/osemgrep/language_server/custom_requests/ShowAst.ml",
      "src/osemgrep/language_server/custom_requests/ShowAst.mli",
      "src/osemgrep/language_server/custom_requests/dune",
      "src/osemgrep/language_server/dune",
      "src/osemgrep/language_server/notifications/LoginFinish.ml",
      "src/osemgrep/language_server/notifications/LoginFinish.mli",
      "src/osemgrep/language_server/notifications/Notification_handler.ml",
      "src/osemgrep/language_server/notifications/Notification_handler.mli",
      "src/osemgrep/language_server/notifications/dune",
      "src/osemgrep/language_server/requests/Code_actions.ml",
      "src/osemgrep/language_server/requests/Code_actions.mli",
      "src/osemgrep/language_server/requests/Hover_request.ml",
      "src/osemgrep/language_server/requests/Hover_request.mli",
      "src/osemgrep/language_server/requests/Initialize_request.ml",
      "src/osemgrep/language_server/requests/Initialize_request.mli",
      "src/osemgrep/language_server/requests/Request_handler.ml",
      "src/osemgrep/language_server/requests/Request_handler.mli",
      "src/osemgrep/language_server/requests/dune",
      "src/osemgrep/language_server/scan_helpers/Diagnostics.ml",
      "src/osemgrep/language_server/scan_helpers/Diagnostics.mli",
      "src/osemgrep/language_server/scan_helpers/Processed_run.ml",
      "src/osemgrep/language_server/scan_helpers/Processed_run.mli",
      "src/osemgrep/language_server/scan_helpers/Scan_helpers.ml",
      "src/osemgrep/language_server/scan_helpers/Scan_helpers.mli",
      "src/osemgrep/language_server/scan_helpers/dune",
      "src/osemgrep/language_server/server/LS_metrics.ml",
      "src/osemgrep/language_server/server/LS_metrics.mli",
      "src/osemgrep/language_server/server/RPC_server.ml",
      "src/osemgrep/language_server/server/RPC_server.mli",
      "src/osemgrep/language_server/server/Session.ml",
      "src/osemgrep/language_server/server/Session.mli",
      "src/osemgrep/language_server/server/User_settings.ml",
      "src/osemgrep/language_server/server/User_settings.mli",
      "src/osemgrep/language_server/server/dune",
      "src/osemgrep/language_server/util/Convert_utils.ml",
      "src/osemgrep/language_server/util/Convert_utils.mli",
      "src/osemgrep/language_server/util/dune",
      "src/osemgrep/networking/Github_API.ml",
      "src/osemgrep/networking/Github_API.mli",
      "src/osemgrep/networking/Rule_fetching.ml",
      "src/osemgrep/networking/Rule_fetching.mli",
      "src/osemgrep/networking/Semgrep_App.ml",
      "src/osemgrep/networking/Semgrep_App.mli",
      "src/osemgrep/networking/Semgrep_Metrics.ml",
      "src/osemgrep/networking/Semgrep_Metrics.mli",
      "src/osemgrep/networking/Semgrep_Registry.ml",
      "src/osemgrep/networking/Semgrep_Registry.mli",
      "src/osemgrep/networking/Semgrep_login.ml",
      "src/osemgrep/networking/Semgrep_login.mli",
      "src/osemgrep/networking/Unit_Fetching.ml",
      "src/osemgrep/networking/Unit_Fetching.mli",
      "src/osemgrep/networking/Unit_Login.ml",
      "src/osemgrep/networking/Unit_Login.mli",
      "src/osemgrep/networking/Unit_Networking.ml",
      "src/osemgrep/networking/Unit_Networking.mli",
      "src/osemgrep/networking/dune",
      "src/osemgrep/networking/tests/dune",
      "src/osemgrep/reporting/Cli_json_output.ml",
      "src/osemgrep/reporting/Cli_json_output.mli",
      "src/osemgrep/reporting/Matches_report.ml",
      "src/osemgrep/reporting/Matches_report.mli",
      "src/osemgrep/reporting/Output.ml",
      "src/osemgrep/reporting/Output.mli",
      "src/osemgrep/reporting/Output_format.ml",
      "src/osemgrep/reporting/Rules_report.ml",
      "src/osemgrep/reporting/Rules_report.mli",
      "src/osemgrep/reporting/Skipped_report.ml",
      "src/osemgrep/reporting/Skipped_report.mli",
      "src/osemgrep/reporting/Summary_report.ml",
      "src/osemgrep/reporting/Summary_report.mli",
      "src/osemgrep/reporting/Targets_report.ml",
      "src/osemgrep/reporting/Targets_report.mli",
      "src/osemgrep/reporting/dune",
      "src/osemgrep/tests/Test_osemgrep.ml",
      "src/osemgrep/tests/Test_osemgrep.mli",
      "src/osemgrep/tests/dune",
      "src/parsing/Check_pattern.ml",
      "src/parsing/Check_pattern.mli",
      "src/parsing/Manifest_jsonnet_to_AST_generic.ml",
      "src/parsing/Manifest_jsonnet_to_AST_generic.mli",
      "src/parsing/Parse_contribution.ml",
      "src/parsing/Parse_contribution.mli",
      "src/parsing/Parse_equivalences.ml",
      "src/parsing/Parse_equivalences.mli",
      "src/parsing/Parse_metavariable_type.ml",
      "src/parsing/Parse_metavariable_type.mli",
      "src/parsing/Parse_pattern.ml",
      "src/parsing/Parse_pattern.mli",
      "src/parsing/Parse_rule.ml",
      "src/parsing/Parse_rule.mli",
      "src/parsing/Parse_rule_formula.ml",
      "src/parsing/Parse_rule_formula.mli",
      "src/parsing/Parse_rule_helpers.ml",
      "src/parsing/Parse_rules_with_atd.ml",
      "src/parsing/Parse_rules_with_atd.mli",
      "src/parsing/Parse_target.ml",
      "src/parsing/Parse_target.mli",
      "src/parsing/Parse_with_caching.ml",
      "src/parsing/Parse_with_caching.mli",
      "src/parsing/Parsing_plugin.ml",
      "src/parsing/Parsing_plugin.mli",
      "src/parsing/Parsing_result2.ml",
      "src/parsing/Parsing_result2.mli",
      "src/parsing/Pfff_or_tree_sitter.ml",
      "src/parsing/Pfff_or_tree_sitter.mli",
      "src/parsing/Unit_parsing.ml",
      "src/parsing/Unit_parsing.mli",
      "src/parsing/dune",
      "src/parsing/tests/AST_stat.ml",
      "src/parsing/tests/AST_stat.mli",
      "src/parsing/tests/Test_parsing.ml",
      "src/parsing/tests/Test_parsing.mli",
      "src/parsing/tests/dune",
      "src/parsing_languages/Parse_pattern2.ml",
      "src/parsing_languages/Parse_pattern2.mli",
      "src/parsing_languages/Parse_target2.ml",
      "src/parsing_languages/Parse_target2.mli",
      "src/parsing_languages/Parsing_init.ml",
      "src/parsing_languages/Parsing_init.mli",
      "src/parsing_languages/dune",
      "src/printing/Pretty_print_AST.ml",
      "src/printing/Pretty_print_AST.mli",
      "src/printing/Ugly_print_AST.ml",
      "src/printing/Ugly_print_AST.mli",
      "src/printing/dune",
      "src/printing/tests/README.txt",
      "src/printing/tests/Unit_ugly_print_AST.ml",
      "src/printing/tests/dune",
      "src/reporting/Core_json_output.ml",
      "src/reporting/Core_json_output.mli",
      "src/reporting/Core_text_output.ml",
      "src/reporting/Core_text_output.mli",
      "src/reporting/Metavar_replacement.ml",
      "src/reporting/Metavar_replacement.mli",
      "src/reporting/Nosemgrep.ml",
      "src/reporting/Nosemgrep.mli",
      "src/reporting/Statistics_report.ml",
      "src/reporting/dune",
      "src/tainting/Dataflow_tainting.ml",
      "src/tainting/Dataflow_tainting.mli",
      "src/tainting/Taint.ml",
      "src/tainting/Taint.mli",
      "src/tainting/Taint_lval_env.ml",
      "src/tainting/Taint_lval_env.mli",
      "src/tainting/Taint_smatch.ml",
      "src/tainting/Taint_smatch.mli",
      "src/tainting/dune",
      "src/targeting/Filter_target.ml",
      "src/targeting/Filter_target.mli",
      "src/targeting/Find_targets.ml",
      "src/targeting/Find_targets.mli",
      "src/targeting/Find_targets_old.ml",
      "src/targeting/Find_targets_old.mli",
      "src/targeting/Guess_lang.ml",
      "src/targeting/Guess_lang.mli",
      "src/targeting/Include_filter.ml",
      "src/targeting/Include_filter.mli",
      "src/targeting/Product.ml",
      "src/targeting/Product.mli",
      "src/targeting/Semgrepignore.ml",
      "src/targeting/Semgrepignore.mli",
      "src/targeting/Skip_target.ml",
      "src/targeting/Skip_target.mli",
      "src/targeting/Unit_guess_lang.ml",
      "src/targeting/Unit_guess_lang.mli",
      "src/targeting/Unit_semgrepignore.ml",
      "src/targeting/Unit_semgrepignore.mli",
      "src/targeting/dune",
      "src/tests/Test.ml",
      "src/tests/dune",
      "src/typing/Typing.ml",
      "src/typing/Typing.mli",
      "src/typing/dune",
      "stats/autofix-printing-stats/.gitignore",
      "stats/autofix-printing-stats/projects.txt",
      "stats/autofix-printing-stats/run",
      "stats/parsing-stats/.gitignore",
      "stats/parsing-stats/Makefile",
      "stats/parsing-stats/README.md",
      "stats/parsing-stats/lang/bash/projects.txt",
      "stats/parsing-stats/lang/c/projects.txt",
      "stats/parsing-stats/lang/cpp/projects.txt",
      "stats/parsing-stats/lang/csharp/projects.txt",
      "stats/parsing-stats/lang/dart/projects.txt",
      "stats/parsing-stats/lang/elixir/projects.txt",
      "stats/parsing-stats/lang/go/projects.txt",
      "stats/parsing-stats/lang/hcl/projects.txt",
      "stats/parsing-stats/lang/java/projects.txt",
      "stats/parsing-stats/lang/javascript/projects.txt",
      "stats/parsing-stats/lang/julia/projects.txt",
      "stats/parsing-stats/lang/kotlin/projects.txt",
      "stats/parsing-stats/lang/lua/projects.txt",
      "stats/parsing-stats/lang/ocaml/projects.txt",
      "stats/parsing-stats/lang/php/projects.txt",
      "stats/parsing-stats/lang/python/projects.txt",
      "stats/parsing-stats/lang/ruby/projects.txt",
      "stats/parsing-stats/lang/rust/projects.txt",
      "stats/parsing-stats/lang/scala/projects.txt",
      "stats/parsing-stats/lang/solidity/projects.txt",
      "stats/parsing-stats/lang/swift/projects.txt",
      "stats/parsing-stats/lang/typescript/projects.txt",
      "stats/parsing-stats/run-all",
      "stats/parsing-stats/run-lang",
      "stats/parsing-stats/skipped-lang/hack/projects.txt",
      "stats/parsing-stats/skipped-lang/r/projects.txt",
      "stats/parsing-stats/skipped-lang/readme.txt",
      "stats/parsing-stats/test-parsing/.gitignore",
      "stats/parsing-stats/test-parsing/Makefile",
      "stats/parsing-stats/test-parsing/lang/javascript/projects.txt",
      "stats/parsing-stats/test-parsing/lang/ocaml/projects.txt",
      "stats/parsing-stats/test-upload/lang/test/stats.json",
      "stats/parsing-stats/upload-parsing-rates",
      "test",
      "tests/README.md",
      "tests/TODO/bad.py",
      "tests/TODO/basic.sgrep",
      "tests/TODO/class.py",
      "tests/TODO/dots.sgrep",
      "tests/TODO/expr_vs_stmt_metavar.sgrep",
      "tests/TODO/flask.py",
      "tests/TODO/foo.js",
      "tests/TODO/foo.py",
      "tests/TODO/global.py",
      "tests/TODO/imports.py",
      "tests/TODO/imports2.py",
      "tests/TODO/metavar.sgrep",
      "tests/TODO/misc_export_default_ext.js",
      "tests/TODO/name_metavar.sgrep",
      "tests/TODO/naming.java",
      "tests/TODO/protocol.sgrep",
      "tests/TODO/stmt.sgrep",
      "tests/TODO/stmt_basic.sgrep",
      "tests/TODO/stmt_dots.sgrep",
      "tests/TODO/stmt_ellipsis.py",
      "tests/TODO/stmt_ellipsis.sgrep",
      "tests/TODO/stmt_metavar.sgrep",
      "tests/TODO/string.sgrep",
      "tests/TODO/stupid.py",
      "tests/TODO/stupid_if.sgrep",
      "tests/TODO/test.py",
      "tests/TODO/unify.sgrep",
      "tests/autofix/js/arrow_func.fix",
      "tests/autofix/js/arrow_func.fixed",
      "tests/autofix/js/arrow_func.js",
      "tests/autofix/js/arrow_func.sgrep",
      "tests/autofix/js/fix_obj.fix",
      "tests/autofix/js/fix_obj.fixed",
      "tests/autofix/js/fix_obj.js",
      "tests/autofix/js/fix_obj.sgrep",
      "tests/autofix/js/metavar_arg.fix",
      "tests/autofix/js/metavar_arg.fixed",
      "tests/autofix/js/metavar_arg.js",
      "tests/autofix/js/metavar_call.fix",
      "tests/autofix/js/metavar_call.fixed",
      "tests/autofix/js/metavar_call.js",
      "tests/autofix/python/fix_binop.fix",
      "tests/autofix/python/fix_binop.fixed",
      "tests/autofix/python/fix_binop.py",
      "tests/autofix/python/fix_binop.sgrep",
      "tests/autofix/python/fix_dotted_ident.fix",
      "tests/autofix/python/fix_dotted_ident.fixed",
      "tests/autofix/python/fix_dotted_ident.py",
      "tests/autofix/python/fix_dotted_ident.sgrep",
      "tests/autofix/python/fix_ellipsis_metavar.fix",
      "tests/autofix/python/fix_ellipsis_metavar.fixed",
      "tests/autofix/python/fix_ellipsis_metavar.py",
      "tests/autofix/python/fix_ellipsis_metavar.sgrep",
      "tests/autofix/python/fix_within_binop.fix",
      "tests/autofix/python/fix_within_binop.fixed",
      "tests/autofix/python/fix_within_binop.py",
      "tests/autofix/python/fix_within_binop.sgrep",
      "tests/autofix/python/metavar_call.fix",
      "tests/autofix/python/metavar_call.fixed",
      "tests/autofix/python/metavar_call.py",
      "tests/autofix/python/metavar_string2.fix",
      "tests/autofix/python/metavar_string2.fixed",
      "tests/autofix/python/metavar_string2.py",
      "tests/autofix/python/metavar_string2.sgrep",
      "tests/autofix/python/regexp_count.fix-regex",
      "tests/autofix/python/regexp_count.fixed",
      "tests/autofix/python/regexp_count.py",
      "tests/autofix/python/regexp_count.sgrep",
      "tests/autofix/python/regexp_overcount.fix-regex",
      "tests/autofix/python/regexp_overcount.fixed",
      "tests/autofix/python/regexp_overcount.py",
      "tests/autofix/python/regexp_overcount.sgrep",
      "tests/autofix/python/simple_regexp.fix-regex",
      "tests/autofix/python/simple_regexp.fixed",
      "tests/autofix/python/simple_regexp.py",
      "tests/autofix/python/simple_regexp.sgrep",
      "tests/autofix/ts/fix_cast.fix",
      "tests/autofix/ts/fix_cast.fixed",
      "tests/autofix/ts/fix_cast.sgrep",
      "tests/autofix/ts/fix_cast.ts",
      "tests/dataflow/python/big-mult.py",
      "tests/dataflow/python/div-by-zero.py",
      "tests/dataflow/python/mult.py",
      "tests/dataflow/python/while.py",
      "tests/errors/bad_indentation.yaml",
      "tests/errors/bad_language.yaml",
      "tests/errors/bad_pattern1.yaml",
      "tests/errors/bad_regexp.yaml",
      "tests/errors/bad_severity.yaml",
      "tests/errors/empty_languages.yaml",
      "tests/errors/ignored_metavar_regex.yaml",
      "tests/errors/missing_id.yaml",
      "tests/errors/only_negative_terms.yaml",
      "tests/errors/pattern_where_python_deprecated.yaml",
      "tests/errors/rules_recovery.yaml",
      "tests/errors/unknown_metavariable.yaml",
      "tests/errors/unknown_metavariable2.yaml",
      "tests/errors/unsatisfiable_formula.yaml",
      "tests/eval/duration1.json",
      "tests/eval/duration2.json",
      "tests/eval/float.json",
      "tests/eval/in_list.json",
      "tests/eval/mixed_int_and_float.json",
      "tests/eval/modulo_expr.json",
      "tests/eval/regexp.json",
      "tests/eval/regexp2.json",
      "tests/eval/regexp3.json",
      "tests/eval/simple_expr.json",
      "tests/explanations/explain_basic.py",
      "tests/explanations/explain_basic.yaml",
      "tests/explanations/explain_focus.py",
      "tests/explanations/explain_focus.yaml",
      "tests/explanations/explain_metavar_cond.py",
      "tests/explanations/explain_metavar_cond.yaml",
      "tests/explanations/explain_negation.py",
      "tests/explanations/explain_negation.yaml",
      "tests/explanations/explain_subpatterns.py",
      "tests/explanations/explain_subpatterns.yaml",
      "tests/explanations/explain_taint.py",
      "tests/explanations/explain_taint.yaml",
      "tests/extract/bash_docker.docker",
      "tests/extract/bash_docker.yaml",
      "tests/extract/bash_python.py",
      "tests/extract/bash_python.yaml",
      "tests/extract/js_html_concat.html",
      "tests/extract/js_html_concat.yaml",
      "tests/extract/promql_prometheus.test.yaml",
      "tests/extract/promql_prometheus.yaml",
      "tests/extract/python_jupyter.ipynb",
      "tests/extract/python_jupyter.yaml",
      "tests/irrelevant_rules/mvar-regex.cs",
      "tests/irrelevant_rules/mvar-regex.yaml",
      "tests/irrelevant_rules/mvar-regex1.txt",
      "tests/irrelevant_rules/mvar-regex1.yaml",
      "tests/irrelevant_rules/mvar-regex2.go",
      "tests/irrelevant_rules/mvar-regex2.yaml",
      "tests/irrelevant_rules/pattern-and-one-general.js",
      "tests/irrelevant_rules/pattern-and-one-general.yaml",
      "tests/irrelevant_rules/pattern-and.py",
      "tests/irrelevant_rules/pattern-and.yaml",
      "tests/irrelevant_rules/pattern-either.py",
      "tests/irrelevant_rules/pattern-either.yaml",
      "tests/irrelevant_rules/pattern-or.js",
      "tests/irrelevant_rules/pattern-or.yaml",
      "tests/irrelevant_rules/pattern-regex.py",
      "tests/irrelevant_rules/pattern-regex.yaml",
      "tests/irrelevant_rules/pattern.py",
      "tests/irrelevant_rules/pattern.yaml",
      "tests/irrelevant_rules/taint-general-sink.py",
      "tests/irrelevant_rules/taint-general-sink.yaml",
      "tests/irrelevant_rules/taint-general-source.py",
      "tests/irrelevant_rules/taint-general-source.yaml",
      "tests/irrelevant_rules/typed-mvar.java",
      "tests/irrelevant_rules/typed-mvar.yaml",
      "tests/jsonnet/LICENSE.md",
      "tests/jsonnet/NOTICE",
      "tests/jsonnet/errors/arith_not_number_runtime.jsonnet",
      "tests/jsonnet/errors/dupe_field_runtime.jsonnet",
      "tests/jsonnet/errors/dupe_field_static.jsonnet",
      "tests/jsonnet/errors/error1.jsonnet",
      "tests/jsonnet/errors/error2.jsonnet",
      "tests/jsonnet/errors/not_field_runtime.jsonnet",
      "tests/jsonnet/errors/object_comprehension1.json",
      "tests/jsonnet/errors/object_comprehension1.jsonnet",
      "tests/jsonnet/errors/object_comprehension2.json",
      "tests/jsonnet/errors/object_comprehension2.jsonnet",
      "tests/jsonnet/errors/string_invalid_access.jsonnet",
      "tests/jsonnet/errors/super_no_super_class_runtime.jsonnet",
      "tests/jsonnet/eval_fail/infinite_loops_or_too_slow/Readme.md",
      "tests/jsonnet/eval_pass/adding_self_to_self.json",
      "tests/jsonnet/eval_pass/adding_self_to_self.jsonnet",
      "tests/jsonnet/eval_pass/array_comprehension1.json",
      "tests/jsonnet/eval_pass/array_comprehension1.jsonnet",
      "tests/jsonnet/eval_pass/array_comprehension2.json",
      "tests/jsonnet/eval_pass/array_comprehension2.jsonnet",
      "tests/jsonnet/eval_pass/basic.json",
      "tests/jsonnet/eval_pass/basic.jsonnet",
      "tests/jsonnet/eval_pass/basic_super.json",
      "tests/jsonnet/eval_pass/basic_super.jsonnet",
      "tests/jsonnet/eval_pass/basic_super1.json",
      "tests/jsonnet/eval_pass/basic_super1.jsonnet",
      "tests/jsonnet/eval_pass/basic_super2.json",
      "tests/jsonnet/eval_pass/basic_super2.jsonnet",
      "tests/jsonnet/eval_pass/concat1.json",
      "tests/jsonnet/eval_pass/concat1.jsonnet",
      "tests/jsonnet/eval_pass/concat2.json",
      "tests/jsonnet/eval_pass/concat2.jsonnet",
      "tests/jsonnet/eval_pass/extending_self_on_left.json",
      "tests/jsonnet/eval_pass/extending_self_on_left.jsonnet",
      "tests/jsonnet/eval_pass/extending_self_on_right.json",
      "tests/jsonnet/eval_pass/extending_self_on_right.jsonnet",
      "tests/jsonnet/eval_pass/filter.json",
      "tests/jsonnet/eval_pass/filter.jsonnet",
      "tests/jsonnet/eval_pass/foo.txt",
      "tests/jsonnet/eval_pass/function.json",
      "tests/jsonnet/eval_pass/function.jsonnet",
      "tests/jsonnet/eval_pass/grandparent_with_super.json",
      "tests/jsonnet/eval_pass/grandparent_with_super.jsonnet",
      "tests/jsonnet/eval_pass/import.json",
      "tests/jsonnet/eval_pass/import.jsonnet",
      "tests/jsonnet/eval_pass/importstr.json",
      "tests/jsonnet/eval_pass/importstr.jsonnet",
      "tests/jsonnet/eval_pass/internal_merge.json",
      "tests/jsonnet/eval_pass/internal_merge.jsonnet",
      "tests/jsonnet/eval_pass/length.json",
      "tests/jsonnet/eval_pass/length.jsonnet",
      "tests/jsonnet/eval_pass/locals_in_objects.json",
      "tests/jsonnet/eval_pass/locals_in_objects.jsonnet",
      "tests/jsonnet/eval_pass/multiple_inheritance.json",
      "tests/jsonnet/eval_pass/multiple_inheritance.jsonnet",
      "tests/jsonnet/eval_pass/multiple_inheritance_with_empty.json",
      "tests/jsonnet/eval_pass/multiple_inheritance_with_empty.jsonnet",
      "tests/jsonnet/eval_pass/nested_object_with_self.json",
      "tests/jsonnet/eval_pass/nested_object_with_self.jsonnet",
      "tests/jsonnet/eval_pass/null_field.json",
      "tests/jsonnet/eval_pass/null_field.jsonnet",
      "tests/jsonnet/eval_pass/obj_access.json",
      "tests/jsonnet/eval_pass/obj_access.jsonnet",
      "tests/jsonnet/eval_pass/object.json",
      "tests/jsonnet/eval_pass/object.jsonnet",
      "tests/jsonnet/eval_pass/objectHas.json",
      "tests/jsonnet/eval_pass/objectHas.jsonnet",
      "tests/jsonnet/eval_pass/plus_object.json",
      "tests/jsonnet/eval_pass/plus_object.jsonnet",
      "tests/jsonnet/eval_pass/returning_self.json",
      "tests/jsonnet/eval_pass/returning_self.jsonnet",
      "tests/jsonnet/eval_pass/self_access.json",
      "tests/jsonnet/eval_pass/self_access.jsonnet",
      "tests/jsonnet/eval_pass/self_as_object.json",
      "tests/jsonnet/eval_pass/self_as_object.jsonnet",
      "tests/jsonnet/eval_pass/self_bound_correctly_in_superobjects.json",
      "tests/jsonnet/eval_pass/self_bound_correctly_in_superobjects.jsonnet",
      "tests/jsonnet/eval_pass/short_circuit_func.json",
      "tests/jsonnet/eval_pass/short_circuit_func.jsonnet",
      "tests/jsonnet/eval_pass/simple_self.json",
      "tests/jsonnet/eval_pass/simple_self.jsonnet",
      "tests/jsonnet/eval_pass/simple_self_with_plus.json",
      "tests/jsonnet/eval_pass/simple_self_with_plus.jsonnet",
      "tests/jsonnet/eval_pass/simple_test.json",
      "tests/jsonnet/eval_pass/simple_test.jsonnet",
      "tests/jsonnet/eval_pass/static_binding_in_super_object.json",
      "tests/jsonnet/eval_pass/static_binding_in_super_object.jsonnet",
      "tests/jsonnet/eval_pass/string.json",
      "tests/jsonnet/eval_pass/string.jsonnet",
      "tests/jsonnet/eval_pass/string_access.json",
      "tests/jsonnet/eval_pass/string_access.jsonnet",
      "tests/jsonnet/eval_pass/super_up_two_levels.json",
      "tests/jsonnet/eval_pass/super_up_two_levels.jsonnet",
      "tests/jsonnet/eval_pass/use_std.json",
      "tests/jsonnet/eval_pass/use_std.jsonnet",
      "tests/jsonnet/parsing/call_3args.jsonnet",
      "tests/jsonnet/parsing/exclude_files.jsonnet",
      "tests/jsonnet/parsing/myformula.jsonnet",
      "tests/jsonnet/parsing/myrule.jsonnet",
      "tests/jsonnet/parsing/string.jsonnet",
      "tests/jsonnet/parsing/tailstrict.jsonnet",
      "tests/jsonnet/tutorial_tests/error/error-examples.jsonnet",
      "tests/jsonnet/tutorial_tests/fail/arith.json",
      "tests/jsonnet/tutorial_tests/fail/arith.jsonnet",
      "tests/jsonnet/tutorial_tests/fail/comprehensions.json",
      "tests/jsonnet/tutorial_tests/fail/comprehensions.jsonnet",
      "tests/jsonnet/tutorial_tests/fail/functions.json",
      "tests/jsonnet/tutorial_tests/fail/functions.jsonnet",
      "tests/jsonnet/tutorial_tests/parse_errors/library_ext.libsonnet",
      "tests/jsonnet/tutorial_tests/parse_errors/library_tla.libsonnet",
      "tests/jsonnet/tutorial_tests/parse_errors/top_level_ext.json",
      "tests/jsonnet/tutorial_tests/parse_errors/top_level_ext.jsonnet",
      "tests/jsonnet/tutorial_tests/parse_errors/top_level_tla.json",
      "tests/jsonnet/tutorial_tests/parse_errors/top_level_tla.jsonnet",
      "tests/jsonnet/tutorial_tests/pass/computed_fields.josnnet",
      "tests/jsonnet/tutorial_tests/pass/computer_fields.json",
      "tests/jsonnet/tutorial_tests/pass/conditionals.json",
      "tests/jsonnet/tutorial_tests/pass/conditionals.jsonnet",
      "tests/jsonnet/tutorial_tests/pass/garnish.txt",
      "tests/jsonnet/tutorial_tests/pass/imports.json",
      "tests/jsonnet/tutorial_tests/pass/imports.jsonnet",
      "tests/jsonnet/tutorial_tests/pass/inner_references.json",
      "tests/jsonnet/tutorial_tests/pass/inner_references.jsonnet",
      "tests/jsonnet/tutorial_tests/pass/martinis.libsonnet",
      "tests/jsonnet/tutorial_tests/pass/negroni.json",
      "tests/jsonnet/tutorial_tests/pass/negroni.jsonnet",
      "tests/jsonnet/tutorial_tests/pass/oo-contrived.json",
      "tests/jsonnet/tutorial_tests/pass/oo-contrived.jsonnet",
      "tests/jsonnet/tutorial_tests/pass/references.json",
      "tests/jsonnet/tutorial_tests/pass/references.jsonnet",
      "tests/jsonnet/tutorial_tests/pass/sours.json",
      "tests/jsonnet/tutorial_tests/pass/sours.jsonnet",
      "tests/jsonnet/tutorial_tests/pass/sours_oo.json",
      "tests/jsonnet/tutorial_tests/pass/sours_oo.jsonnet",
      "tests/jsonnet/tutorial_tests/pass/templates.libsonnet",
      "tests/jsonnet/tutorial_tests/pass/utils.libsonnet",
      "tests/jsonnet/tutorial_tests/pass/variables.json",
      "tests/jsonnet/tutorial_tests/pass/variables.jsonnet",
      "tests/jsonnet/tutorial_tests/too_slow/mixins.json",
      "tests/jsonnet/tutorial_tests/too_slow/mixins.jsonnet",
      "tests/login/bad_response.json",
      "tests/login/fetch_body.json",
      "tests/login/ok_response.json",
      "tests/login/token_response.json",
      "tests/ls/ci/rule_conf_resp.json",
      "tests/metachecks/metavariable-ellipsis.rule.yaml",
      "tests/metachecks/metavariable-ellipsis.yaml",
      "tests/metachecks/slow_pattern.rule.yaml",
      "tests/metachecks/slow_pattern.yaml",
      "tests/metachecks/unbound-metavariable.rule.yaml",
      "tests/metachecks/unbound-metavariable.yaml",
      "tests/misc/controlflow/goto.c",
      "tests/misc/controlflow/if.php",
      "tests/misc/controlflow/if.py",
      "tests/misc/controlflow/while.py",
      "tests/misc/dataflow/liveness.py",
      "tests/misc/dataflow/reaching.py",
      "tests/misc/dataflow/tainting.py",
      "tests/misc/equivalences/test.py",
      "tests/misc/experimental_diff/array_access.yaml",
      "tests/misc/experimental_diff/typed_metavars.yaml",
      "tests/misc/il/array.js",
      "tests/misc/il/assert.py",
      "tests/misc/il/assignop.c",
      "tests/misc/il/basic.py",
      "tests/misc/il/call.py",
      "tests/misc/il/cond.c",
      "tests/misc/il/container.py",
      "tests/misc/il/dot.js",
      "tests/misc/il/dowhile.js",
      "tests/misc/il/for.c",
      "tests/misc/il/foreach.py",
      "tests/misc/il/goto.c",
      "tests/misc/il/if.py",
      "tests/misc/il/incr_decr.c",
      "tests/misc/il/lambda.js",
      "tests/misc/il/seq.c",
      "tests/misc/il/var.js",
      "tests/misc/il/var.py",
      "tests/misc/il/while.py",
      "tests/misc/jsonnet/lib_semgrep.jsonnet",
      "tests/misc/jsonnet/metavar_cond.jsonnet",
      "tests/misc/jsonnet/metavar_cond2.jsonnet",
      "tests/misc/jsonnet/metavar_cond_octal.jsonnet",
      "tests/misc/jsonnet/metavar_regex.jsonnet",
      "tests/misc/jsonnet/negation_ajin.jsonnet",
      "tests/misc/jsonnet/negation_ajin_orig_jsonnet",
      "tests/misc/jsonnet/notes.txt",
      "tests/misc/jsonnet/regexp.jsonnet",
      "tests/misc/jsonnet/regexp_nomatch.jsonnet",
      "tests/misc/naming/inside.py",
      "tests/misc/naming/inside.yaml",
      "tests/misc/naming/scope_basic.py",
      "tests/misc/naming/scope_python.py",
      "tests/misc/naming/scope_python.yml",
      "tests/misc/otarzan/app.ml",
      "tests/misc/otarzan/expr.ml",
      "tests/misc/otarzan/poly.ml",
      "tests/misc/otarzan/qualified_alias.ml",
      "tests/misc/otarzan/record.ml",
      "tests/misc/otarzan/stmt.ml",
      "tests/misc/otarzan/tuple.ml",
      "tests/misc/perf/input/stmts-double-ellipsis-abb.sgrep",
      "tests/misc/perf/input/stmts-double-ellipsis-abc.sgrep",
      "tests/misc/perf/input/stmts-ellipsis-ab.sgrep",
      "tests/misc/skipping_errors/test.js",
      "tests/misc/tainting/hello_world.java",
      "tests/misc/tainting/simple.java",
      "tests/misc/tainting/tainting.py",
      "tests/misc/tainting/tainting2.py",
      "tests/misc/target_file/target_file.list",
      "tests/misc/target_file/target_file_newline.list",
      "tests/naming/go/const_propagation.go",
      "tests/naming/go/vardef_vs_use.go",
      "tests/naming/java/unknown_var.java",
      "tests/naming/java/vardef_vs_use.java",
      "tests/naming/js/vardef_vs_use.js",
      "tests/naming/python/assign_vardef.py",
      "tests/naming/python/exn.py",
      "tests/naming/python/iterator.py",
      "tests/naming/python/regression1.py",
      "tests/naming/python/scope.py",
      "tests/naming/python/shadow_name_type.py",
      "tests/osemgrep/osemgrep.yml",
      "tests/parsing/bash/and-cond.bash",
      "tests/parsing/bash/for-no-in.bash",
      "tests/parsing/bash/hello.bash",
      "tests/parsing/bash/pipe-or.bash",
      "tests/parsing/bash/pipe-redirect.bash",
      "tests/parsing/c/asm_stmt.c",
      "tests/parsing/c/basic.c",
      "tests/parsing/c/char.c",
      "tests/parsing/cairo/hello.cairo",
      "tests/parsing/clojure/zip.clj",
      "tests/parsing/cpp/ambiguity_typedef.cpp",
      "tests/parsing/cpp/asm_stmt.cpp",
      "tests/parsing/cpp/char.cpp",
      "tests/parsing/cpp/class.cpp",
      "tests/parsing/cpp/empty_case_body.cpp",
      "tests/parsing/cpp/expecting_init.cpp",
      "tests/parsing/cpp/hello.cpp",
      "tests/parsing/cpp/operator_paren.cpp",
      "tests/parsing/cpp/operator_templated2.cpp",
      "tests/parsing/cpp/operator_templated3.cpp",
      "tests/parsing/cpp/parsing_partial/expecting_ident_param.cpp",
      "tests/parsing/cpp/parsing_partial/funcdef_without_params.cpp",
      "tests/parsing/cpp/parsing_partial/funcdef_without_params2.cpp",
      "tests/parsing/cpp/parsing_partial/operator_templated.cpp",
      "tests/parsing/cpp/parsing_partial/operator_templated_partial.cpp",
      "tests/parsing/cpp/pointer_type_declarator_ident.cpp",
      "tests/parsing/cpp/switch.cpp",
      "tests/parsing/csharp/async.cs",
      "tests/parsing/csharp/attributes.cs",
      "tests/parsing/csharp/condaccess.cs",
      "tests/parsing/csharp/defaultoperator.cs",
      "tests/parsing/csharp/events.cs",
      "tests/parsing/csharp/exceptions.cs",
      "tests/parsing/csharp/extern_alias.cs",
      "tests/parsing/csharp/finalizer.cs",
      "tests/parsing/csharp/foreach.cs",
      "tests/parsing/csharp/forloop.cs",
      "tests/parsing/csharp/goto.cs",
      "tests/parsing/csharp/hello_world.cs",
      "tests/parsing/csharp/implicit_typing.cs",
      "tests/parsing/csharp/indexer.cs",
      "tests/parsing/csharp/linq.cs",
      "tests/parsing/csharp/localfunc.cs",
      "tests/parsing/csharp/lock.cs",
      "tests/parsing/csharp/makeref.cs",
      "tests/parsing/csharp/namespace_file_level.cs",
      "tests/parsing/csharp/object_initializer.cs",
      "tests/parsing/csharp/operatoroverload.cs",
      "tests/parsing/csharp/patternmatch.cs",
      "tests/parsing/csharp/range.cs",
      "tests/parsing/csharp/reserved.cs",
      "tests/parsing/csharp/strings.cs",
      "tests/parsing/csharp/tuples.cs",
      "tests/parsing/csharp/typeconstraints.cs",
      "tests/parsing/csharp/unchecked.cs",
      "tests/parsing/csharp/unsafe.cs",
      "tests/parsing/csharp/using.cs",
      "tests/parsing/csharp/with_expression.cs",
      "tests/parsing/dart/class.dart",
      "tests/parsing/dart/fib.dart",
      "tests/parsing/dart/hello.dart",
      "tests/parsing/dockerfile/semgrep.dockerfile",
      "tests/parsing/dockerfile/todo/numeric-user.dockerfile",
      "tests/parsing/dockerfile/user.dockerfile",
      "tests/parsing/go/generics_qualified.go",
      "tests/parsing/go/if_header_type.go",
      "tests/parsing/go/multi_line_raw_string.go",
      "tests/parsing/go/string.go",
      "tests/parsing/go/test_unicode.go",
      "tests/parsing/go/unicode_rune.go",
      "tests/parsing/hack/test.hack",
      "tests/parsing/html/hello.html",
      "tests/parsing/java/accent.java",
      "tests/parsing/java/annotGeneric.java",
      "tests/parsing/java/annotStmt.java",
      "tests/parsing/java/annot_interface.java",
      "tests/parsing/java/annot_interface2.java",
      "tests/parsing/java/enumArgsAndBody.java",
      "tests/parsing/java/field.java",
      "tests/parsing/java/generics0.java",
      "tests/parsing/java/generics1.java",
      "tests/parsing/java/generics2.java",
      "tests/parsing/java/generics3.java",
      "tests/parsing/java/generics4.java",
      "tests/parsing/java/println.java",
      "tests/parsing/java/record.java",
      "tests/parsing/java/simple_addition.java",
      "tests/parsing/java/textblocks.java",
      "tests/parsing/java/this.java",
      "tests/parsing/java/this2.java",
      "tests/parsing/java/this_implicit.java",
      "tests/parsing/js/cp_assign_record_assign.js",
      "tests/parsing/js/html-comment.js",
      "tests/parsing/js/import.js",
      "tests/parsing/js/jsx.js",
      "tests/parsing/js/require.js",
      "tests/parsing/json/simple.json",
      "tests/parsing/jsonnet/foo.jsonnet",
      "tests/parsing/jsonnet/std.jsonnet",
      "tests/parsing/julia/helloworld.jl",
      "tests/parsing/kotlin/binary-func.kt",
      "tests/parsing/kotlin/eldritch.kt",
      "tests/parsing/kotlin/enum.kt",
      "tests/parsing/kotlin/generics.kt",
      "tests/parsing/kotlin/hello-world.kt",
      "tests/parsing/kotlin/navigation.kt",
      "tests/parsing/kotlin/parent_with_args.kt",
      "tests/parsing/kotlin/prim-expr.kt",
      "tests/parsing/kotlin/small-program.kt",
      "tests/parsing/kotlin/string.kt",
      "tests/parsing/kotlin/types.kt",
      "tests/parsing/kotlin/unary.kt",
      "tests/parsing/lua/for_in.lua",
      "tests/parsing/lua/hello_world.lua",
      "tests/parsing/lua/labels.lua",
      "tests/parsing/lua/local_empty.lua",
      "tests/parsing/lua/multi_return.lua",
      "tests/parsing/lua/nested_table.lua",
      "tests/parsing/lua/one.lua",
      "tests/parsing/lua/prefix.lua",
      "tests/parsing/lua/prim_expr.lua",
      "tests/parsing/lua/todo/builtins.lua",
      "tests/parsing/lua/varargs.lua",
      "tests/parsing/ocaml/attribute_type.ml",
      "tests/parsing/ocaml/fun_typed_ret.ml",
      "tests/parsing/ocaml/function_match.ml",
      "tests/parsing/ocaml/functor_application.ml",
      "tests/parsing/ocaml/let_module.ml",
      "tests/parsing/php/TODO/enum.php",
      "tests/parsing/php/arrow.php",
      "tests/parsing/php/attributes.php",
      "tests/parsing/php/attributes_qualified.php",
      "tests/parsing/php/attributes_qualified2.php",
      "tests/parsing/php/catch_or.php",
      "tests/parsing/php/class.php",
      "tests/parsing/php/foreach_destructure_empty_comma.php",
      "tests/parsing/php/match_expression.php",
      "tests/parsing/php/misc_for_method.php",
      "tests/parsing/php/named_arguments.php",
      "tests/parsing/php/parameter_type_qualified.php",
      "tests/parsing/php/unicode_method.php",
      "tests/parsing/php/union_types.php",
      "tests/parsing/php/union_types2.php",
      "tests/parsing/promql/test.promql",
      "tests/parsing/protobuf/semgrep_output.proto",
      "tests/parsing/protobuf/simple.proto",
      "tests/parsing/protobuf/todo/error_todo",
      "tests/parsing/python/field.py",
      "tests/parsing/python/re.py",
      "tests/parsing/python/tuple_expansion.py",
      "tests/parsing/r/hello-world.r",
      "tests/parsing/ruby/atom_kwd_trailing_comma.rb",
      "tests/parsing/ruby/dots_forwarding.rb",
      "tests/parsing/ruby/heredoc.rb",
      "tests/parsing/ruby/heredoc2.rb",
      "tests/parsing/ruby/rational_float.rb",
      "tests/parsing/ruby/string.rb",
      "tests/parsing/rust/async.rs",
      "tests/parsing/rust/declarations.rs",
      "tests/parsing/rust/expressions.rs",
      "tests/parsing/rust/hello_world.rs",
      "tests/parsing/rust/inner_attr_stmt.rs",
      "tests/parsing/rust/literals.rs",
      "tests/parsing/rust/macros.rs",
      "tests/parsing/rust/patterns.rs",
      "tests/parsing/rust/source_files.rs",
      "tests/parsing/rust/types.rs",
      "tests/parsing/scala/anonymous_types.scala",
      "tests/parsing/scala/end_markers.scala",
      "tests/parsing/scala/enums.scala",
      "tests/parsing/scala/exports.scala",
      "tests/parsing/scala/expr_case_clause.scala",
      "tests/parsing/scala/extensions.scala",
      "tests/parsing/scala/for_exprs.scala",
      "tests/parsing/scala/fun_dcl.scala",
      "tests/parsing/scala/function_types.scala",
      "tests/parsing/scala/generator_guards.scala",
      "tests/parsing/scala/given_defs.scala",
      "tests/parsing/scala/if_expr.scala",
      "tests/parsing/scala/imports.scala",
      "tests/parsing/scala/indented_block_expr_rhs.scala",
      "tests/parsing/scala/indented_for_body.scala",
      "tests/parsing/scala/indented_match.scala",
      "tests/parsing/scala/indented_package.scala",
      "tests/parsing/scala/indented_tuple_for_pattern.scala",
      "tests/parsing/scala/indented_while.scala",
      "tests/parsing/scala/interpolated_string_no_dedent.scala",
      "tests/parsing/scala/match_type.scala",
      "tests/parsing/scala/newline_in_for.scala",
      "tests/parsing/scala/opaque.scala",
      "tests/parsing/scala/optional_brace_class.scala",
      "tests/parsing/scala/optional_brace_object.scala",
      "tests/parsing/scala/optional_brace_weird_space.scala",
      "tests/parsing/scala/pat_typed_in_class.scala",
      "tests/parsing/scala/quoted.scala",
      "tests/parsing/scala/soft_keywords.scala",
      "tests/parsing/scala/soft_modifiers.scala",
      "tests/parsing/scala/splatted_args.scala",
      "tests/parsing/scala/starred_arrow_param_type.scala",
      "tests/parsing/scala/type_case_clauses.scala",
      "tests/parsing/scala/tyrefined.scala",
      "tests/parsing/scala/using_args.scala",
      "tests/parsing/scala/using_clauses.scala",
      "tests/parsing/scala/while_expr.scala",
      "tests/parsing/solidity/unchecked.sol",
      "tests/parsing/swift/class-separator.swift",
      "tests/parsing/swift/emoji.swift",
      "tests/parsing/swift/expressions.swift",
      "tests/parsing/swift/hello-world.swift",
      "tests/parsing/swift/optional-assignment.swift",
      "tests/parsing/swift/switch_expr.swift",
      "tests/parsing/swift/todo/statements.swift",
      "tests/parsing/terraform/simple.tf",
      "tests/parsing/ts/abstract.ts",
      "tests/parsing/ts/brace1.ts",
      "tests/parsing/ts/brace2.ts",
      "tests/parsing/ts/is.ts",
      "tests/parsing/ts/keyof.ts",
      "tests/parsing/ts/keyof2.ts",
      "tests/parsing/ts/override.ts",
      "tests/parsing/ts/override_protected.ts",
      "tests/parsing/ts/override_small.ts",
      "tests/parsing/ts/override_type.ts",
      "tests/parsing/ts/template_literal_types.ts",
      "tests/parsing/ts/typeof.ts",
      "tests/parsing/vue/basic.vue",
      "tests/parsing/vue/single_line_script.vue",
      "tests/parsing/xml/book.xml",
      "tests/parsing/xml/note.xml",
      "tests/parsing/xml/pom.xml",
      "tests/parsing/xml/xsschema.xml",
      "tests/parsing_errors/err.ts",
      "tests/parsing_errors/foo.c",
      "tests/parsing_errors/skip_tokens.ts",
      "tests/parsing_errors/unbalanced_brace.py",
      "tests/parsing_patterns/go/ellipsis_asi.sgrep",
      "tests/parsing_patterns/go/simple_typed_metavar.sgrep",
      "tests/parsing_patterns/go/struct.sgrep",
      "tests/parsing_patterns/java/annotation-ellipsis-after.sgrep",
      "tests/parsing_patterns/java/annotation-ellipsis-both.sgrep",
      "tests/parsing_patterns/java/annotation-ellipsis.sgrep",
      "tests/parsing_patterns/java/ellipsis-concat.sgrep",
      "tests/parsing_patterns/java/ellipsis-interface.sgrep",
      "tests/parsing_patterns/java/escape_char.sgrep",
      "tests/parsing_patterns/java/import.java",
      "tests/parsing_patterns/java/import.sgrep",
      "tests/parsing_patterns/java/package.sgrep",
      "tests/parsing_patterns/java/simple-typed-metavar.sgrep",
      "tests/patterns/POLYGLOT/concrete_syntax.sgrep",
      "tests/patterns/POLYGLOT/deep_expr_operator.sgrep",
      "tests/patterns/POLYGLOT/deep_exprstmt.sgrep",
      "tests/patterns/POLYGLOT/dots_args.sgrep",
      "tests/patterns/POLYGLOT/dots_expr.sgrep",
      "tests/patterns/POLYGLOT/dots_for.sgrep",
      "tests/patterns/POLYGLOT/dots_method_chaining.sgrep",
      "tests/patterns/POLYGLOT/dots_nested_stmts.sgrep",
      "tests/patterns/POLYGLOT/dots_stmts.sgrep",
      "tests/patterns/POLYGLOT/dots_string.sgrep",
      "tests/patterns/POLYGLOT/equivalence_constant_propagation.sgrep",
      "tests/patterns/POLYGLOT/equivalence_float.sgrep",
      "tests/patterns/POLYGLOT/equivalence_number.sgrep",
      "tests/patterns/POLYGLOT/metavar_anno.sgrep",
      "tests/patterns/POLYGLOT/metavar_arg.sgrep",
      "tests/patterns/POLYGLOT/metavar_call.sgrep",
      "tests/patterns/POLYGLOT/metavar_class_def.sgrep",
      "tests/patterns/POLYGLOT/metavar_cond.sgrep",
      "tests/patterns/POLYGLOT/metavar_ellipsis_args.sgrep",
      "tests/patterns/POLYGLOT/metavar_equality_expr.sgrep",
      "tests/patterns/POLYGLOT/metavar_equality_stmt.sgrep",
      "tests/patterns/POLYGLOT/metavar_equality_var.sgrep",
      "tests/patterns/POLYGLOT/metavar_func_def.sgrep",
      "tests/patterns/POLYGLOT/metavar_key_value.sgrep",
      "tests/patterns/POLYGLOT/metavar_stmt.sgrep",
      "tests/patterns/POLYGLOT/metavar_string.sgrep",
      "tests/patterns/POLYGLOT/misc_else_blocks_brace.sgrep",
      "tests/patterns/POLYGLOT/misc_else_blocks_no_brace.sgrep",
      "tests/patterns/POLYGLOT/misc_if_blocks_brace.sgrep",
      "tests/patterns/POLYGLOT/misc_if_blocks_no_brace.sgrep",
      "tests/patterns/POLYGLOT/partial_class.sgrep",
      "tests/patterns/POLYGLOT/partial_finally.sgrep",
      "tests/patterns/POLYGLOT/partial_if.sgrep",
      "tests/patterns/POLYGLOT/partial_try.sgrep",
      "tests/patterns/POLYGLOT/regexp_case_insensitive.sgrep",
      "tests/patterns/POLYGLOT/regexp_pcre.sgrep",
      "tests/patterns/POLYGLOT/regexp_string.sgrep",
      "tests/patterns/TEMPLATE/alpha-c-like/concrete_syntax.xxx",
      "tests/patterns/TEMPLATE/alpha-c-like/deep_exprstmt.xxx",
      "tests/patterns/TEMPLATE/alpha-c-like/dots_args.xxx",
      "tests/patterns/TEMPLATE/alpha-c-like/dots_nested_stmts.xxx",
      "tests/patterns/TEMPLATE/alpha-c-like/dots_stmts.xxx",
      "tests/patterns/TEMPLATE/alpha-c-like/dots_string.xxx",
      "tests/patterns/TEMPLATE/alpha-c-like/metavar_arg.xxx",
      "tests/patterns/TEMPLATE/alpha-c-like/metavar_call.xxx",
      "tests/patterns/TEMPLATE/alpha-c-like/metavar_equality_var.xxx",
      "tests/patterns/TEMPLATE/alpha-python-like/concrete_syntax.xxx",
      "tests/patterns/TEMPLATE/alpha-python-like/deep_exprstmt.xxx",
      "tests/patterns/TEMPLATE/alpha-python-like/dots_args.xxx",
      "tests/patterns/TEMPLATE/alpha-python-like/dots_nested_stmts.xxx",
      "tests/patterns/TEMPLATE/alpha-python-like/dots_stmts.xxx",
      "tests/patterns/TEMPLATE/alpha-python-like/dots_string.xxx",
      "tests/patterns/TEMPLATE/alpha-python-like/metavar_arg.xxx",
      "tests/patterns/TEMPLATE/alpha-python-like/metavar_call.xxx",
      "tests/patterns/TEMPLATE/alpha-python-like/metavar_equality_var.xxx",
      "tests/patterns/TEMPLATE/beta-c-like/metavar_class_def.java",
      "tests/patterns/TEMPLATE/beta-c-like/metavar_cond.java",
      "tests/patterns/TEMPLATE/beta-c-like/metavar_equality_expr.java",
      "tests/patterns/TEMPLATE/beta-c-like/metavar_equality_stmt.java",
      "tests/patterns/TEMPLATE/beta-c-like/metavar_func_def.java",
      "tests/patterns/TEMPLATE/beta-c-like/metavar_import.java",
      "tests/patterns/TEMPLATE/beta-c-like/metavar_stmt.java",
      "tests/patterns/TEMPLATE/doc.txt",
      "tests/patterns/bash/added_identifier.sh",
      "tests/patterns/bash/added_identifier.yaml",
      "tests/patterns/bash/anchored-stmt.bash",
      "tests/patterns/bash/anchored-stmt.sgrep",
      "tests/patterns/bash/arg-ellipsis.bash",
      "tests/patterns/bash/arg-ellipsis.sgrep",
      "tests/patterns/bash/arg-named-ellipsis.bash",
      "tests/patterns/bash/arg-named-ellipsis.sgrep",
      "tests/patterns/bash/array-ellipsis.bash",
      "tests/patterns/bash/array-ellipsis.sgrep",
      "tests/patterns/bash/assign-add.bash",
      "tests/patterns/bash/assign-add.sgrep",
      "tests/patterns/bash/assign.bash",
      "tests/patterns/bash/assign.sgrep",
      "tests/patterns/bash/background.bash",
      "tests/patterns/bash/background.sgrep",
      "tests/patterns/bash/case-body.bash",
      "tests/patterns/bash/case-body.sgrep",
      "tests/patterns/bash/command-substitution-body.bash",
      "tests/patterns/bash/command-substitution-body.sgrep",
      "tests/patterns/bash/command-substitution.bash",
      "tests/patterns/bash/command-substitution.sgrep",
      "tests/patterns/bash/concatenation-ellipsis-args.bash",
      "tests/patterns/bash/concatenation-ellipsis-args.sgrep",
      "tests/patterns/bash/concatenation-ellipsis.bash",
      "tests/patterns/bash/concatenation-ellipsis.sgrep",
      "tests/patterns/bash/concatenation-named-ellipsis-args.bash",
      "tests/patterns/bash/concatenation-named-ellipsis-args.sgrep",
      "tests/patterns/bash/concatenation-named-ellipsis.bash",
      "tests/patterns/bash/concatenation-named-ellipsis.sgrep",
      "tests/patterns/bash/concatenation.bash",
      "tests/patterns/bash/concatenation.sgrep",
      "tests/patterns/bash/concrete_syntax.bash",
      "tests/patterns/bash/concrete_syntax.sgrep",
      "tests/patterns/bash/declaration-assignments.bash",
      "tests/patterns/bash/declaration-assignments.sgrep",
      "tests/patterns/bash/deep_expr_operator.bash",
      "tests/patterns/bash/deep_expr_operator.sgrep",
      "tests/patterns/bash/deep_exprstmt.bash",
      "tests/patterns/bash/deep_exprstmt.sgrep",
      "tests/patterns/bash/dots_args.bash",
      "tests/patterns/bash/dots_args.sgrep",
      "tests/patterns/bash/dots_nested_stmts.bash",
      "tests/patterns/bash/dots_nested_stmts.sgrep",
      "tests/patterns/bash/dots_stmts.bash",
      "tests/patterns/bash/dots_stmts.sgrep",
      "tests/patterns/bash/dots_string.bash",
      "tests/patterns/bash/dots_string.sgrep",
      "tests/patterns/bash/empty.bash",
      "tests/patterns/bash/empty.sgrep",
      "tests/patterns/bash/expression.bash",
      "tests/patterns/bash/expression.sgrep",
      "tests/patterns/bash/for-body.bash",
      "tests/patterns/bash/for-body.sgrep",
      "tests/patterns/bash/for-elt-ellipsis.bash",
      "tests/patterns/bash/for-elt-ellipsis.sgrep",
      "tests/patterns/bash/for-metavar.bash",
      "tests/patterns/bash/for-metavar.sgrep",
      "tests/patterns/bash/function-body.bash",
      "tests/patterns/bash/function-body.sgrep",
      "tests/patterns/bash/function-metavar.bash",
      "tests/patterns/bash/function-metavar.sgrep",
      "tests/patterns/bash/function.bash",
      "tests/patterns/bash/function.sgrep",
      "tests/patterns/bash/hello.bash",
      "tests/patterns/bash/hello.sgrep",
      "tests/patterns/bash/if-body.bash",
      "tests/patterns/bash/if-body.sgrep",
      "tests/patterns/bash/if-header.bash",
      "tests/patterns/bash/if-header.sgrep",
      "tests/patterns/bash/match-cmd-or-arg.bash",
      "tests/patterns/bash/match-cmd-or-arg.sgrep",
      "tests/patterns/bash/metavar_arg.bash",
      "tests/patterns/bash/metavar_arg.sgrep",
      "tests/patterns/bash/metavar_call.bash",
      "tests/patterns/bash/metavar_call.sgrep",
      "tests/patterns/bash/metavar_equality_expr.bash",
      "tests/patterns/bash/metavar_equality_expr.sgrep",
      "tests/patterns/bash/metavar_equality_var.bash",
      "tests/patterns/bash/metavar_equality_var.sgrep",
      "tests/patterns/bash/metavar_func_def.bash",
      "tests/patterns/bash/metavar_func_def.sgrep",
      "tests/patterns/bash/nested_stmts.bash",
      "tests/patterns/bash/nested_stmts.sgrep",
      "tests/patterns/bash/normalize-dquoted-word.bash",
      "tests/patterns/bash/normalize-dquoted-word.sgrep",
      "tests/patterns/bash/normalize-squoted-word.bash",
      "tests/patterns/bash/normalize-squoted-word.sgrep",
      "tests/patterns/bash/not-an-expression1.bash",
      "tests/patterns/bash/not-an-expression1.sgrep",
      "tests/patterns/bash/not-an-expression2.bash",
      "tests/patterns/bash/not-an-expression2.sgrep",
      "tests/patterns/bash/not-an-expression3.bash",
      "tests/patterns/bash/not-an-expression3.sgrep",
      "tests/patterns/bash/not-an-expression4.bash",
      "tests/patterns/bash/not-an-expression4.sgrep",
      "tests/patterns/bash/not-an-expression5.bash",
      "tests/patterns/bash/not-an-expression5.sgrep",
      "tests/patterns/bash/not.bash",
      "tests/patterns/bash/not.sgrep",
      "tests/patterns/bash/or.bash",
      "tests/patterns/bash/or.sgrep",
      "tests/patterns/bash/pipeline.bash",
      "tests/patterns/bash/pipeline.sgrep",
      "tests/patterns/bash/quoted-ellipsis.bash",
      "tests/patterns/bash/quoted-ellipsis.sgrep",
      "tests/patterns/bash/quoted-ellipsis2.bash",
      "tests/patterns/bash/quoted-ellipsis2.sgrep",
      "tests/patterns/bash/quoted-expansion.bash",
      "tests/patterns/bash/quoted-expansion.sgrep",
      "tests/patterns/bash/quoted-named-ellipsis.bash",
      "tests/patterns/bash/quoted-named-ellipsis.sgrep",
      "tests/patterns/bash/quoted-named-ellipsis2.bash",
      "tests/patterns/bash/quoted-named-ellipsis2.sgrep",
      "tests/patterns/bash/select-body.bash",
      "tests/patterns/bash/select-body.sgrep",
      "tests/patterns/bash/set-lhs-metavar.bash",
      "tests/patterns/bash/set-lhs-metavar.sgrep",
      "tests/patterns/bash/set-rhs-metavar.bash",
      "tests/patterns/bash/set-rhs-metavar.sgrep",
      "tests/patterns/bash/stmt-ellipsis.bash",
      "tests/patterns/bash/stmt-ellipsis.sgrep",
      "tests/patterns/bash/stmt-named-ellipsis.bash",
      "tests/patterns/bash/stmt-named-ellipsis.sgrep",
      "tests/patterns/bash/subshell.bash",
      "tests/patterns/bash/subshell.sgrep",
      "tests/patterns/bash/todo/array-named-ellipsis.bash",
      "tests/patterns/bash/todo/array-named-ellipsis.sgrep",
      "tests/patterns/bash/todo/assign-multi.bash",
      "tests/patterns/bash/todo/assign-multi.sgrep",
      "tests/patterns/bash/todo/c-style-loop.bash",
      "tests/patterns/bash/todo/c-style-loop.sgrep",
      "tests/patterns/bash/todo/deep_exprstmt.sgrep",
      "tests/patterns/bash/todo/for-elt-named-ellipsis.bash",
      "tests/patterns/bash/todo/for-elt-named-ellipsis.sgrep",
      "tests/patterns/bash/todo/until.bash",
      "tests/patterns/bash/todo/until.sgrep",
      "tests/patterns/bash/todo/var-ellipsis-var.bash",
      "tests/patterns/bash/todo/var-ellipsis-var.sgrep",
      "tests/patterns/bash/todo/while-named-ellipsis.bash",
      "tests/patterns/bash/todo/while-named-ellipsis.sgrep",
      "tests/patterns/bash/while-body.bash",
      "tests/patterns/bash/while-body.sgrep",
      "tests/patterns/bash/while-ellipsis.bash",
      "tests/patterns/bash/while-ellipsis.sgrep",
      "tests/patterns/c/aliasing.TODO",
      "tests/patterns/c/concrete_syntax.c",
      "tests/patterns/c/const-prop-buf-decl-flow.c",
      "tests/patterns/c/const-prop-buf-decl-flow.sgrep",
      "tests/patterns/c/const-prop-buf-decl.c",
      "tests/patterns/c/const-prop-buf-decl.sgrep",
      "tests/patterns/c/deep_expr_operator.c",
      "tests/patterns/c/deep_exprstmt.c",
      "tests/patterns/c/dots_args.c",
      "tests/patterns/c/dots_params.c",
      "tests/patterns/c/dots_params.sgrep",
      "tests/patterns/c/dots_sizeof.c",
      "tests/patterns/c/dots_sizeof.sgrep",
      "tests/patterns/c/dots_stmts.c",
      "tests/patterns/c/dots_string.c",
      "tests/patterns/c/equivalence_float.c",
      "tests/patterns/c/equivalence_number.c",
      "tests/patterns/c/goto_fail.c",
      "tests/patterns/c/goto_fail.sgrep",
      "tests/patterns/c/metavar_arg.c",
      "tests/patterns/c/metavar_call.c",
      "tests/patterns/c/metavar_cond.c",
      "tests/patterns/c/metavar_ellipsis_args.c",
      "tests/patterns/c/metavar_equality_expr.c",
      "tests/patterns/c/metavar_equality_stmt.c",
      "tests/patterns/c/metavar_equality_var.c",
      "tests/patterns/c/metavar_import.TODO_fail_with_cplusplus",
      "tests/patterns/c/metavar_import.sgrep",
      "tests/patterns/c/metavar_stmt.c",
      "tests/patterns/c/metavar_typed.c",
      "tests/patterns/c/metavar_typed.sgrep",
      "tests/patterns/c/metavar_typed_generic.c",
      "tests/patterns/c/metavar_typed_generic.sgrep",
      "tests/patterns/c/metavar_typed_reuse.c",
      "tests/patterns/c/metavar_typed_reuse.sgrep",
      "tests/patterns/c/misc_toplevel_macrocall.c",
      "tests/patterns/c/misc_toplevel_macrocall.sgrep",
      "tests/patterns/c/misc_typedef_inference.c",
      "tests/patterns/c/misc_typedef_inference.sgrep",
      "tests/patterns/c/partial_parsing/misc_ifdef_strings.c",
      "tests/patterns/c/partial_parsing/misc_ifdef_strings.sgrep",
      "tests/patterns/c/partial_parsing/note.txt",
      "tests/patterns/c/regexp_string.c",
      "tests/patterns/cairo/deep_cond.cairo",
      "tests/patterns/cairo/deep_cond.sgrep",
      "tests/patterns/cairo/deep_expr_operator.cairo",
      "tests/patterns/cairo/dots_args.cairo",
      "tests/patterns/cairo/dots_args.sgrep",
      "tests/patterns/cairo/dots_attributes.cairo",
      "tests/patterns/cairo/dots_attributes.sgrep",
      "tests/patterns/cairo/dots_loop.cairo",
      "tests/patterns/cairo/dots_loop.sgrep",
      "tests/patterns/cairo/dots_method_chaining.cairo",
      "tests/patterns/cairo/dots_method_chaining.sgrep",
      "tests/patterns/cairo/metavar_let.cairo",
      "tests/patterns/cairo/metavar_let.sgrep",
      "tests/patterns/cairo/metavar_stmt.cairo",
      "tests/patterns/cairo/metavar_stmt.sgrep",
      "tests/patterns/cairo/misc_impl.cairo",
      "tests/patterns/cairo/misc_impl.sgrep",
      "tests/patterns/clojure/TODO/deep_exprstmt.clj",
      "tests/patterns/clojure/TODO/dots_nested_stmts.clj",
      "tests/patterns/clojure/concrete_syntax.clj",
      "tests/patterns/clojure/concrete_syntax.sgrep",
      "tests/patterns/clojure/dots_args.clj",
      "tests/patterns/clojure/dots_args.sgrep",
      "tests/patterns/clojure/dots_stmts.clj",
      "tests/patterns/clojure/dots_stmts.sgrep",
      "tests/patterns/clojure/dots_string.clj",
      "tests/patterns/clojure/dots_string.sgrep",
      "tests/patterns/clojure/metavar_arg.clj",
      "tests/patterns/clojure/metavar_arg.sgrep",
      "tests/patterns/clojure/metavar_call.clj",
      "tests/patterns/clojure/metavar_call.sgrep",
      "tests/patterns/clojure/metavar_equality_var.clj",
      "tests/patterns/clojure/metavar_equality_var.sgrep",
      "tests/patterns/clojure/metavar_slash_access.clj",
      "tests/patterns/clojure/metavar_slash_access.sgrep",
      "tests/patterns/cp_exception.py",
      "tests/patterns/cp_exception.sgrep",
      "tests/patterns/cpp/block_ellipsis.cpp",
      "tests/patterns/cpp/block_ellipsis.sgrep",
      "tests/patterns/cpp/concrete_syntax.cpp",
      "tests/patterns/cpp/deep_expr_operator.cpp",
      "tests/patterns/cpp/deep_exprstmt.cpp",
      "tests/patterns/cpp/dots_args.cpp",
      "tests/patterns/cpp/dots_for.cpp",
      "tests/patterns/cpp/dots_method_chaining.cpp",
      "tests/patterns/cpp/dots_namespace.cpp",
      "tests/patterns/cpp/dots_namespace.sgrep",
      "tests/patterns/cpp/dots_params.cpp",
      "tests/patterns/cpp/dots_params.sgrep",
      "tests/patterns/cpp/dots_rhs.cpp",
      "tests/patterns/cpp/dots_rhs.sgrep",
      "tests/patterns/cpp/dots_stmts.cpp",
      "tests/patterns/cpp/dots_string.cpp",
      "tests/patterns/cpp/equivalence_float.cpp",
      "tests/patterns/cpp/equivalence_number.cpp",
      "tests/patterns/cpp/metavar_arg.cpp",
      "tests/patterns/cpp/metavar_call.cpp",
      "tests/patterns/cpp/metavar_cond.cpp",
      "tests/patterns/cpp/metavar_ellipsis_args.cpp",
      "tests/patterns/cpp/metavar_equality_expr.cpp",
      "tests/patterns/cpp/metavar_equality_stmt.cpp",
      "tests/patterns/cpp/metavar_equality_var.cpp",
      "tests/patterns/cpp/metavar_stmt.cpp",
      "tests/patterns/cpp/misc_const.cpp",
      "tests/patterns/cpp/misc_const.sgrep",
      "tests/patterns/cpp/misc_include.cpp",
      "tests/patterns/cpp/misc_include.sgrep",
      "tests/patterns/cpp/named_ellipsis.cpp",
      "tests/patterns/cpp/named_ellipsis.sgrep",
      "tests/patterns/cpp/parsing_pfff_only/dotstar.cpp",
      "tests/patterns/cpp/parsing_todo_tree_sitter/could_not_find_case.cpp",
      "tests/patterns/cpp/parsing_todo_tree_sitter/non_recoverable1.cpp",
      "tests/patterns/cpp/parsing_todo_tree_sitter/single_name_simple_var.cpp",
      "tests/patterns/cpp/regexp_string.cpp",
      "tests/patterns/cpp/standalone_expr.cpp",
      "tests/patterns/cpp/standalone_expr.sgrep",
      "tests/patterns/cpp/toplevel_ellipsis.cpp",
      "tests/patterns/cpp/toplevel_ellipsis.sgrep",
      "tests/patterns/cpp/typed_metavar.cpp",
      "tests/patterns/cpp/typed_metavar.sgrep",
      "tests/patterns/csharp/concrete_syntax.cs",
      "tests/patterns/csharp/concrete_syntax.sgrep",
      "tests/patterns/csharp/decl_before_init.cs",
      "tests/patterns/csharp/decl_before_init.sgrep",
      "tests/patterns/csharp/deep_expr_operator.cs",
      "tests/patterns/csharp/deep_expr_operator.sgrep",
      "tests/patterns/csharp/deep_exprstmt.cs",
      "tests/patterns/csharp/dots_args.cs",
      "tests/patterns/csharp/dots_args.sgrep",
      "tests/patterns/csharp/dots_class.cs",
      "tests/patterns/csharp/dots_class.sgrep",
      "tests/patterns/csharp/dots_method_chaining.cs",
      "tests/patterns/csharp/dots_nested_stmts.cs",
      "tests/patterns/csharp/dots_nested_stmts.sgrep",
      "tests/patterns/csharp/dots_parameters.cs",
      "tests/patterns/csharp/dots_parameters.sgrep",
      "tests/patterns/csharp/dots_stmts.cs",
      "tests/patterns/csharp/dots_stmts.sgrep",
      "tests/patterns/csharp/dots_string.cs",
      "tests/patterns/csharp/dots_string.sgrep",
      "tests/patterns/csharp/equivalence_constant_propagation.cs",
      "tests/patterns/csharp/equivalence_constant_propagation.sgrep",
      "tests/patterns/csharp/loops.cs",
      "tests/patterns/csharp/loops.sgrep",
      "tests/patterns/csharp/metavar_anno.cs",
      "tests/patterns/csharp/metavar_anno.sgrep",
      "tests/patterns/csharp/metavar_arg.cs",
      "tests/patterns/csharp/metavar_arg.sgrep",
      "tests/patterns/csharp/metavar_call.cs",
      "tests/patterns/csharp/metavar_class_def.cs",
      "tests/patterns/csharp/metavar_class_def.sgrep",
      "tests/patterns/csharp/metavar_cond.cs",
      "tests/patterns/csharp/metavar_cond.sgrep",
      "tests/patterns/csharp/metavar_ellipsis_args.cs",
      "tests/patterns/csharp/metavar_ellipsis_new_args.cs",
      "tests/patterns/csharp/metavar_ellipsis_new_args.sgrep",
      "tests/patterns/csharp/metavar_equality_expr.cs",
      "tests/patterns/csharp/metavar_equality_expr.sgrep",
      "tests/patterns/csharp/metavar_equality_stmt.cs",
      "tests/patterns/csharp/metavar_equality_stmt.sgrep",
      "tests/patterns/csharp/metavar_equality_var.cs",
      "tests/patterns/csharp/metavar_equality_var.sgrep",
      "tests/patterns/csharp/metavar_func_def.cs",
      "tests/patterns/csharp/metavar_func_def.sgrep",
      "tests/patterns/csharp/metavar_import.cs",
      "tests/patterns/csharp/metavar_import.sgrep",
      "tests/patterns/csharp/metavar_key_value.cs",
      "tests/patterns/csharp/metavar_key_value.sgrep",
      "tests/patterns/csharp/metavar_stmt.cs",
      "tests/patterns/csharp/metavar_stmt.sgrep",
      "tests/patterns/csharp/metavar_typed.cs",
      "tests/patterns/csharp/metavar_typed.sgrep",
      "tests/patterns/csharp/misc_enum_pattern.cs",
      "tests/patterns/csharp/misc_enum_pattern.sgrep",
      "tests/patterns/csharp/todo/misc_linq.cs",
      "tests/patterns/csharp/todo/misc_linq.sgrep",
      "tests/patterns/csharp/toplevel_ellipsis.cs",
      "tests/patterns/csharp/toplevel_ellipsis.sgrep",
      "tests/patterns/dart/concrete_syntax.dart",
      "tests/patterns/dart/deep_expr_operator.dart",
      "tests/patterns/dart/deep_exprstmt.dart",
      "tests/patterns/dart/dots_args.dart",
      "tests/patterns/dart/dots_expr.dart",
      "tests/patterns/dart/metavar_arg.dart",
      "tests/patterns/dart/metavar_call.dart",
      "tests/patterns/dart/metavar_stmt.dart",
      "tests/patterns/dockerfile/add-chown.dockerfile",
      "tests/patterns/dockerfile/add-chown.sgrep",
      "tests/patterns/dockerfile/add.dockerfile",
      "tests/patterns/dockerfile/add.sgrep",
      "tests/patterns/dockerfile/arg-default-metavar.dockerfile",
      "tests/patterns/dockerfile/arg-default-metavar.sgrep",
      "tests/patterns/dockerfile/arg-metavar.dockerfile",
      "tests/patterns/dockerfile/arg-metavar.sgrep",
      "tests/patterns/dockerfile/arg.dockerfile",
      "tests/patterns/dockerfile/arg.sgrep",
      "tests/patterns/dockerfile/array-ellipsis.dockerfile",
      "tests/patterns/dockerfile/array-ellipsis.sgrep",
      "tests/patterns/dockerfile/array-metavariable.dockerfile",
      "tests/patterns/dockerfile/array-metavariable.sgrep",
      "tests/patterns/dockerfile/cmd-argv.dockerfile",
      "tests/patterns/dockerfile/cmd-argv.sgrep",
      "tests/patterns/dockerfile/cmd-shell.dockerfile",
      "tests/patterns/dockerfile/cmd-shell.sgrep",
      "tests/patterns/dockerfile/cmd.dockerfile",
      "tests/patterns/dockerfile/cmd.sgrep",
      "tests/patterns/dockerfile/concrete_syntax.dockerfile",
      "tests/patterns/dockerfile/concrete_syntax.sgrep",
      "tests/patterns/dockerfile/copy-chown.dockerfile",
      "tests/patterns/dockerfile/copy-chown.sgrep",
      "tests/patterns/dockerfile/copy-ellipsis.dockerfile",
      "tests/patterns/dockerfile/copy-ellipsis.sgrep",
      "tests/patterns/dockerfile/copy-metavar.dockerfile",
      "tests/patterns/dockerfile/copy-metavar.sgrep",
      "tests/patterns/dockerfile/copy-multiple-files.dockerfile",
      "tests/patterns/dockerfile/copy-multiple-files.sgrep",
      "tests/patterns/dockerfile/copy-param.dockerfile",
      "tests/patterns/dockerfile/copy-param.sgrep",
      "tests/patterns/dockerfile/copy.dockerfile",
      "tests/patterns/dockerfile/copy.sgrep",
      "tests/patterns/dockerfile/deep_exprstmt.TODO",
      "tests/patterns/dockerfile/deep_exprstmt.sgrep",
      "tests/patterns/dockerfile/dots_args.dockerfile",
      "tests/patterns/dockerfile/dots_args.sgrep",
      "tests/patterns/dockerfile/dots_nested_stmts.dockerfile",
      "tests/patterns/dockerfile/dots_nested_stmts.sgrep",
      "tests/patterns/dockerfile/dots_stmts.dockefile",
      "tests/patterns/dockerfile/dots_stmts.dockerfile",
      "tests/patterns/dockerfile/dots_stmts.sgrep",
      "tests/patterns/dockerfile/dots_string.dockerfile",
      "tests/patterns/dockerfile/dots_string.sgrep",
      "tests/patterns/dockerfile/entrypoint.dockerfile",
      "tests/patterns/dockerfile/entrypoint.sgrep",
      "tests/patterns/dockerfile/env-const-prop.dockerfile",
      "tests/patterns/dockerfile/env-const-prop.sgrep",
      "tests/patterns/dockerfile/env-key-one-char.dockerfile",
      "tests/patterns/dockerfile/env-key-one-char.sgrep",
      "tests/patterns/dockerfile/env-val-metavar.dockerfile",
      "tests/patterns/dockerfile/env-val-metavar.sgrep",
      "tests/patterns/dockerfile/env.dockerfile",
      "tests/patterns/dockerfile/env.sgrep",
      "tests/patterns/dockerfile/expose-ellipsis.dockerfile",
      "tests/patterns/dockerfile/expose-ellipsis.sgrep",
      "tests/patterns/dockerfile/expose-metavar.dockerfile",
      "tests/patterns/dockerfile/expose-metavar.sgrep",
      "tests/patterns/dockerfile/expose.dockerfile",
      "tests/patterns/dockerfile/expose.sgrep",
      "tests/patterns/dockerfile/from-alias-reuse.dockerfile",
      "tests/patterns/dockerfile/from-alias-reuse.sgrep",
      "tests/patterns/dockerfile/from-as.dockerfile",
      "tests/patterns/dockerfile/from-as.sgrep",
      "tests/patterns/dockerfile/from-digest-metavar.dockerfile",
      "tests/patterns/dockerfile/from-digest-metavar.sgrep",
      "tests/patterns/dockerfile/from-param.dockerfile",
      "tests/patterns/dockerfile/from-param.sgrep",
      "tests/patterns/dockerfile/from-tag-metavar.dockerfile",
      "tests/patterns/dockerfile/from-tag-metavar.sgrep",
      "tests/patterns/dockerfile/from.dockerfile",
      "tests/patterns/dockerfile/from.sgrep",
      "tests/patterns/dockerfile/from2.dockerfile",
      "tests/patterns/dockerfile/from2.sgrep",
      "tests/patterns/dockerfile/healthcheck-metavar.dockerfile",
      "tests/patterns/dockerfile/healthcheck-metavar.sgrep",
      "tests/patterns/dockerfile/healthcheck-none.dockerfile",
      "tests/patterns/dockerfile/healthcheck-none.sgrep",
      "tests/patterns/dockerfile/healthcheck-options.dockerfile",
      "tests/patterns/dockerfile/healthcheck-options.sgrep",
      "tests/patterns/dockerfile/healthcheck.dockerfile",
      "tests/patterns/dockerfile/healthcheck.sgrep",
      "tests/patterns/dockerfile/instruction-ellipsis.dockerfile",
      "tests/patterns/dockerfile/instruction-ellipsis.sgrep",
      "tests/patterns/dockerfile/instruction-metavariable.dockerfile",
      "tests/patterns/dockerfile/instruction-metavariable.sgrep",
      "tests/patterns/dockerfile/label-ellipsis.dockerfile",
      "tests/patterns/dockerfile/label-ellipsis.sgrep",
      "tests/patterns/dockerfile/label-metavar.dockerfile",
      "tests/patterns/dockerfile/label-metavar.sgrep",
      "tests/patterns/dockerfile/label.dockerfile",
      "tests/patterns/dockerfile/label.sgrep",
      "tests/patterns/dockerfile/maintainer-metavar.dockerfile",
      "tests/patterns/dockerfile/maintainer-metavar.sgrep",
      "tests/patterns/dockerfile/maintainer.dockerfile",
      "tests/patterns/dockerfile/maintainer.sgrep",
      "tests/patterns/dockerfile/metavar-backref.dockerfile",
      "tests/patterns/dockerfile/metavar-backref.sgrep",
      "tests/patterns/dockerfile/metavar_arg.dockerfile",
      "tests/patterns/dockerfile/metavar_arg.sgrep",
      "tests/patterns/dockerfile/metavar_call.dockerfile",
      "tests/patterns/dockerfile/metavar_call.sgrep",
      "tests/patterns/dockerfile/metavar_equality_var.dockerfile",
      "tests/patterns/dockerfile/metavar_equality_var.sgrep",
      "tests/patterns/dockerfile/no-trailing-newline.dockerfile",
      "tests/patterns/dockerfile/no-trailing-newline.sgrep",
      "tests/patterns/dockerfile/onbuild.dockerfile",
      "tests/patterns/dockerfile/onbuild.sgrep",
      "tests/patterns/dockerfile/run-anchored.dockerfile",
      "tests/patterns/dockerfile/run-anchored.sgrep",
      "tests/patterns/dockerfile/run-argv.dockerfile",
      "tests/patterns/dockerfile/run-argv.sgrep",
      "tests/patterns/dockerfile/run-param-metavar.dockerfile",
      "tests/patterns/dockerfile/run-param-metavar.sgrep",
      "tests/patterns/dockerfile/run-param-mount-metavar.dockerfile",
      "tests/patterns/dockerfile/run-param-mount-metavar.sgrep",
      "tests/patterns/dockerfile/run-param.dockerfile",
      "tests/patterns/dockerfile/run-param.sgrep",
      "tests/patterns/dockerfile/run.dockerfile",
      "tests/patterns/dockerfile/run.sgrep",
      "tests/patterns/dockerfile/shell.dockerfile",
      "tests/patterns/dockerfile/shell.sgrep",
      "tests/patterns/dockerfile/stopsignal-metavar.dockerfile",
      "tests/patterns/dockerfile/stopsignal-metavar.sgrep",
      "tests/patterns/dockerfile/stopsignal.dockerfile",
      "tests/patterns/dockerfile/stopsignal.sgrep",
      "tests/patterns/dockerfile/string-comparison.dockerfile",
      "tests/patterns/dockerfile/string-comparison.sgrep",
      "tests/patterns/dockerfile/strings.dockerfile",
      "tests/patterns/dockerfile/strings.sgrep",
      "tests/patterns/dockerfile/todo/env-key-metavar.dockerfile",
      "tests/patterns/dockerfile/todo/env-key-metavar.sgrep",
      "tests/patterns/dockerfile/todo/string-fragments.dockerfile",
      "tests/patterns/dockerfile/todo/string-fragments.sgrep",
      "tests/patterns/dockerfile/user-group-expansion.dockerfile",
      "tests/patterns/dockerfile/user-group-expansion.sgrep",
      "tests/patterns/dockerfile/user-group-metavar.dockerfile",
      "tests/patterns/dockerfile/user-group-metavar.sgrep",
      "tests/patterns/dockerfile/user-group.dockerfile",
      "tests/patterns/dockerfile/user-group.sgrep",
      "tests/patterns/dockerfile/user.dockerfile",
      "tests/patterns/dockerfile/user.sgrep",
      "tests/patterns/dockerfile/volume-ellipsis.dockerfile",
      "tests/patterns/dockerfile/volume-ellipsis.sgrep",
      "tests/patterns/dockerfile/volume-metavar.dockerfile",
      "tests/patterns/dockerfile/volume-metavar.sgrep",
      "tests/patterns/dockerfile/volume.dockerfile",
      "tests/patterns/dockerfile/volume.sgrep",
      "tests/patterns/dockerfile/workdir-metavar.dockerfile",
      "tests/patterns/dockerfile/workdir-metavar.sgrep",
      "tests/patterns/dockerfile/workdir.dockerfile",
      "tests/patterns/dockerfile/workdir.sgrep",
      "tests/patterns/generic/concrete_syntax.generic",
      "tests/patterns/generic/dots_args.generic",
      "tests/patterns/generic/dots_args.sgrep",
      "tests/patterns/generic/dots_expr.generic",
      "tests/patterns/generic/dots_stmts.generic",
      "tests/patterns/generic/dots_string.generic",
      "tests/patterns/generic/dots_string.sgrep",
      "tests/patterns/generic/metavar_call.generic",
      "tests/patterns/generic/metavar_equality_var.generic",
      "tests/patterns/generic/metavar_equality_var.sgrep",
      "tests/patterns/generic/metavar_stmt.generic",
      "tests/patterns/generic/metavar_stmt.sgrep",
      "tests/patterns/generic/minified.generic",
      "tests/patterns/generic/minified.sgrep",
      "tests/patterns/generic/misc_else_blocks_brace.generic",
      "tests/patterns/generic/misc_else_blocks_brace.sgrep",
      "tests/patterns/generic/misc_else_blocks_no_brace.generic",
      "tests/patterns/generic/misc_else_blocks_no_brace.sgrep",
      "tests/patterns/generic/misc_if_blocks_brace.generic",
      "tests/patterns/generic/misc_if_blocks_brace.sgrep",
      "tests/patterns/generic/misc_if_blocks_no_brace.generic",
      "tests/patterns/generic/misc_if_blocks_no_brace.sgrep",
      "tests/patterns/generic/not-minified.generic",
      "tests/patterns/generic/not-minified.sgrep",
      "tests/patterns/go/aliasing.TODO",
      "tests/patterns/go/concrete_syntax.go",
      "tests/patterns/go/cp_ref.go",
      "tests/patterns/go/cp_ref.sgrep",
      "tests/patterns/go/cp_shortassign.go",
      "tests/patterns/go/cp_shortassign.sgrep",
      "tests/patterns/go/deep_cond.go",
      "tests/patterns/go/deep_cond.sgrep",
      "tests/patterns/go/deep_expr_lambda.go",
      "tests/patterns/go/deep_expr_lambda.sgrep",
      "tests/patterns/go/deep_expr_operator.go",
      "tests/patterns/go/deep_exprstmt.go",
      "tests/patterns/go/dots_args.go",
      "tests/patterns/go/dots_attributes.go",
      "tests/patterns/go/dots_attributes.sgrep",
      "tests/patterns/go/dots_expr.go",
      "tests/patterns/go/dots_for.go",
      "tests/patterns/go/dots_for.sgrep",
      "tests/patterns/go/dots_function_type.go",
      "tests/patterns/go/dots_function_type.sgrep",
      "tests/patterns/go/dots_import.go",
      "tests/patterns/go/dots_import.sgrep",
      "tests/patterns/go/dots_method_chaining.go",
      "tests/patterns/go/dots_nested_stmts.go",
      "tests/patterns/go/dots_nested_stmts.sgrep",
      "tests/patterns/go/dots_newargs.go",
      "tests/patterns/go/dots_newargs.sgrep",
      "tests/patterns/go/dots_package.go",
      "tests/patterns/go/dots_package.sgrep",
      "tests/patterns/go/dots_params.go",
      "tests/patterns/go/dots_params.sgrep",
      "tests/patterns/go/dots_select_cases.go",
      "tests/patterns/go/dots_select_cases.sgrep",
      "tests/patterns/go/dots_stmts.go",
      "tests/patterns/go/dots_stmts.sgrep",
      "tests/patterns/go/dots_stmts2.go",
      "tests/patterns/go/dots_stmts2.newline.go",
      "tests/patterns/go/dots_stmts2.newline.sgrep",
      "tests/patterns/go/dots_stmts2.sgrep",
      "tests/patterns/go/dots_stmts3.go",
      "tests/patterns/go/dots_stmts3.sgrep",
      "tests/patterns/go/dots_string.go",
      "tests/patterns/go/dots_struct_fields.TODO",
      "tests/patterns/go/dots_struct_fields.go.TODO",
      "tests/patterns/go/dots_struct_order.go",
      "tests/patterns/go/dots_struct_order.sgrep",
      "tests/patterns/go/dots_switch_cases.go",
      "tests/patterns/go/dots_switch_cases.sgrep",
      "tests/patterns/go/dots_type_tuple.go",
      "tests/patterns/go/dots_type_tuple.sgrep",
      "tests/patterns/go/equivalence_constant_dataflow.go.TODO",
      "tests/patterns/go/equivalence_constant_dataflow.sgrep.TODO",
      "tests/patterns/go/equivalence_constant_propagation.go",
      "tests/patterns/go/equivalence_interpolated_str.go",
      "tests/patterns/go/equivalence_interpolated_str.sgrep",
      "tests/patterns/go/equivalence_naming_import.go",
      "tests/patterns/go/equivalence_naming_import.sgrep",
      "tests/patterns/go/equivalence_naming_import1.go",
      "tests/patterns/go/equivalence_naming_import1.sgrep",
      "tests/patterns/go/equivalence_naming_import2.go",
      "tests/patterns/go/equivalence_naming_import2.sgrep",
      "tests/patterns/go/import_metavar.go",
      "tests/patterns/go/import_metavar.sgrep",
      "tests/patterns/go/import_metavar2.go",
      "tests/patterns/go/import_metavar2.sgrep",
      "tests/patterns/go/imports.go",
      "tests/patterns/go/imports.sgrep",
      "tests/patterns/go/imports2.sgrep",
      "tests/patterns/go/imports3.sgrep",
      "tests/patterns/go/imports_metavar.go",
      "tests/patterns/go/imports_metavar.sgrep",
      "tests/patterns/go/imports_prefix.go",
      "tests/patterns/go/imports_prefix.sgrep",
      "tests/patterns/go/interface_type_assertion.go",
      "tests/patterns/go/interface_type_assertion.sgrep",
      "tests/patterns/go/make-args-trans.go",
      "tests/patterns/go/make-args-trans.sgrep",
      "tests/patterns/go/make_ellipsis_firstarg.go",
      "tests/patterns/go/make_ellipsis_firstarg.sgrep",
      "tests/patterns/go/make_metavar_firstarg.go",
      "tests/patterns/go/make_metavar_firstarg.sgrep",
      "tests/patterns/go/make_tri_pat.go",
      "tests/patterns/go/make_tri_pat.sgrep",
      "tests/patterns/go/metavar-typing-structs-and-new.go",
      "tests/patterns/go/metavar-typing-structs-and-new.sgrep",
      "tests/patterns/go/metavar_arg.go",
      "tests/patterns/go/metavar_call.go",
      "tests/patterns/go/metavar_cond.go",
      "tests/patterns/go/metavar_cond.sgrep",
      "tests/patterns/go/metavar_ellipsis_args.go",
      "tests/patterns/go/metavar_ellipsis_stmts.go",
      "tests/patterns/go/metavar_ellipsis_stmts.sgrep",
      "tests/patterns/go/metavar_equality_expr.go",
      "tests/patterns/go/metavar_equality_stmt.go",
      "tests/patterns/go/metavar_equality_stmt.sgrep",
      "tests/patterns/go/metavar_equality_var.go",
      "tests/patterns/go/metavar_equality_vardef_vs_use.go",
      "tests/patterns/go/metavar_equality_vardef_vs_use.sgrep",
      "tests/patterns/go/metavar_expr.go",
      "tests/patterns/go/metavar_expr.sgrep",
      "tests/patterns/go/metavar_func_def.go",
      "tests/patterns/go/metavar_func_def.sgrep",
      "tests/patterns/go/metavar_import.go.TODO",
      "tests/patterns/go/metavar_import.sgrep.TODO",
      "tests/patterns/go/metavar_key_value.go",
      "tests/patterns/go/metavar_key_value.sgrep",
      "tests/patterns/go/metavar_package.go",
      "tests/patterns/go/metavar_package.sgrep",
      "tests/patterns/go/metavar_stmt.TODO",
      "tests/patterns/go/metavar_stmt.go",
      "tests/patterns/go/metavar_stmt.sgrep",
      "tests/patterns/go/metavar_type.go",
      "tests/patterns/go/metavar_type.sgrep",
      "tests/patterns/go/metavar_typed.go",
      "tests/patterns/go/metavar_typed.sgrep",
      "tests/patterns/go/metavar_typed_args.go",
      "tests/patterns/go/metavar_typed_args.sgrep",
      "tests/patterns/go/metavar_typed_fieldaccess.go.TODO",
      "tests/patterns/go/metavar_typed_fieldaccess.sgrep.TODO",
      "tests/patterns/go/metavar_typed_lefthand.go",
      "tests/patterns/go/metavar_typed_lefthand.sgrep",
      "tests/patterns/go/metavar_typed_literal.go",
      "tests/patterns/go/metavar_typed_literal.sgrep",
      "tests/patterns/go/metavar_typed_struct.go",
      "tests/patterns/go/metavar_typed_struct.sgrep",
      "tests/patterns/go/misc_assignop.go",
      "tests/patterns/go/misc_assignop.sgrep",
      "tests/patterns/go/misc_cast_autofix.go",
      "tests/patterns/go/misc_cast_autofix.sgrep",
      "tests/patterns/go/misc_compositelit.go",
      "tests/patterns/go/misc_compositelit.sgrep",
      "tests/patterns/go/misc_diff_pfff_treesitter.go",
      "tests/patterns/go/misc_diff_pfff_treesitter.sgrep",
      "tests/patterns/go/misc_empty_body.go",
      "tests/patterns/go/misc_empty_body.sgrep",
      "tests/patterns/go/misc_exprstmt_vs_expr.go",
      "tests/patterns/go/misc_exprstmt_vs_expr.sgrep",
      "tests/patterns/go/misc_functype_0arg.go",
      "tests/patterns/go/misc_functype_0arg.sgrep",
      "tests/patterns/go/misc_functype_0arg_bis.go",
      "tests/patterns/go/misc_functype_0arg_bis.sgrep",
      "tests/patterns/go/misc_hidden_empty.go",
      "tests/patterns/go/misc_hidden_empty.sgrep",
      "tests/patterns/go/misc_hidden_empty2.go",
      "tests/patterns/go/misc_hidden_empty2.sgrep",
      "tests/patterns/go/misc_import.go",
      "tests/patterns/go/misc_import.sgrep",
      "tests/patterns/go/misc_import_order.go",
      "tests/patterns/go/misc_import_order.sgrep",
      "tests/patterns/go/misc_initkey.go",
      "tests/patterns/go/misc_initkey.sgrep",
      "tests/patterns/go/misc_interface_method.go",
      "tests/patterns/go/misc_interface_method.sgrep",
      "tests/patterns/go/misc_noteq.go",
      "tests/patterns/go/misc_noteq.sgrep",
      "tests/patterns/go/misc_package.go",
      "tests/patterns/go/misc_package.sgrep",
      "tests/patterns/go/misc_ref_new.go",
      "tests/patterns/go/misc_ref_new.sgrep",
      "tests/patterns/go/misc_regression1.go",
      "tests/patterns/go/misc_regression1.sgrep",
      "tests/patterns/go/misc_tuple_order.go",
      "tests/patterns/go/misc_tuple_order.sgrep",
      "tests/patterns/go/misc_type_decl.go",
      "tests/patterns/go/misc_type_decl.sgrep",
      "tests/patterns/go/multiple_metavars.go",
      "tests/patterns/go/multiple_metavars.sgrep",
      "tests/patterns/go/package_metavar.go",
      "tests/patterns/go/package_metavar.sgrep",
      "tests/patterns/go/partial_function.go",
      "tests/patterns/go/partial_function.sgrep",
      "tests/patterns/go/partial_initbraces.go",
      "tests/patterns/go/partial_initbraces.sgrep",
      "tests/patterns/go/partial_single_field.go",
      "tests/patterns/go/partial_single_field.sgrep",
      "tests/patterns/go/partial_single_field2.go",
      "tests/patterns/go/partial_single_field2.sgrep",
      "tests/patterns/go/regexp_caret.go",
      "tests/patterns/go/regexp_caret.sgrep",
      "tests/patterns/go/regexp_import.go",
      "tests/patterns/go/regexp_import.sgrep",
      "tests/patterns/go/regexp_string.go",
      "tests/patterns/go/shortassign.go",
      "tests/patterns/go/shortassign.sgrep",
      "tests/patterns/go/string_literals.go",
      "tests/patterns/go/string_literals.sgrep",
      "tests/patterns/go/todo/imports3.go",
      "tests/patterns/go/typing-make.go",
      "tests/patterns/go/typing-make.sgrep",
      "tests/patterns/hack/TODO/equivalence_constant_propagation.hack",
      "tests/patterns/hack/TODO/equivalence_constant_propagation.sgrep",
      "tests/patterns/hack/TODO/equivalence_eq.hack",
      "tests/patterns/hack/TODO/equivalence_eq.sgrep",
      "tests/patterns/hack/TODO/equivalence_naming_import.hack",
      "tests/patterns/hack/TODO/equivalence_naming_import.sgrep",
      "tests/patterns/hack/concrete_syntax.hack",
      "tests/patterns/hack/deep_expr_operator.hack",
      "tests/patterns/hack/deep_exprstmt.hack",
      "tests/patterns/hack/dots_args.hack",
      "tests/patterns/hack/dots_class_def.hack",
      "tests/patterns/hack/dots_class_def.sgrep",
      "tests/patterns/hack/dots_func_def.hack",
      "tests/patterns/hack/dots_func_def.sgrep",
      "tests/patterns/hack/dots_method_chaining.hack",
      "tests/patterns/hack/dots_method_chaining.sgrep",
      "tests/patterns/hack/dots_nested_stmts.hack",
      "tests/patterns/hack/dots_nested_stmts.sgrep",
      "tests/patterns/hack/dots_params.hack",
      "tests/patterns/hack/dots_params.sgrep",
      "tests/patterns/hack/dots_stmts.hack",
      "tests/patterns/hack/dots_string.hack",
      "tests/patterns/hack/metavar_anno_class.hack",
      "tests/patterns/hack/metavar_anno_class.sgrep",
      "tests/patterns/hack/metavar_arg.hack",
      "tests/patterns/hack/metavar_call.hack",
      "tests/patterns/hack/metavar_class_def.hack",
      "tests/patterns/hack/metavar_cond.hack",
      "tests/patterns/hack/metavar_cond.sgrep",
      "tests/patterns/hack/metavar_ellipsis_args.hack",
      "tests/patterns/hack/metavar_equality_expr.hack",
      "tests/patterns/hack/metavar_equality_stmt.hack",
      "tests/patterns/hack/metavar_equality_var.hack",
      "tests/patterns/hack/metavar_func_def.hack",
      "tests/patterns/hack/metavar_import.hack",
      "tests/patterns/hack/metavar_import.sgrep",
      "tests/patterns/hack/metavar_stmt.hack",
      "tests/patterns/html/metavar_attr_value.html",
      "tests/patterns/html/metavar_attr_value.sgrep",
      "tests/patterns/html/metavar_ellipsis_xmls.html",
      "tests/patterns/html/metavar_ellipsis_xmls.sgrep",
      "tests/patterns/html/metavar_tag.html",
      "tests/patterns/html/metavar_tag.sgrep",
      "tests/patterns/html/misc_many_features.html",
      "tests/patterns/html/misc_many_features.sgrep",
      "tests/patterns/java/aliasing.TODO",
      "tests/patterns/java/aliasing_and_direct.java",
      "tests/patterns/java/aliasing_and_direct.sgrep",
      "tests/patterns/java/aliasing_and_direct2.java",
      "tests/patterns/java/aliasing_and_direct2.sgrep",
      "tests/patterns/java/aliasing_qualified.java",
      "tests/patterns/java/aliasing_qualified.sgrep",
      "tests/patterns/java/aliasing_type.java",
      "tests/patterns/java/aliasing_type.sgrep",
      "tests/patterns/java/better_import1.java",
      "tests/patterns/java/better_import1.sgrep",
      "tests/patterns/java/better_import2.java",
      "tests/patterns/java/better_import2.sgrep",
      "tests/patterns/java/better_import3.java",
      "tests/patterns/java/better_import3.sgrep",
      "tests/patterns/java/better_import4.java",
      "tests/patterns/java/better_import4.sgrep",
      "tests/patterns/java/boxing_equivalences_boolean.java",
      "tests/patterns/java/boxing_equivalences_boolean.sgrep",
      "tests/patterns/java/boxing_equivalences_boxed_boolean.java",
      "tests/patterns/java/boxing_equivalences_boxed_boolean.sgrep",
      "tests/patterns/java/boxing_equivalences_int.java",
      "tests/patterns/java/boxing_equivalences_int.sgrep",
      "tests/patterns/java/boxing_equivalences_integer.java",
      "tests/patterns/java/boxing_equivalences_integer.sgrep",
      "tests/patterns/java/boxing_equivalences_resolved_boolean.java",
      "tests/patterns/java/boxing_equivalences_resolved_boolean.sgrep",
      "tests/patterns/java/boxing_equivalences_resolved_integer.java",
      "tests/patterns/java/boxing_equivalences_resolved_integer.sgrep",
      "tests/patterns/java/boxing_equivalences_resolved_string.java",
      "tests/patterns/java/boxing_equivalences_resolved_string.sgrep",
      "tests/patterns/java/boxing_equivalences_string.java",
      "tests/patterns/java/boxing_equivalences_string.sgrep",
      "tests/patterns/java/concrete_syntax.java",
      "tests/patterns/java/cp_foreach.java",
      "tests/patterns/java/cp_foreach.sgrep",
      "tests/patterns/java/cp_is_must_analysis.java",
      "tests/patterns/java/cp_is_must_analysis.sgrep",
      "tests/patterns/java/cp_is_must_analysis1.java",
      "tests/patterns/java/cp_is_must_analysis1.sgrep",
      "tests/patterns/java/cp_is_must_analysis2.java",
      "tests/patterns/java/cp_is_must_analysis2.sgrep",
      "tests/patterns/java/cp_string_format.java",
      "tests/patterns/java/cp_string_format.sgrep",
      "tests/patterns/java/cp_switch_throw.java",
      "tests/patterns/java/cp_switch_throw.sgrep",
      "tests/patterns/java/cp_synchronized.java",
      "tests/patterns/java/cp_synchronized.sgrep",
      "tests/patterns/java/cp_synchronized1.java",
      "tests/patterns/java/cp_synchronized1.sgrep",
      "tests/patterns/java/cp_try_return.java",
      "tests/patterns/java/cp_try_return.sgrep",
      "tests/patterns/java/deep_cond.java",
      "tests/patterns/java/deep_cond.sgrep",
      "tests/patterns/java/deep_expr_operator.java",
      "tests/patterns/java/deep_exprstmt.java",
      "tests/patterns/java/dots_annotations.java",
      "tests/patterns/java/dots_annotations.sgrep",
      "tests/patterns/java/dots_annotations_brackets.java",
      "tests/patterns/java/dots_annotations_brackets.sgrep",
      "tests/patterns/java/dots_args.java",
      "tests/patterns/java/dots_attribute.java",
      "tests/patterns/java/dots_attribute.sgrep",
      "tests/patterns/java/dots_catch.java",
      "tests/patterns/java/dots_catch.sgrep",
      "tests/patterns/java/dots_enum.java",
      "tests/patterns/java/dots_enum.sgrep",
      "tests/patterns/java/dots_expr.java",
      "tests/patterns/java/dots_for.java",
      "tests/patterns/java/dots_generics.java",
      "tests/patterns/java/dots_generics.sgrep",
      "tests/patterns/java/dots_generics2.java",
      "tests/patterns/java/dots_generics2.sgrep",
      "tests/patterns/java/dots_import.java",
      "tests/patterns/java/dots_import.sgrep",
      "tests/patterns/java/dots_interface.java",
      "tests/patterns/java/dots_interface.sgrep",
      "tests/patterns/java/dots_method_chaining.java",
      "tests/patterns/java/dots_method_chaining2.java",
      "tests/patterns/java/dots_method_chaining2.sgrep",
      "tests/patterns/java/dots_method_chaining3.java",
      "tests/patterns/java/dots_method_chaining3.sgrep",
      "tests/patterns/java/dots_method_chaining_simple.java",
      "tests/patterns/java/dots_method_chaining_simple.sgrep",
      "tests/patterns/java/dots_nested_stmts.java",
      "tests/patterns/java/dots_params.java",
      "tests/patterns/java/dots_params.sgrep",
      "tests/patterns/java/dots_stmts.java",
      "tests/patterns/java/dots_string.java",
      "tests/patterns/java/dots_vardef.java",
      "tests/patterns/java/dots_vardef.sgrep",
      "tests/patterns/java/equivalence_constant_propagation.java",
      "tests/patterns/java/equivalence_constant_propagation.sgrep",
      "tests/patterns/java/equivalence_constant_propagation2.java",
      "tests/patterns/java/equivalence_constant_propagation2.sgrep",
      "tests/patterns/java/equivalence_constant_propagation_field.java",
      "tests/patterns/java/equivalence_constant_propagation_field.sgrep",
      "tests/patterns/java/errors/record_and_accents.java",
      "tests/patterns/java/errors/recoverable_error1.java",
      "tests/patterns/java/errors/unrecoverable_error1.java",
      "tests/patterns/java/generics_args.java",
      "tests/patterns/java/generics_args.sgrep",
      "tests/patterns/java/id_qualified.java",
      "tests/patterns/java/id_qualified.sgrep",
      "tests/patterns/java/import_metavar_fullpath.java",
      "tests/patterns/java/import_metavar_fullpath.sgrep",
      "tests/patterns/java/less_generics.java",
      "tests/patterns/java/less_generics.sgrep",
      "tests/patterns/java/less_inheritance.java",
      "tests/patterns/java/less_inheritance.sgrep",
      "tests/patterns/java/metavar_anno.java",
      "tests/patterns/java/metavar_arg.java",
      "tests/patterns/java/metavar_as_type.java",
      "tests/patterns/java/metavar_as_type.sgrep",
      "tests/patterns/java/metavar_call.java",
      "tests/patterns/java/metavar_class_def.java",
      "tests/patterns/java/metavar_class_type.java",
      "tests/patterns/java/metavar_class_type.sgrep",
      "tests/patterns/java/metavar_cond.java",
      "tests/patterns/java/metavar_ellipsis_args.java",
      "tests/patterns/java/metavar_ellipsis_params.java",
      "tests/patterns/java/metavar_ellipsis_params.sgrep",
      "tests/patterns/java/metavar_equality_expr.java",
      "tests/patterns/java/metavar_equality_field_vs_use.java",
      "tests/patterns/java/metavar_equality_field_vs_use.sgrep",
      "tests/patterns/java/metavar_equality_stmt.java",
      "tests/patterns/java/metavar_equality_var.java",
      "tests/patterns/java/metavar_func_anno.java",
      "tests/patterns/java/metavar_func_anno.sgrep",
      "tests/patterns/java/metavar_func_def.java",
      "tests/patterns/java/metavar_func_def.sgrep",
      "tests/patterns/java/metavar_idspecial.java",
      "tests/patterns/java/metavar_idspecial.sgrep",
      "tests/patterns/java/metavar_import.java",
      "tests/patterns/java/metavar_import.sgrep",
      "tests/patterns/java/metavar_name.java",
      "tests/patterns/java/metavar_name.sgrep",
      "tests/patterns/java/metavar_package.java",
      "tests/patterns/java/metavar_package.sgrep",
      "tests/patterns/java/metavar_qualified_id.java",
      "tests/patterns/java/metavar_qualified_id.sgrep",
      "tests/patterns/java/metavar_stmt.java",
      "tests/patterns/java/metavar_typed.java",
      "tests/patterns/java/metavar_typed.sgrep",
      "tests/patterns/java/metavar_typed_args.java",
      "tests/patterns/java/metavar_typed_args.sgrep",
      "tests/patterns/java/metavar_typed_bool.java",
      "tests/patterns/java/metavar_typed_bool.sgrep",
      "tests/patterns/java/metavar_typed_classfield.java",
      "tests/patterns/java/metavar_typed_classfield.sgrep",
      "tests/patterns/java/metavar_typed_dot_method.java",
      "tests/patterns/java/metavar_typed_dot_method.sgrep",
      "tests/patterns/java/metavar_typed_field.java",
      "tests/patterns/java/metavar_typed_field.sgrep",
      "tests/patterns/java/metavar_typed_fieldaccess.java.TODO",
      "tests/patterns/java/metavar_typed_fieldaccess.sgrep.TODO",
      "tests/patterns/java/metavar_typed_function.java",
      "tests/patterns/java/metavar_typed_function.sgrep",
      "tests/patterns/java/metavar_typed_if_statement.java",
      "tests/patterns/java/metavar_typed_if_statement.sgrep",
      "tests/patterns/java/metavar_typed_int.java",
      "tests/patterns/java/metavar_typed_int.sgrep",
      "tests/patterns/java/metavar_typed_lefthand.java",
      "tests/patterns/java/metavar_typed_lefthand.sgrep",
      "tests/patterns/java/metavar_typed_localvar.java",
      "tests/patterns/java/metavar_typed_localvar.sgrep",
      "tests/patterns/java/metavar_typed_methodcall.java",
      "tests/patterns/java/metavar_typed_methodcall.sgrep",
      "tests/patterns/java/metavar_typed_new.java",
      "tests/patterns/java/metavar_typed_new.sgrep",
      "tests/patterns/java/metavar_typed_qualified.java",
      "tests/patterns/java/metavar_typed_qualified.sgrep",
      "tests/patterns/java/metavar_typed_with_metavar.java",
      "tests/patterns/java/metavar_typed_with_metavar.sgrep",
      "tests/patterns/java/misc_accent_record.java",
      "tests/patterns/java/misc_accent_record.sgrep",
      "tests/patterns/java/misc_annot.java",
      "tests/patterns/java/misc_annot.sgrep",
      "tests/patterns/java/misc_assert.java",
      "tests/patterns/java/misc_assert.sgrep",
      "tests/patterns/java/misc_at_interface.java",
      "tests/patterns/java/misc_at_interface.sgrep",
      "tests/patterns/java/misc_at_interface2.java",
      "tests/patterns/java/misc_at_interface2.sgrep",
      "tests/patterns/java/misc_brace_semi.java",
      "tests/patterns/java/misc_brace_semi.sgrep",
      "tests/patterns/java/misc_class_literal.java",
      "tests/patterns/java/misc_class_literal.sgrep",
      "tests/patterns/java/misc_constructor.java",
      "tests/patterns/java/misc_constructor.sgrep",
      "tests/patterns/java/misc_constructor_public.java",
      "tests/patterns/java/misc_constructor_public.sgrep",
      "tests/patterns/java/misc_def_to_assign.java",
      "tests/patterns/java/misc_def_to_assign.sgrep",
      "tests/patterns/java/misc_generic.java",
      "tests/patterns/java/misc_generic.sgrep",
      "tests/patterns/java/misc_import_resolve.java",
      "tests/patterns/java/misc_import_resolve.sgrep",
      "tests/patterns/java/misc_import_resolve_unqualified.java",
      "tests/patterns/java/misc_import_resolve_unqualified.sgrep",
      "tests/patterns/java/misc_import_static.java",
      "tests/patterns/java/misc_import_static.sgrep",
      "tests/patterns/java/misc_instance_call.java",
      "tests/patterns/java/misc_instance_call.sgrep",
      "tests/patterns/java/misc_precedence.java",
      "tests/patterns/java/misc_precedence.sgrep",
      "tests/patterns/java/misc_record_pattern.java",
      "tests/patterns/java/misc_record_pattern.sgrep",
      "tests/patterns/java/misc_static_block.java",
      "tests/patterns/java/misc_static_block.sgrep",
      "tests/patterns/java/misc_super_call.java",
      "tests/patterns/java/misc_super_call.sgrep",
      "tests/patterns/java/misc_switch_e.java",
      "tests/patterns/java/misc_switch_e.sgrep",
      "tests/patterns/java/misc_token_cast.java",
      "tests/patterns/java/misc_token_cast.sgrep",
      "tests/patterns/java/misc_varargs.java",
      "tests/patterns/java/misc_varargs.sgrep",
      "tests/patterns/java/partial_class.java",
      "tests/patterns/java/partial_class_attr.java",
      "tests/patterns/java/partial_class_attr.sgrep",
      "tests/patterns/java/partial_finally.java",
      "tests/patterns/java/partial_method.java",
      "tests/patterns/java/partial_method.sgrep",
      "tests/patterns/java/partial_try.java",
      "tests/patterns/java/perf_fields.java",
      "tests/patterns/java/perf_fields.sgrep",
      "tests/patterns/java/regexp_case_insensitive.java",
      "tests/patterns/java/regexp_pcre.java",
      "tests/patterns/java/regexp_string.java",
      "tests/patterns/java/statement_list.java",
      "tests/patterns/java/statement_list.sgrep",
      "tests/patterns/java/stmts_to_fields.java",
      "tests/patterns/java/stmts_to_fields.sgrep",
      "tests/patterns/java/try_mutli_resources.java",
      "tests/patterns/java/try_mutli_resources.sgrep",
      "tests/patterns/java/try_resources.java",
      "tests/patterns/java/try_resources.sgrep",
      "tests/patterns/java/typed_metavar_class.java",
      "tests/patterns/java/typed_metavar_class.sgrep",
      "tests/patterns/java/typed_metavar_foreach.java",
      "tests/patterns/java/typed_metavar_foreach.sgrep",
      "tests/patterns/java/typed_metavar_ternary.java",
      "tests/patterns/java/typed_metavar_ternary.sgrep",
      "tests/patterns/java/typed_metavar_var.java",
      "tests/patterns/java/typed_metavar_var.sgrep",
      "tests/patterns/java/unordered_implement.java",
      "tests/patterns/java/unordered_implement.sgrep",
      "tests/patterns/java/visit_attribute.java",
      "tests/patterns/java/visit_attribute.sgrep",
      "tests/patterns/js/ac_matching_bitor.js",
      "tests/patterns/js/ac_matching_bitor.sgrep",
      "tests/patterns/js/aliasing.TODO",
      "tests/patterns/js/aliasing_require.js",
      "tests/patterns/js/aliasing_require.sgrep",
      "tests/patterns/js/caching_deep.js",
      "tests/patterns/js/caching_deep.sgrep",
      "tests/patterns/js/caching_deep_metavar.js",
      "tests/patterns/js/caching_deep_metavar.sgrep",
      "tests/patterns/js/caching_different_depth.js",
      "tests/patterns/js/caching_different_depth.sgrep",
      "tests/patterns/js/caching_flat.js",
      "tests/patterns/js/caching_flat.sgrep",
      "tests/patterns/js/caching_nested.js",
      "tests/patterns/js/caching_nested.sgrep",
      "tests/patterns/js/concrete_syntax.js",
      "tests/patterns/js/cp_array_destructure.js",
      "tests/patterns/js/cp_array_destructure.sgrep",
      "tests/patterns/js/cp_conditional.js",
      "tests/patterns/js/cp_conditional.sgrep",
      "tests/patterns/js/cp_dataflow.js",
      "tests/patterns/js/cp_dataflow.sgrep",
      "tests/patterns/js/cp_implicit_conversion.js",
      "tests/patterns/js/cp_implicit_conversion.sgrep",
      "tests/patterns/js/cp_incrdecr.js",
      "tests/patterns/js/cp_incrdecr.sgrep",
      "tests/patterns/js/cp_label.js",
      "tests/patterns/js/cp_label.sgrep",
      "tests/patterns/js/cp_throw.js",
      "tests/patterns/js/cp_throw.sgrep",
      "tests/patterns/js/cp_undeclared.js",
      "tests/patterns/js/cp_undeclared.sgrep",
      "tests/patterns/js/cp_undeclared1.js",
      "tests/patterns/js/cp_undeclared1.sgrep",
      "tests/patterns/js/deep_cond.js",
      "tests/patterns/js/deep_cond.sgrep",
      "tests/patterns/js/deep_deep_stmt1.js",
      "tests/patterns/js/deep_deep_stmt1.sgrep",
      "tests/patterns/js/deep_deep_stmt2.js",
      "tests/patterns/js/deep_deep_stmt2.sgrep",
      "tests/patterns/js/deep_deep_stmt3.js",
      "tests/patterns/js/deep_deep_stmt3.sgrep",
      "tests/patterns/js/deep_expr_and_ellipsis.js",
      "tests/patterns/js/deep_expr_and_ellipsis.sgrep",
      "tests/patterns/js/deep_expr_operator.js",
      "tests/patterns/js/deep_expr_vs_statement.js",
      "tests/patterns/js/deep_expr_vs_statement.sgrep",
      "tests/patterns/js/deep_expr_xml.js",
      "tests/patterns/js/deep_expr_xml.sgrep",
      "tests/patterns/js/deep_exprstmt.js",
      "tests/patterns/js/deep_jsx.js",
      "tests/patterns/js/deep_jsx.sgrep",
      "tests/patterns/js/deep_stmt.js",
      "tests/patterns/js/deep_stmt.sgrep",
      "tests/patterns/js/deep_stmt2.js",
      "tests/patterns/js/deep_stmt2.sgrep",
      "tests/patterns/js/deep_stmt3.js",
      "tests/patterns/js/deep_stmt3.sgrep",
      "tests/patterns/js/deep_vardef.js",
      "tests/patterns/js/deep_vardef.sgrep",
      "tests/patterns/js/dots_args.js",
      "tests/patterns/js/dots_container.js",
      "tests/patterns/js/dots_container.sgrep",
      "tests/patterns/js/dots_container2.js",
      "tests/patterns/js/dots_container2.sgrep",
      "tests/patterns/js/dots_expr.js",
      "tests/patterns/js/dots_field_chaining.js",
      "tests/patterns/js/dots_field_chaining.sgrep",
      "tests/patterns/js/dots_for.js",
      "tests/patterns/js/dots_importfrom.js",
      "tests/patterns/js/dots_importfrom.sgrep",
      "tests/patterns/js/dots_jsx_attr.js",
      "tests/patterns/js/dots_jsx_attr.sgrep",
      "tests/patterns/js/dots_jsx_attr_list.js",
      "tests/patterns/js/dots_jsx_attr_list.sgrep",
      "tests/patterns/js/dots_jsx_body.js",
      "tests/patterns/js/dots_jsx_body.sgrep",
      "tests/patterns/js/dots_jsx_body2.js",
      "tests/patterns/js/dots_jsx_body2.sgrep",
      "tests/patterns/js/dots_method_chaining.js",
      "tests/patterns/js/dots_nested_stmts.js",
      "tests/patterns/js/dots_object.js",
      "tests/patterns/js/dots_object.sgrep",
      "tests/patterns/js/dots_object2.js",
      "tests/patterns/js/dots_object2.sgrep",
      "tests/patterns/js/dots_params.js",
      "tests/patterns/js/dots_params.sgrep",
      "tests/patterns/js/dots_pattern_record.js",
      "tests/patterns/js/dots_pattern_record.sgrep",
      "tests/patterns/js/dots_regexp.js",
      "tests/patterns/js/dots_regexp.sgrep",
      "tests/patterns/js/dots_stmts.js",
      "tests/patterns/js/dots_string.js",
      "tests/patterns/js/dots_string_no_interpolation.js",
      "tests/patterns/js/dots_string_no_interpolation.sgrep",
      "tests/patterns/js/dots_template_literals.js",
      "tests/patterns/js/dots_template_literals.sgrep",
      "tests/patterns/js/ellipsis_metavar_tagged_template.js",
      "tests/patterns/js/ellipsis_metavar_tagged_template.sgrep",
      "tests/patterns/js/ellipsis_metavar_template.js",
      "tests/patterns/js/ellipsis_metavar_template.sgrep",
      "tests/patterns/js/equivalence_aliasing_import.js",
      "tests/patterns/js/equivalence_aliasing_import.sgrep",
      "tests/patterns/js/equivalence_constant_propagation.js",
      "tests/patterns/js/equivalence_constant_propagation2.js",
      "tests/patterns/js/equivalence_constant_propagation2.sgrep",
      "tests/patterns/js/equivalence_constant_propagation3.js",
      "tests/patterns/js/equivalence_constant_propagation3.sgrep",
      "tests/patterns/js/equivalence_import_require.js",
      "tests/patterns/js/equivalence_import_require.sgrep",
      "tests/patterns/js/equivalence_import_variations.js",
      "tests/patterns/js/equivalence_import_variations.sgrep",
      "tests/patterns/js/equivalence_import_variations2.js",
      "tests/patterns/js/equivalence_import_variations2.sgrep",
      "tests/patterns/js/equivalence_import_variations3.js",
      "tests/patterns/js/equivalence_import_variations3.sgrep",
      "tests/patterns/js/equivalence_import_variations4.js",
      "tests/patterns/js/equivalence_import_variations4.sgrep",
      "tests/patterns/js/equivalence_keyword_args.js",
      "tests/patterns/js/equivalence_keyword_args.sgrep",
      "tests/patterns/js/equivalence_naming_import.TODO",
      "tests/patterns/js/equivalence_varlet.js",
      "tests/patterns/js/equivalence_varlet.sgrep",
      "tests/patterns/js/eval_call.js",
      "tests/patterns/js/eval_call.sgrep",
      "tests/patterns/js/infer_const.js",
      "tests/patterns/js/infer_const.sgrep",
      "tests/patterns/js/infer_const_1.js",
      "tests/patterns/js/infer_const_1.sgrep",
      "tests/patterns/js/infer_const_regexp.js",
      "tests/patterns/js/infer_const_regexp.sgrep",
      "tests/patterns/js/less_class_complex.js",
      "tests/patterns/js/less_class_complex.sgrep",
      "tests/patterns/js/less_class_complex_2.js",
      "tests/patterns/js/less_class_complex_2.sgrep",
      "tests/patterns/js/less_inheritance.js",
      "tests/patterns/js/less_inheritance.sgrep",
      "tests/patterns/js/less_xml_attr.js",
      "tests/patterns/js/less_xml_attr.sgrep",
      "tests/patterns/js/less_xml_body.js",
      "tests/patterns/js/less_xml_body.sgrep",
      "tests/patterns/js/metavar_anno.js",
      "tests/patterns/js/metavar_arg.js",
      "tests/patterns/js/metavar_call.js",
      "tests/patterns/js/metavar_class_def.js",
      "tests/patterns/js/metavar_class_fields.js",
      "tests/patterns/js/metavar_class_fields.sgrep",
      "tests/patterns/js/metavar_cond.js",
      "tests/patterns/js/metavar_ellipsis_args.js",
      "tests/patterns/js/metavar_equality_expr.js",
      "tests/patterns/js/metavar_equality_stmt.js",
      "tests/patterns/js/metavar_equality_var.js",
      "tests/patterns/js/metavar_equality_vardef_vs_use.js",
      "tests/patterns/js/metavar_equality_vardef_vs_use.sgrep",
      "tests/patterns/js/metavar_func_def.js",
      "tests/patterns/js/metavar_import.js",
      "tests/patterns/js/metavar_import.sgrep",
      "tests/patterns/js/metavar_import2.js",
      "tests/patterns/js/metavar_import2.sgrep",
      "tests/patterns/js/metavar_import3.js",
      "tests/patterns/js/metavar_import3.sgrep",
      "tests/patterns/js/metavar_importfrom.js",
      "tests/patterns/js/metavar_importfrom.sgrep",
      "tests/patterns/js/metavar_importfrom2.js",
      "tests/patterns/js/metavar_importfrom2.sgrep",
      "tests/patterns/js/metavar_jsx_attr.js",
      "tests/patterns/js/metavar_jsx_attr.sgrep",
      "tests/patterns/js/metavar_jsx_tag.js",
      "tests/patterns/js/metavar_jsx_tag.sgrep",
      "tests/patterns/js/metavar_jsx_val.js",
      "tests/patterns/js/metavar_jsx_val.sgrep",
      "tests/patterns/js/metavar_key_value.js",
      "tests/patterns/js/metavar_regexp.js",
      "tests/patterns/js/metavar_regexp.sgrep",
      "tests/patterns/js/metavar_stmt.js",
      "tests/patterns/js/metavar_stmt_or_expr.js",
      "tests/patterns/js/metavar_stmt_or_expr.sgrep",
      "tests/patterns/js/metavar_template.js",
      "tests/patterns/js/metavar_template.sgrep",
      "tests/patterns/js/metavar_typed_bool.js",
      "tests/patterns/js/metavar_typed_bool.sgrep",
      "tests/patterns/js/metavar_typed_literal.js",
      "tests/patterns/js/metavar_typed_literal.sgrep",
      "tests/patterns/js/metavar_xml_attr.js",
      "tests/patterns/js/metavar_xml_attr.sgrep",
      "tests/patterns/js/misc_arrow.js",
      "tests/patterns/js/misc_arrow.sgrep",
      "tests/patterns/js/misc_arrow2.js",
      "tests/patterns/js/misc_arrow2.sgrep",
      "tests/patterns/js/misc_asi_pattern.js",
      "tests/patterns/js/misc_asi_pattern.sgrep",
      "tests/patterns/js/misc_catch_unbound.js",
      "tests/patterns/js/misc_catch_unbound.sgrep",
      "tests/patterns/js/misc_decorators_method.js",
      "tests/patterns/js/misc_decorators_method.sgrep",
      "tests/patterns/js/misc_deep_expr_stmt.js",
      "tests/patterns/js/misc_deep_expr_stmt.sgrep",
      "tests/patterns/js/misc_destructuring.js",
      "tests/patterns/js/misc_destructuring.sgrep",
      "tests/patterns/js/misc_destructuring3.js",
      "tests/patterns/js/misc_destructuring3.sgrep",
      "tests/patterns/js/misc_destructuring_2.js",
      "tests/patterns/js/misc_destructuring_2.sgrep",
      "tests/patterns/js/misc_else_blocks_brace.js",
      "tests/patterns/js/misc_else_blocks_no_brace.js",
      "tests/patterns/js/misc_empty_body.js",
      "tests/patterns/js/misc_empty_body.sgrep",
      "tests/patterns/js/misc_export.js",
      "tests/patterns/js/misc_export.sgrep",
      "tests/patterns/js/misc_expr_vs_vardef.js",
      "tests/patterns/js/misc_expr_vs_vardef.sgrep",
      "tests/patterns/js/misc_faketok.js",
      "tests/patterns/js/misc_faketok.sgrep",
      "tests/patterns/js/misc_field_vs_vardef.js",
      "tests/patterns/js/misc_field_vs_vardef.sgrep",
      "tests/patterns/js/misc_foreach.js",
      "tests/patterns/js/misc_foreach.sgrep",
      "tests/patterns/js/misc_foreach1.js",
      "tests/patterns/js/misc_foreach1.sgrep",
      "tests/patterns/js/misc_if_blocks_brace.js",
      "tests/patterns/js/misc_if_blocks_no_brace.js",
      "tests/patterns/js/misc_jsx.js",
      "tests/patterns/js/misc_jsx.sgrep",
      "tests/patterns/js/misc_jsx_and_obj.js",
      "tests/patterns/js/misc_jsx_and_obj.sgrep",
      "tests/patterns/js/misc_lambda.js",
      "tests/patterns/js/misc_lambda.sgrep",
      "tests/patterns/js/misc_metavar_with_digit.js",
      "tests/patterns/js/misc_metavar_with_digit.sgrep",
      "tests/patterns/js/misc_method_brace_newline.js",
      "tests/patterns/js/misc_method_brace_newline.sgrep",
      "tests/patterns/js/misc_method_chain_vs_stmt.js",
      "tests/patterns/js/misc_method_chain_vs_stmt.sgrep",
      "tests/patterns/js/misc_nested_field.js",
      "tests/patterns/js/misc_nested_field.sgrep",
      "tests/patterns/js/misc_new.js",
      "tests/patterns/js/misc_new.sgrep",
      "tests/patterns/js/misc_notoken.js",
      "tests/patterns/js/misc_notoken.sgrep",
      "tests/patterns/js/misc_null_cast.js",
      "tests/patterns/js/misc_null_cast.sgrep",
      "tests/patterns/js/misc_object_directly.js",
      "tests/patterns/js/misc_object_directly.sgrep",
      "tests/patterns/js/misc_regexp_modifier.js",
      "tests/patterns/js/misc_regexp_modifier.sgrep",
      "tests/patterns/js/misc_semicolon.js",
      "tests/patterns/js/misc_semicolon.sgrep",
      "tests/patterns/js/misc_string.js",
      "tests/patterns/js/misc_string.sgrep",
      "tests/patterns/js/misc_tagged_template_literal.js",
      "tests/patterns/js/misc_tagged_template_literal.sgrep",
      "tests/patterns/js/misc_this.js",
      "tests/patterns/js/misc_this.sgrep",
      "tests/patterns/js/misc_unicode.js",
      "tests/patterns/js/misc_unicode.sgrep",
      "tests/patterns/js/misc_yield_undefined.js",
      "tests/patterns/js/misc_yield_undefined.sgrep",
      "tests/patterns/js/object_duplicate_key.js",
      "tests/patterns/js/object_duplicate_key.sgrep",
      "tests/patterns/js/object_numeric_key.js",
      "tests/patterns/js/object_numeric_key.sgrep",
      "tests/patterns/js/partial_catch.js",
      "tests/patterns/js/partial_catch.sgrep",
      "tests/patterns/js/partial_class.js",
      "tests/patterns/js/partial_decorators_arg_method.js",
      "tests/patterns/js/partial_decorators_arg_method.sgrep",
      "tests/patterns/js/partial_decorators_method.js",
      "tests/patterns/js/partial_decorators_method.sgrep",
      "tests/patterns/js/partial_finally.js",
      "tests/patterns/js/partial_function.js",
      "tests/patterns/js/partial_function.sgrep",
      "tests/patterns/js/partial_if.js",
      "tests/patterns/js/partial_lambda_or_func.js",
      "tests/patterns/js/partial_lambda_or_func.sgrep",
      "tests/patterns/js/partial_single_field.js",
      "tests/patterns/js/partial_single_field.sgrep",
      "tests/patterns/js/partial_try.js",
      "tests/patterns/js/regexp.js",
      "tests/patterns/js/regexp.sgrep",
      "tests/patterns/js/regexp_fieldname.js",
      "tests/patterns/js/regexp_fieldname.sgrep",
      "tests/patterns/js/regexp_string.js",
      "tests/patterns/js/semgrep/jsx.sgrep",
      "tests/patterns/js/semgrep/metavar_jsx.sgrep",
      "tests/patterns/js/switch_case_pattern.js",
      "tests/patterns/js/switch_case_pattern.sgrep",
      "tests/patterns/js/template_string_w_metavar.js",
      "tests/patterns/js/template_string_w_metavar.sgrep",
      "tests/patterns/js/typed_metavar_assign.js",
      "tests/patterns/js/typed_metavar_assign.sgrep",
      "tests/patterns/js/unordered_destructuring.js",
      "tests/patterns/js/unordered_destructuring.sgrep",
      "tests/patterns/js/unordered_fields.js",
      "tests/patterns/js/unordered_fields.sgrep",
      "tests/patterns/js/unordered_fields2.js",
      "tests/patterns/js/unordered_fields2.sgrep",
      "tests/patterns/js/unordered_metavar.js",
      "tests/patterns/js/unordered_metavar.sgrep",
      "tests/patterns/js/unordered_xml_attr.js",
      "tests/patterns/js/unordered_xml_attr.sgrep",
      "tests/patterns/json/deep_expr_operator.json",
      "tests/patterns/json/deep_expr_operator.sgrep",
      "tests/patterns/json/dots_dict.json",
      "tests/patterns/json/dots_dict.sgrep",
      "tests/patterns/json/metavar_array.json",
      "tests/patterns/json/metavar_array.sgrep",
      "tests/patterns/json/metavar_field.json",
      "tests/patterns/json/metavar_field.sgrep",
      "tests/patterns/json/partial_single_field.json",
      "tests/patterns/json/partial_single_field.sgrep",
      "tests/patterns/json/partial_single_field2.json",
      "tests/patterns/json/partial_single_field2.sgrep",
      "tests/patterns/json/partial_single_field_metavar.json",
      "tests/patterns/json/partial_single_field_metavar.sgrep",
      "tests/patterns/jsonnet/concrete_syntax.jsonnet",
      "tests/patterns/jsonnet/deep_expr_operator.jsonnet",
      "tests/patterns/jsonnet/deep_expr_operator.sgrep",
      "tests/patterns/jsonnet/dots_args.jsonnet",
      "tests/patterns/jsonnet/dots_string.jsonnet",
      "tests/patterns/jsonnet/metavar_arg.jsonnet",
      "tests/patterns/jsonnet/metavar_call.jsonnet",
      "tests/patterns/jsonnet/metavar_equality_var.jsonnet",
      "tests/patterns/jsonnet/metavar_equality_var.sgrep",
      "tests/patterns/julia/concrete_syntax.jl",
      "tests/patterns/julia/deep_expr_operator.jl",
      "tests/patterns/julia/deep_exprstmt.jl",
      "tests/patterns/julia/do_block_metavar.jl",
      "tests/patterns/julia/do_block_metavar.sgrep",
      "tests/patterns/julia/dots_args.jl",
      "tests/patterns/julia/dots_nested_stmts.jl",
      "tests/patterns/julia/dots_nested_stmts.sgrep",
      "tests/patterns/julia/dots_stmts.jl",
      "tests/patterns/julia/dots_string.jl",
      "tests/patterns/julia/ellipsis_catch.jl",
      "tests/patterns/julia/ellipsis_catch.sgrep",
      "tests/patterns/julia/empty_catch.jl",
      "tests/patterns/julia/empty_catch.sgrep",
      "tests/patterns/julia/implicit_return.jl",
      "tests/patterns/julia/implicit_return.sgrep",
      "tests/patterns/julia/implicit_return_inside_funcbody_expr.jl",
      "tests/patterns/julia/implicit_return_inside_funcbody_expr.sgrep",
      "tests/patterns/julia/implicit_return_inside_funcdef.jl",
      "tests/patterns/julia/implicit_return_inside_funcdef.sgrep",
      "tests/patterns/julia/implicit_return_inside_lambda.jl",
      "tests/patterns/julia/implicit_return_inside_lambda.sgrep",
      "tests/patterns/julia/import_alias.jl",
      "tests/patterns/julia/import_alias.sgrep",
      "tests/patterns/julia/import_import.jl",
      "tests/patterns/julia/import_import.sgrep",
      "tests/patterns/julia/import_metavar.jl",
      "tests/patterns/julia/import_metavar.sgrep",
      "tests/patterns/julia/let_ellipsis.jl",
      "tests/patterns/julia/let_ellipsis.sgrep",
      "tests/patterns/julia/metavar_arg.jl",
      "tests/patterns/julia/metavar_call.jl",
      "tests/patterns/julia/metavar_equality_var.jl",
      "tests/patterns/julia/op_plus.jl",
      "tests/patterns/julia/op_plus.sgrep",
      "tests/patterns/julia/single_statement_block.jl",
      "tests/patterns/julia/single_statement_block.sgrep",
      "tests/patterns/julia/using_alias.jl",
      "tests/patterns/julia/using_alias.sgrep",
      "tests/patterns/julia/using_import.jl",
      "tests/patterns/julia/using_import.sgrep",
      "tests/patterns/kotlin/concrete_syntax.kt",
      "tests/patterns/kotlin/deep_expr_operator.kt",
      "tests/patterns/kotlin/deep_exprstmt.kt",
      "tests/patterns/kotlin/deep_exprstmt.sgrep",
      "tests/patterns/kotlin/dots_args.kt",
      "tests/patterns/kotlin/dots_class_params.kt",
      "tests/patterns/kotlin/dots_class_params.sgrep",
      "tests/patterns/kotlin/dots_fields.kt",
      "tests/patterns/kotlin/dots_fields.sgrep",
      "tests/patterns/kotlin/dots_method_chaining.kt",
      "tests/patterns/kotlin/dots_nested_stmts.kt",
      "tests/patterns/kotlin/dots_params.kt",
      "tests/patterns/kotlin/dots_params.sgrep",
      "tests/patterns/kotlin/dots_stmts.TODO",
      "tests/patterns/kotlin/dots_stmts.sgrep",
      "tests/patterns/kotlin/dots_string.kt",
      "tests/patterns/kotlin/in_class_const_prop.kt",
      "tests/patterns/kotlin/in_class_const_prop.sgrep",
      "tests/patterns/kotlin/in_class_typing.kt",
      "tests/patterns/kotlin/in_class_typing.sgrep",
      "tests/patterns/kotlin/interpolated_ident.kt",
      "tests/patterns/kotlin/interpolated_ident.sgrep",
      "tests/patterns/kotlin/metavar_arg.kt",
      "tests/patterns/kotlin/metavar_call.kt",
      "tests/patterns/kotlin/metavar_class_def.kt",
      "tests/patterns/kotlin/metavar_cond.kt",
      "tests/patterns/kotlin/metavar_cond.sgrep",
      "tests/patterns/kotlin/metavar_equality_expr.kt",
      "tests/patterns/kotlin/metavar_equality_stmt.kt",
      "tests/patterns/kotlin/metavar_equality_stmt.sgrep",
      "tests/patterns/kotlin/metavar_equality_var.TODO",
      "tests/patterns/kotlin/metavar_equality_var.sgrep",
      "tests/patterns/kotlin/metavar_func_def.kt",
      "tests/patterns/kotlin/metavar_func_def.sgrep",
      "tests/patterns/kotlin/metavar_import.kt",
      "tests/patterns/kotlin/metavar_import.sgrep",
      "tests/patterns/kotlin/metavar_stmt.kt",
      "tests/patterns/kotlin/metavar_stmt.sgrep",
      "tests/patterns/kotlin/metavar_typed.kt",
      "tests/patterns/kotlin/metavar_typed.sgrep",
      "tests/patterns/kotlin/misc_call_in_assign.kt",
      "tests/patterns/kotlin/misc_call_in_assign.sgrep",
      "tests/patterns/kotlin/misc_trailing_lambda1.kt",
      "tests/patterns/kotlin/misc_trailing_lambda1.sgrep",
      "tests/patterns/kotlin/misc_trailing_lambda2.kt",
      "tests/patterns/kotlin/misc_trailing_lambda2.sgrep",
      "tests/patterns/kotlin/not_string_metavar.kt",
      "tests/patterns/kotlin/not_string_metavar.sgrep",
      "tests/patterns/kotlin/single_interpolated_ident.kt",
      "tests/patterns/kotlin/single_interpolated_ident.sgrep",
      "tests/patterns/kotlin/string_metavar.kt",
      "tests/patterns/kotlin/string_metavar.sgrep",
      "tests/patterns/kotlin/unordered_extend.kt",
      "tests/patterns/kotlin/unordered_extend.sgrep",
      "tests/patterns/lua/assignment.lua",
      "tests/patterns/lua/assignment.sgrep",
      "tests/patterns/lua/comparison.lua",
      "tests/patterns/lua/comparison.sgrep",
      "tests/patterns/lua/concrete_syntax.lua",
      "tests/patterns/lua/deep_exprstmt.lua",
      "tests/patterns/lua/dots_args.lua",
      "tests/patterns/lua/dots_nested_stmts.lua",
      "tests/patterns/lua/dots_nested_stmts.sgrep",
      "tests/patterns/lua/dots_stmts.lua",
      "tests/patterns/lua/dots_stmts.sgrep",
      "tests/patterns/lua/dots_string.lua",
      "tests/patterns/lua/metavar_arg.lua",
      "tests/patterns/lua/metavar_call.lua",
      "tests/patterns/lua/metavar_equality_var.lua",
      "tests/patterns/ocaml/aliasing_qualified.ml",
      "tests/patterns/ocaml/aliasing_qualified.sgrep",
      "tests/patterns/ocaml/aliasing_qualified_contructor.ml",
      "tests/patterns/ocaml/aliasing_qualified_contructor.sgrep",
      "tests/patterns/ocaml/concrete_syntax.ml",
      "tests/patterns/ocaml/concrete_syntax.sgrep",
      "tests/patterns/ocaml/dots_args.ml",
      "tests/patterns/ocaml/dots_args.sgrep",
      "tests/patterns/ocaml/dots_let_body.ml",
      "tests/patterns/ocaml/dots_let_body.sgrep",
      "tests/patterns/ocaml/dots_match_cases.ml",
      "tests/patterns/ocaml/dots_match_cases.sgrep",
      "tests/patterns/ocaml/dots_nested_stmts.ml",
      "tests/patterns/ocaml/dots_nested_stmts.sgrep",
      "tests/patterns/ocaml/dots_params.ml",
      "tests/patterns/ocaml/dots_params.sgrep",
      "tests/patterns/ocaml/dots_string.ml",
      "tests/patterns/ocaml/dots_string.sgrep",
      "tests/patterns/ocaml/equivalence_number.ml",
      "tests/patterns/ocaml/equivalence_number.sgrep",
      "tests/patterns/ocaml/foo.ml",
      "tests/patterns/ocaml/foo.sgrep",
      "tests/patterns/ocaml/metavar_arg.ml",
      "tests/patterns/ocaml/metavar_arg.sgrep",
      "tests/patterns/ocaml/metavar_call.ml",
      "tests/patterns/ocaml/metavar_call.sgrep",
      "tests/patterns/ocaml/metavar_cond.ml",
      "tests/patterns/ocaml/metavar_cond.sgrep",
      "tests/patterns/ocaml/metavar_ellipsis_args.ml",
      "tests/patterns/ocaml/metavar_ellipsis_args.sgrep",
      "tests/patterns/ocaml/metavar_equality_expr.ml",
      "tests/patterns/ocaml/metavar_equality_expr.sgrep",
      "tests/patterns/ocaml/metavar_equality_stmt.ml",
      "tests/patterns/ocaml/metavar_equality_stmt.sgrep",
      "tests/patterns/ocaml/metavar_equality_var.ml",
      "tests/patterns/ocaml/metavar_equality_var.sgrep",
      "tests/patterns/ocaml/metavar_func_def.ml",
      "tests/patterns/ocaml/metavar_func_def.sgrep",
      "tests/patterns/ocaml/metavar_module.ml",
      "tests/patterns/ocaml/metavar_module.sgrep",
      "tests/patterns/ocaml/metavar_stmt.ml",
      "tests/patterns/ocaml/metavar_stmt.sgrep",
      "tests/patterns/ocaml/misc_ctor_one_arg.ml",
      "tests/patterns/ocaml/misc_ctor_one_arg.sgrep",
      "tests/patterns/ocaml/misc_functor.ml",
      "tests/patterns/ocaml/misc_functor.sgrep",
      "tests/patterns/ocaml/misc_let_and_attribute.ml",
      "tests/patterns/ocaml/misc_let_and_attribute.sgrep",
      "tests/patterns/ocaml/misc_match_case.ml",
      "tests/patterns/ocaml/misc_match_case.sgrep",
      "tests/patterns/ocaml/misc_notokenloc.ml",
      "tests/patterns/ocaml/misc_notokenloc.sgrep",
      "tests/patterns/ocaml/misc_try.ml",
      "tests/patterns/ocaml/misc_try.sgrep",
      "tests/patterns/ocaml/misc_useless_else.ml",
      "tests/patterns/ocaml/misc_useless_else.sgrep",
      "tests/patterns/ocaml/partial_if.ml",
      "tests/patterns/ocaml/partial_if.sgrep",
      "tests/patterns/ocaml/partial_let.ml",
      "tests/patterns/ocaml/partial_let.sgrep",
      "tests/patterns/ocaml/partial_match.ml",
      "tests/patterns/ocaml/partial_match.sgrep",
      "tests/patterns/ocaml/partial_try.ml",
      "tests/patterns/ocaml/partial_try.sgrep",
      "tests/patterns/ocaml/regexp.ml",
      "tests/patterns/ocaml/regexp.sgrep",
      "tests/patterns/ocaml/regexp_string.ml",
      "tests/patterns/ocaml/regexp_string.sgrep",
      "tests/patterns/php/assoc_concat.php",
      "tests/patterns/php/assoc_concat.sgrep",
      "tests/patterns/php/backed_enum.php",
      "tests/patterns/php/backed_enum.sgrep",
      "tests/patterns/php/case_insensitive_function_id.php",
      "tests/patterns/php/case_insensitive_function_id.sgrep",
      "tests/patterns/php/concrete_syntax.php",
      "tests/patterns/php/constant_propogation.php",
      "tests/patterns/php/constant_propogation.sgrep",
      "tests/patterns/php/cp_builtin.php",
      "tests/patterns/php/cp_builtin.sgrep",
      "tests/patterns/php/cp_global.php",
      "tests/patterns/php/cp_global.sgrep",
      "tests/patterns/php/cp_import.php",
      "tests/patterns/php/cp_import.sgrep",
      "tests/patterns/php/deep_expr_operator.php",
      "tests/patterns/php/deep_exprstmt.php",
      "tests/patterns/php/dots_args.php",
      "tests/patterns/php/dots_args_in_block.php",
      "tests/patterns/php/dots_args_in_block.sgrep",
      "tests/patterns/php/dots_args_isset.php",
      "tests/patterns/php/dots_args_isset.sgrep",
      "tests/patterns/php/dots_array.php",
      "tests/patterns/php/dots_array.sgrep",
      "tests/patterns/php/dots_backquote.php",
      "tests/patterns/php/dots_backquote.sgrep",
      "tests/patterns/php/dots_echo.php",
      "tests/patterns/php/dots_echo.sgrep",
      "tests/patterns/php/dots_eval.php",
      "tests/patterns/php/dots_eval.sgrep",
      "tests/patterns/php/dots_foreach.php",
      "tests/patterns/php/dots_foreach.sgrep",
      "tests/patterns/php/dots_func_in_class.php",
      "tests/patterns/php/dots_func_in_class.sgrep",
      "tests/patterns/php/dots_include.php",
      "tests/patterns/php/dots_include.sgrep",
      "tests/patterns/php/dots_include1.php",
      "tests/patterns/php/dots_include1.sgrep",
      "tests/patterns/php/dots_interpolated.php",
      "tests/patterns/php/dots_interpolated.sgrep",
      "tests/patterns/php/dots_method_chaining.php",
      "tests/patterns/php/dots_method_chaining.sgrep",
      "tests/patterns/php/dots_method_chaining_simple.php",
      "tests/patterns/php/dots_method_chaining_simple.sgrep",
      "tests/patterns/php/dots_nested_stmts.php",
      "tests/patterns/php/dots_nested_stmts.sgrep",
      "tests/patterns/php/dots_stmts.php",
      "tests/patterns/php/dots_string.php",
      "tests/patterns/php/equivalence_constant_propagation.php",
      "tests/patterns/php/foo.php",
      "tests/patterns/php/foo.sgrep",
      "tests/patterns/php/gh_5594.php",
      "tests/patterns/php/gh_5594.sgrep",
      "tests/patterns/php/gh_5880.php",
      "tests/patterns/php/gh_5880.sgrep",
      "tests/patterns/php/metavar_anno.php",
      "tests/patterns/php/metavar_anno.sgrep",
      "tests/patterns/php/metavar_arg.php",
      "tests/patterns/php/metavar_call.php",
      "tests/patterns/php/metavar_class.php",
      "tests/patterns/php/metavar_class.sgrep",
      "tests/patterns/php/metavar_class_def.php",
      "tests/patterns/php/metavar_class_def.sgrep",
      "tests/patterns/php/metavar_cond.php",
      "tests/patterns/php/metavar_ellipsis_args.php",
      "tests/patterns/php/metavar_equality_expr.php",
      "tests/patterns/php/metavar_equality_stmt.php",
      "tests/patterns/php/metavar_equality_var.php",
      "tests/patterns/php/metavar_func_def.php",
      "tests/patterns/php/metavar_func_def.sgrep",
      "tests/patterns/php/metavar_import.php",
      "tests/patterns/php/metavar_import.sgrep",
      "tests/patterns/php/metavar_method.php",
      "tests/patterns/php/metavar_method.sgrep",
      "tests/patterns/php/metavar_param.php",
      "tests/patterns/php/metavar_param.sgrep",
      "tests/patterns/php/metavar_param_default.php",
      "tests/patterns/php/metavar_param_default.sgrep",
      "tests/patterns/php/metavar_stmt.php",
      "tests/patterns/php/metavar_string.php",
      "tests/patterns/php/metavar_underscore.php",
      "tests/patterns/php/metavar_underscore.sgrep",
      "tests/patterns/php/misc_boolean_propagation.php",
      "tests/patterns/php/misc_boolean_propagation.sgrep",
      "tests/patterns/php/misc_dots.php",
      "tests/patterns/php/misc_dots.sgrep",
      "tests/patterns/php/misc_goto.php",
      "tests/patterns/php/misc_goto.sgrep",
      "tests/patterns/php/misc_param_default.php",
      "tests/patterns/php/misc_param_default.sgrep",
      "tests/patterns/php/misc_parameter_type_qualified.php",
      "tests/patterns/php/misc_parameter_type_qualified.sgrep",
      "tests/patterns/php/misc_parsing_keyword_as_id.php",
      "tests/patterns/php/misc_parsing_keyword_as_id.sgrep",
      "tests/patterns/php/misc_public_method.php",
      "tests/patterns/php/misc_public_method.sgrep",
      "tests/patterns/php/misc_stmt1_fbody.php",
      "tests/patterns/php/misc_stmt1_fbody.sgrep",
      "tests/patterns/php/misc_superglobals.php",
      "tests/patterns/php/misc_superglobals.sgrep",
      "tests/patterns/php/multiple_interfaces.php",
      "tests/patterns/php/multiple_interfaces.sgrep",
      "tests/patterns/php/named_arguments.php",
      "tests/patterns/php/named_arguments.sgrep",
      "tests/patterns/php/naming_origname_use_group.php",
      "tests/patterns/php/naming_origname_use_group.sgrep",
      "tests/patterns/php/naming_origname_use_single.php",
      "tests/patterns/php/naming_origname_use_single.sgrep",
      "tests/patterns/php/naming_rename_use_group.php",
      "tests/patterns/php/naming_rename_use_group.sgrep",
      "tests/patterns/php/naming_rename_use_single.php",
      "tests/patterns/php/naming_rename_use_single.sgrep",
      "tests/patterns/php/partial_if.php",
      "tests/patterns/php/regexp_string.php",
      "tests/patterns/php/sgrep/argref.php",
      "tests/patterns/php/sgrep/boolean_vs_int.php",
      "tests/patterns/php/sgrep/case_sensitive.php",
      "tests/patterns/php/sgrep/debug_rlog.php",
      "tests/patterns/php/sgrep/dots_in_brackets.php",
      "tests/patterns/php/sgrep/expr_pattern.php",
      "tests/patterns/php/sgrep/fbt.php",
      "tests/patterns/php/sgrep/foo.php",
      "tests/patterns/php/sgrep/foo_expr.sgrep",
      "tests/patterns/php/sgrep/foreach.php",
      "tests/patterns/php/sgrep/foreach.sgrep",
      "tests/patterns/php/sgrep/foreach.spatch",
      "tests/patterns/php/sgrep/foreach2.spatch",
      "tests/patterns/php/sgrep/if.php",
      "tests/patterns/php/sgrep/keywords_arguments.php",
      "tests/patterns/php/sgrep/many_args.php",
      "tests/patterns/php/sgrep/many_args.sgrep",
      "tests/patterns/php/sgrep/multi.sgrep",
      "tests/patterns/php/sgrep/namespace.php",
      "tests/patterns/php/sgrep/namespace2.php",
      "tests/patterns/php/sgrep/new_var.php",
      "tests/patterns/php/sgrep/regexp.php",
      "tests/patterns/php/sgrep/regexp.sgrep",
      "tests/patterns/php/sgrep/return_this.php",
      "tests/patterns/php/sgrep/statement_pattern.php",
      "tests/patterns/php/sgrep/static_initializers.php",
      "tests/patterns/php/sgrep/string_args.php",
      "tests/patterns/php/sgrep/trailing_comma.php",
      "tests/patterns/php/sgrep/xhp.php",
      "tests/patterns/php/sgrep/xhp_metavar.php",
      "tests/patterns/php/sgrep/xhp_metavar2.php",
      "tests/patterns/php/sgrep/xhp_metavar_attr.php",
      "tests/patterns/php/spatch/add_statement.exp",
      "tests/patterns/php/spatch/add_statement.php",
      "tests/patterns/php/spatch/add_statement.spatch",
      "tests/patterns/php/spatch/array_to_int_array.php",
      "tests/patterns/php/spatch/bar.exp",
      "tests/patterns/php/spatch/bar.php",
      "tests/patterns/php/spatch/bar.spatch",
      "tests/patterns/php/spatch/bar2.exp",
      "tests/patterns/php/spatch/bar2.php",
      "tests/patterns/php/spatch/distr_plus.exp",
      "tests/patterns/php/spatch/distr_plus.php",
      "tests/patterns/php/spatch/distr_plus.spatch",
      "tests/patterns/php/spatch/error/transfo_on_comma_varargs.php",
      "tests/patterns/php/spatch/error/transfo_on_comma_varargs.spatch",
      "tests/patterns/php/spatch/error/transfo_on_comma_varargs_ok.spatch",
      "tests/patterns/php/spatch/errors/missing_paren.php",
      "tests/patterns/php/spatch/errors/missing_paren.spatch",
      "tests/patterns/php/spatch/errors/transfo_not_at_start.php",
      "tests/patterns/php/spatch/errors/transfo_not_at_start.spatch",
      "tests/patterns/php/spatch/foo.exp",
      "tests/patterns/php/spatch/foo.php",
      "tests/patterns/php/spatch/foo.spatch",
      "tests/patterns/php/spatch/generics.php",
      "tests/patterns/php/spatch/generics.spatch",
      "tests/patterns/php/spatch/lvalue.exp",
      "tests/patterns/php/spatch/lvalue.php",
      "tests/patterns/php/spatch/lvalue.spatch",
      "tests/patterns/php/spatch/new.exp",
      "tests/patterns/php/spatch/new.php",
      "tests/patterns/php/spatch/new.spatch",
      "tests/patterns/php/spatch/pb_space_instanceof.exp",
      "tests/patterns/php/spatch/pb_space_instanceof.php",
      "tests/patterns/php/spatch/pb_space_instanceof.spatch",
      "tests/patterns/php/spatch/pb_space_new.exp",
      "tests/patterns/php/spatch/pb_space_new.php",
      "tests/patterns/php/spatch/pb_space_new.spatch",
      "tests/patterns/php/spatch/regexp.exp",
      "tests/patterns/php/spatch/regexp.php",
      "tests/patterns/php/spatch/regexp.spatch",
      "tests/patterns/php/spatch/remove_space_between.exp",
      "tests/patterns/php/spatch/remove_space_between.php",
      "tests/patterns/php/spatch/remove_space_between.spatch",
      "tests/patterns/php/spatch/remove_trailing_comma.exp",
      "tests/patterns/php/spatch/remove_trailing_comma.php",
      "tests/patterns/php/spatch/remove_trailing_comma.spatch",
      "tests/patterns/php/spatch/remove_trailing_comment.exp",
      "tests/patterns/php/spatch/remove_trailing_comment.php",
      "tests/patterns/php/spatch/remove_trailing_comment.spatch",
      "tests/patterns/php/spatch/remove_whole_line.exp",
      "tests/patterns/php/spatch/remove_whole_line.php",
      "tests/patterns/php/spatch/remove_whole_line.spatch",
      "tests/patterns/php/spatch/space.spatch",
      "tests/patterns/php/spatch/static_scalar.exp",
      "tests/patterns/php/spatch/static_scalar.php",
      "tests/patterns/php/spatch/static_scalar.spatch",
      "tests/patterns/php/spatch/stmts_fuzzy.php",
      "tests/patterns/php/spatch/stmts_fuzzy.spatch",
      "tests/patterns/php/spatch/todo/1.php",
      "tests/patterns/php/spatch/todo/add_statement_indented.php",
      "tests/patterns/php/spatch/todo/arg_assert.php",
      "tests/patterns/php/spatch/todo/arg_assert2.php",
      "tests/patterns/php/spatch/todo/border1.php",
      "tests/patterns/php/spatch/todo/fbt.php",
      "tests/patterns/php/spatch/todo/fbt_locale.php",
      "tests/patterns/php/spatch/todo/fbt_optional_last_arg.php",
      "tests/patterns/php/spatch/todo/fbts.php",
      "tests/patterns/php/spatch/todo/fbts_locale.php",
      "tests/patterns/php/spatch/todo/funcall_multiline.php",
      "tests/patterns/php/spatch/todo/metavar.php",
      "tests/patterns/php/spatch/todo/metavar.spatch",
      "tests/patterns/php/spatch/todo/multiline.php",
      "tests/patterns/php/spatch/todo/multiline.spatch",
      "tests/patterns/php/spatch/todo/multiline2.spatch",
      "tests/patterns/php/spatch/todo/pb_indent.php",
      "tests/patterns/php/spatch/todo/pb_indent.spatch",
      "tests/patterns/php/spatch/todo/pb_space_or.php",
      "tests/patterns/php/spatch/todo/pb_space_or.spatch",
      "tests/patterns/php/spatch/todo/reindent_expr.php",
      "tests/patterns/php/spatch/todo/reindent_expr.spatch",
      "tests/patterns/php/spatch/todo/reindent_expr2.php",
      "tests/patterns/php/spatch/todo/remove_second_arg.php",
      "tests/patterns/php/spatch/todo/remove_second_arg.spatch",
      "tests/patterns/php/spatch/todo/remove_second_arg2.spatch",
      "tests/patterns/php/spatch/todo/stmts.php",
      "tests/patterns/php/spatch/todo/stmts.spatch",
      "tests/patterns/php/spatch/todo/ui_form.php",
      "tests/patterns/php/spatch/todo2/border.exp",
      "tests/patterns/php/spatch/todo2/border.php",
      "tests/patterns/php/spatch/todo2/border.spatch",
      "tests/patterns/php/spatch/todo2/border_var.exp",
      "tests/patterns/php/spatch/todo2/border_var.php",
      "tests/patterns/php/spatch/todo2/border_var.spatch",
      "tests/patterns/php/spatch/todo2/border_var2.exp",
      "tests/patterns/php/spatch/todo2/border_var2.php",
      "tests/patterns/php/spatch/todo2/entgeneric.exp",
      "tests/patterns/php/spatch/todo2/entgeneric.php",
      "tests/patterns/php/spatch/todo2/entgeneric.spatch",
      "tests/patterns/php/spatch/todo2/entuser.exp",
      "tests/patterns/php/spatch/todo2/entuser.php",
      "tests/patterns/php/spatch/todo2/entuser.spatch",
      "tests/patterns/php/spatch/todo2/remove_refarg.exp",
      "tests/patterns/php/spatch/todo2/remove_refarg.php",
      "tests/patterns/php/spatch/todo2/remove_refarg.spatch",
      "tests/patterns/php/spatch/todo2/space1.exp",
      "tests/patterns/php/spatch/todo2/space1.php",
      "tests/patterns/php/spatch/type.exp",
      "tests/patterns/php/spatch/type.php",
      "tests/patterns/php/spatch/type.spatch",
      "tests/patterns/php/spatch/xhp_metavar.exp",
      "tests/patterns/php/spatch/xhp_metavar.php",
      "tests/patterns/php/spatch/xhp_metavar.spatch",
      "tests/patterns/php/spatch/xhp_nested.exp",
      "tests/patterns/php/spatch/xhp_nested.php",
      "tests/patterns/php/spatch/xhp_nested.spatch",
      "tests/patterns/promql/aggregation.promql",
      "tests/patterns/promql/aggregation.sgrep",
      "tests/patterns/promql/binary_ellipsis.promql",
      "tests/patterns/promql/binary_ellipsis.sgrep",
      "tests/patterns/promql/complex_func.promql",
      "tests/patterns/promql/complex_func.sgrep",
      "tests/patterns/promql/empty_selector.promql",
      "tests/patterns/promql/empty_selector.sgrep",
      "tests/patterns/promql/func.promql",
      "tests/patterns/promql/func.sgrep",
      "tests/patterns/promql/grouping.promql",
      "tests/patterns/promql/grouping.sgrep",
      "tests/patterns/promql/selector.promql",
      "tests/patterns/promql/selector.sgrep",
      "tests/patterns/promql/selector_ellipsis.promql",
      "tests/patterns/promql/selector_ellipsis.sgrep",
      "tests/patterns/promql/selector_with_name_label.promql",
      "tests/patterns/promql/selector_with_name_label.sgrep",
      "tests/patterns/promql/selector_without_labels.promql",
      "tests/patterns/promql/selector_without_labels.sgrep",
      "tests/patterns/promql/subquery.promql",
      "tests/patterns/promql/subquery.sgrep",
      "tests/patterns/promql/subquery_in_func.promql",
      "tests/patterns/promql/subquery_in_func.sgrep",
      "tests/patterns/promql/subquery_vs_range_selector.promql",
      "tests/patterns/promql/subquery_vs_range_selector.sgrep",
      "tests/patterns/protobuf/simple.sgrep",
      "tests/patterns/python/ac_matching_dots.py",
      "tests/patterns/python/ac_matching_dots.sgrep",
      "tests/patterns/python/ac_matching_dots1.py",
      "tests/patterns/python/ac_matching_dots1.sgrep",
      "tests/patterns/python/ac_matching_explosion.py",
      "tests/patterns/python/ac_matching_explosion.sgrep",
      "tests/patterns/python/ac_matching_explosion1.py",
      "tests/patterns/python/ac_matching_explosion1.sgrep",
      "tests/patterns/python/ac_matching_explosion2.py",
      "tests/patterns/python/ac_matching_explosion2.sgrep",
      "tests/patterns/python/ac_matching_explosion3.py",
      "tests/patterns/python/ac_matching_explosion3.sgrep",
      "tests/patterns/python/ac_matching_free.py",
      "tests/patterns/python/ac_matching_free.sgrep",
      "tests/patterns/python/ac_matching_free1.py",
      "tests/patterns/python/ac_matching_free1.sgrep",
      "tests/patterns/python/ac_matching_if.py",
      "tests/patterns/python/ac_matching_if.sgrep",
      "tests/patterns/python/ac_matching_if1.py",
      "tests/patterns/python/ac_matching_if1.sgrep",
      "tests/patterns/python/ac_matching_mvars.py",
      "tests/patterns/python/ac_matching_mvars.sgrep",
      "tests/patterns/python/ac_matching_mvars1.py",
      "tests/patterns/python/ac_matching_mvars1.sgrep",
      "tests/patterns/python/ac_matching_mvars2.py",
      "tests/patterns/python/ac_matching_mvars2.sgrep",
      "tests/patterns/python/aliasing_and_direct.py",
      "tests/patterns/python/aliasing_and_direct.sgrep",
      "tests/patterns/python/aliasing_attribute.py",
      "tests/patterns/python/aliasing_attribute.sgrep",
      "tests/patterns/python/already_resolved_with_wildcard.py",
      "tests/patterns/python/already_resolved_with_wildcard.sgrep",
      "tests/patterns/python/any_qualified_with_wildcard.py",
      "tests/patterns/python/any_qualified_with_wildcard.sgrep",
      "tests/patterns/python/assoc_matching_bug.py",
      "tests/patterns/python/assoc_matching_bug.sgrep",
      "tests/patterns/python/assoc_matching_dots.py",
      "tests/patterns/python/assoc_matching_dots.sgrep",
      "tests/patterns/python/assoc_matching_dots1.py",
      "tests/patterns/python/assoc_matching_dots1.sgrep",
      "tests/patterns/python/assoc_matching_explosion.py",
      "tests/patterns/python/assoc_matching_explosion.sgrep",
      "tests/patterns/python/assoc_matching_explosion1.py",
      "tests/patterns/python/assoc_matching_explosion1.sgrep",
      "tests/patterns/python/assoc_matching_explosion2.py",
      "tests/patterns/python/assoc_matching_explosion2.sgrep",
      "tests/patterns/python/assoc_matching_explosion3.py",
      "tests/patterns/python/assoc_matching_explosion3.sgrep",
      "tests/patterns/python/assoc_matching_free.py",
      "tests/patterns/python/assoc_matching_free.sgrep",
      "tests/patterns/python/assoc_matching_free1.py",
      "tests/patterns/python/assoc_matching_free1.sgrep",
      "tests/patterns/python/assoc_matching_mvars.py",
      "tests/patterns/python/assoc_matching_mvars.sgrep",
      "tests/patterns/python/assoc_matching_mvars1.py",
      "tests/patterns/python/assoc_matching_mvars1.sgrep",
      "tests/patterns/python/concrete_fstring.py",
      "tests/patterns/python/concrete_fstring.sgrep",
      "tests/patterns/python/concrete_syntax.py",
      "tests/patterns/python/constprop_dataflow.py",
      "tests/patterns/python/constprop_dataflow.sgrep",
      "tests/patterns/python/constprop_used_twice.py",
      "tests/patterns/python/constprop_used_twice.sgrep",
      "tests/patterns/python/cp_concat.py",
      "tests/patterns/python/cp_concat.sgrep",
      "tests/patterns/python/cp_eval1.py",
      "tests/patterns/python/cp_eval1.sgrep",
      "tests/patterns/python/cp_eval2.py",
      "tests/patterns/python/cp_eval2.sgrep",
      "tests/patterns/python/cp_exception.py",
      "tests/patterns/python/cp_exception.sgrep",
      "tests/patterns/python/cp_label.py",
      "tests/patterns/python/cp_label.sgrep",
      "tests/patterns/python/cp_label1.py",
      "tests/patterns/python/cp_label1.sgrep",
      "tests/patterns/python/cp_method_call.py",
      "tests/patterns/python/cp_method_call.sgrep",
      "tests/patterns/python/cp_rlval.py",
      "tests/patterns/python/cp_rlval.sgrep",
      "tests/patterns/python/cp_string_mvar.py",
      "tests/patterns/python/cp_string_mvar.sgrep",
      "tests/patterns/python/cp_strings.py",
      "tests/patterns/python/cp_strings.sgrep",
      "tests/patterns/python/cp_with.py",
      "tests/patterns/python/cp_with.sgrep",
      "tests/patterns/python/cp_yield.py",
      "tests/patterns/python/cp_yield.sgrep",
      "tests/patterns/python/deep_cond.py",
      "tests/patterns/python/deep_cond.sgrep",
      "tests/patterns/python/deep_expr_operator.py",
      "tests/patterns/python/deep_expr_operator.sgrep",
      "tests/patterns/python/deep_expr_vs_statement.py",
      "tests/patterns/python/deep_expr_vs_statement.sgrep",
      "tests/patterns/python/deep_exprstmt.py",
      "tests/patterns/python/deep_exprstmt.sgrep",
      "tests/patterns/python/deep_fake_dataflow.py",
      "tests/patterns/python/deep_fake_dataflow.sgrep",
      "tests/patterns/python/deep_try.py",
      "tests/patterns/python/deep_try.sgrep",
      "tests/patterns/python/df_input.py",
      "tests/patterns/python/df_input.sgrep",
      "tests/patterns/python/dict_ellipsis.py",
      "tests/patterns/python/dict_ellipsis.sgrep",
      "tests/patterns/python/dots_args.py",
      "tests/patterns/python/dots_attribute.py",
      "tests/patterns/python/dots_attribute.sgrep",
      "tests/patterns/python/dots_except_as.py",
      "tests/patterns/python/dots_except_as.sgrep",
      "tests/patterns/python/dots_expr.py",
      "tests/patterns/python/dots_expr_plus.py",
      "tests/patterns/python/dots_expr_plus.sgrep",
      "tests/patterns/python/dots_expr_plus_string.py",
      "tests/patterns/python/dots_expr_plus_string.sgrep",
      "tests/patterns/python/dots_fields.py",
      "tests/patterns/python/dots_fields.sgrep",
      "tests/patterns/python/dots_fstring.py",
      "tests/patterns/python/dots_fstring.sgrep",
      "tests/patterns/python/dots_inherit.py",
      "tests/patterns/python/dots_inherit.sgrep",
      "tests/patterns/python/dots_list.py",
      "tests/patterns/python/dots_list.sgrep",
      "tests/patterns/python/dots_method_chaining.py",
      "tests/patterns/python/dots_nested_stmts.py",
      "tests/patterns/python/dots_nested_stmts.sgrep",
      "tests/patterns/python/dots_params.py",
      "tests/patterns/python/dots_params.sgrep",
      "tests/patterns/python/dots_pattern_comprehension.py",
      "tests/patterns/python/dots_pattern_comprehension.sgrep",
      "tests/patterns/python/dots_return.py",
      "tests/patterns/python/dots_return.sgrep",
      "tests/patterns/python/dots_stmts.py",
      "tests/patterns/python/dots_stmts.sgrep",
      "tests/patterns/python/dots_string.py",
      "tests/patterns/python/dots_tuples.py",
      "tests/patterns/python/dots_tuples.sgrep",
      "tests/patterns/python/equivalence_constant_propagation.py",
      "tests/patterns/python/equivalence_constant_propagation.sgrep",
      "tests/patterns/python/equivalence_f_string.py",
      "tests/patterns/python/equivalence_f_string.sgrep",
      "tests/patterns/python/equivalence_f_string_2.py",
      "tests/patterns/python/equivalence_f_string_2.sgrep",
      "tests/patterns/python/equivalence_f_string_3.py",
      "tests/patterns/python/equivalence_f_string_3.sgrep",
      "tests/patterns/python/equivalence_f_string_4.py",
      "tests/patterns/python/equivalence_f_string_4.sgrep",
      "tests/patterns/python/equivalence_interpolated_str.py",
      "tests/patterns/python/equivalence_interpolated_str.sgrep",
      "tests/patterns/python/equivalence_interpolated_str2.py",
      "tests/patterns/python/equivalence_interpolated_str2.sgrep",
      "tests/patterns/python/equivalence_keyword_args.py",
      "tests/patterns/python/equivalence_keyword_args.sgrep",
      "tests/patterns/python/equivalence_naming_import.py",
      "tests/patterns/python/equivalence_naming_import.sgrep",
      "tests/patterns/python/import_metavar.py",
      "tests/patterns/python/import_metavar.sgrep",
      "tests/patterns/python/import_metavar_fullpath.py",
      "tests/patterns/python/import_metavar_fullpath.sgrep",
      "tests/patterns/python/import_negatives.py",
      "tests/patterns/python/import_negatives.sgrep",
      "tests/patterns/python/import_negatives2.py",
      "tests/patterns/python/import_negatives2.sgrep",
      "tests/patterns/python/imports.py",
      "tests/patterns/python/imports.sgrep",
      "tests/patterns/python/index_tuple.py",
      "tests/patterns/python/index_tuple.sgrep",
      "tests/patterns/python/less_attributes.py",
      "tests/patterns/python/less_attributes.sgrep",
      "tests/patterns/python/less_inherits.py",
      "tests/patterns/python/less_inherits.sgrep",
      "tests/patterns/python/less_typehint.py",
      "tests/patterns/python/less_typehint.sgrep",
      "tests/patterns/python/less_typehint2.py",
      "tests/patterns/python/less_typehint2.sgrep",
      "tests/patterns/python/metavar_anno.py",
      "tests/patterns/python/metavar_anno.sgrep",
      "tests/patterns/python/metavar_arg.py",
      "tests/patterns/python/metavar_call.py",
      "tests/patterns/python/metavar_class_def.py",
      "tests/patterns/python/metavar_class_def.sgrep",
      "tests/patterns/python/metavar_cond.py",
      "tests/patterns/python/metavar_cond.sgrep",
      "tests/patterns/python/metavar_dict.py",
      "tests/patterns/python/metavar_dict.sgrep",
      "tests/patterns/python/metavar_ellipsis_args.py",
      "tests/patterns/python/metavar_equality_expr.py",
      "tests/patterns/python/metavar_equality_field_vs_var.py",
      "tests/patterns/python/metavar_equality_field_vs_var.sgrep",
      "tests/patterns/python/metavar_equality_funcdef_vs_use.py",
      "tests/patterns/python/metavar_equality_funcdef_vs_use.sgrep",
      "tests/patterns/python/metavar_equality_param_vs_use.py",
      "tests/patterns/python/metavar_equality_param_vs_use.sgrep",
      "tests/patterns/python/metavar_equality_stmt.py",
      "tests/patterns/python/metavar_equality_stmt.sgrep",
      "tests/patterns/python/metavar_equality_var.py",
      "tests/patterns/python/metavar_equality_var.sgrep",
      "tests/patterns/python/metavar_func_def.py",
      "tests/patterns/python/metavar_func_def.sgrep",
      "tests/patterns/python/metavar_import.py",
      "tests/patterns/python/metavar_import.sgrep",
      "tests/patterns/python/metavar_iterator.py",
      "tests/patterns/python/metavar_iterator.sgrep",
      "tests/patterns/python/metavar_key_value.py",
      "tests/patterns/python/metavar_kwd_arg.py",
      "tests/patterns/python/metavar_kwd_arg.sgrep",
      "tests/patterns/python/metavar_match.py",
      "tests/patterns/python/metavar_match.sgrep",
      "tests/patterns/python/metavar_pattern.py",
      "tests/patterns/python/metavar_pattern.sgrep",
      "tests/patterns/python/metavar_set.py",
      "tests/patterns/python/metavar_set.sgrep",
      "tests/patterns/python/metavar_stmt.py",
      "tests/patterns/python/metavar_stmt.sgrep",
      "tests/patterns/python/metavar_string.py",
      "tests/patterns/python/metavar_tuple.py",
      "tests/patterns/python/metavar_tuple.sgrep",
      "tests/patterns/python/metavar_typed.py",
      "tests/patterns/python/metavar_typed.sgrep",
      "tests/patterns/python/misc_attributes.py",
      "tests/patterns/python/misc_attributes.sgrep",
      "tests/patterns/python/misc_block_import.py",
      "tests/patterns/python/misc_block_import.sgrep",
      "tests/patterns/python/misc_class_regression.py",
      "tests/patterns/python/misc_class_regression.sgrep",
      "tests/patterns/python/misc_comprehension.py",
      "tests/patterns/python/misc_comprehension.sgrep",
      "tests/patterns/python/misc_dots_stmts.py",
      "tests/patterns/python/misc_dots_stmts.sgrep",
      "tests/patterns/python/misc_else.py",
      "tests/patterns/python/misc_else.sgrep",
      "tests/patterns/python/misc_encoded_string.py",
      "tests/patterns/python/misc_encoded_string.sgrep",
      "tests/patterns/python/misc_except_matching.py",
      "tests/patterns/python/misc_except_matching.sgrep",
      "tests/patterns/python/misc_exn.py",
      "tests/patterns/python/misc_exn.sgrep",
      "tests/patterns/python/misc_fake_propa.py",
      "tests/patterns/python/misc_fake_propa.sgrep",
      "tests/patterns/python/misc_faketok1.py",
      "tests/patterns/python/misc_faketok1.sgrep",
      "tests/patterns/python/misc_faketok2.py",
      "tests/patterns/python/misc_faketok2.sgrep",
      "tests/patterns/python/misc_faketok3.py",
      "tests/patterns/python/misc_faketok3.sgrep",
      "tests/patterns/python/misc_if1.py",
      "tests/patterns/python/misc_if1.sgrep",
      "tests/patterns/python/misc_import.py",
      "tests/patterns/python/misc_import.sgrep",
      "tests/patterns/python/misc_match_stmt.py",
      "tests/patterns/python/misc_match_stmt.sgrep",
      "tests/patterns/python/misc_metavar_field_anyorder.py",
      "tests/patterns/python/misc_metavar_field_anyorder.sgrep",
      "tests/patterns/python/misc_metavar_vs_fstring.py",
      "tests/patterns/python/misc_metavar_vs_fstring.sgrep",
      "tests/patterns/python/misc_naming_bug.py",
      "tests/patterns/python/misc_naming_bug.sgrep",
      "tests/patterns/python/misc_naming_bug2.py",
      "tests/patterns/python/misc_naming_bug2.sgrep",
      "tests/patterns/python/misc_paren.py",
      "tests/patterns/python/misc_paren.sgrep",
      "tests/patterns/python/misc_prefix_string.py",
      "tests/patterns/python/misc_prefix_string.sgrep",
      "tests/patterns/python/misc_range_statements.py",
      "tests/patterns/python/misc_range_statements.sgrep",
      "tests/patterns/python/misc_regression1.py",
      "tests/patterns/python/misc_regression1.sgrep",
      "tests/patterns/python/misc_regression2.py",
      "tests/patterns/python/misc_regression2.sgrep",
      "tests/patterns/python/misc_return_empty.py",
      "tests/patterns/python/misc_return_empty.sgrep",
      "tests/patterns/python/misc_stmts1.py",
      "tests/patterns/python/misc_stmts1.sgrep",
      "tests/patterns/python/misc_tuple.py",
      "tests/patterns/python/misc_tuple.sgrep",
      "tests/patterns/python/misc_tuple2.py",
      "tests/patterns/python/misc_tuple2.sgrep",
      "tests/patterns/python/misc_with_no_rename.py",
      "tests/patterns/python/misc_with_no_rename.sgrep",
      "tests/patterns/python/misc_with_parens.py",
      "tests/patterns/python/misc_with_parens.sgrep",
      "tests/patterns/python/multi_import.py",
      "tests/patterns/python/multi_import.sgrep",
      "tests/patterns/python/multi_qualified_wildcard.py",
      "tests/patterns/python/multi_qualified_wildcard.sgrep",
      "tests/patterns/python/multiple_metavars.py",
      "tests/patterns/python/multiple_metavars.sgrep",
      "tests/patterns/python/pip614-extended-decorator-grammer1.py",
      "tests/patterns/python/pip614-extended-decorator-grammer1.sgrep",
      "tests/patterns/python/pip614-extended-decorator-grammer2.py",
      "tests/patterns/python/pip614-extended-decorator-grammer2.sgrep",
      "tests/patterns/python/python2.py",
      "tests/patterns/python/python2.sgrep",
      "tests/patterns/python/regexp_string.py",
      "tests/patterns/python/regexp_string_backref.py",
      "tests/patterns/python/regexp_string_backref.sgrep",
      "tests/patterns/python/scoped_wildcard.py",
      "tests/patterns/python/scoped_wildcard.sgrep",
      "tests/patterns/python/set_vs_dict.py",
      "tests/patterns/python/set_vs_dict.sgrep",
      "tests/patterns/python/set_vs_dict2.py",
      "tests/patterns/python/set_vs_dict2.sgrep",
      "tests/patterns/python/set_vs_dict3.py",
      "tests/patterns/python/set_vs_dict3.sgrep",
      "tests/patterns/python/standalone_decorator.py",
      "tests/patterns/python/standalone_decorator.sgrep",
      "tests/patterns/python/standalone_decorator_single_arg.py",
      "tests/patterns/python/standalone_decorator_single_arg.sgrep",
      "tests/patterns/python/stmts_to_fields.py",
      "tests/patterns/python/stmts_to_fields.sgrep",
      "tests/patterns/python/unordered_metavar2.py",
      "tests/patterns/python/unordered_metavar2.sgrep",
      "tests/patterns/python/untyped_vs_typed.py",
      "tests/patterns/python/untyped_vs_typed.sgrep",
      "tests/patterns/python/visitor_def.py",
      "tests/patterns/python/visitor_def.sgrep",
      "tests/patterns/python/wildcard_qualified.py",
      "tests/patterns/python/wildcard_qualified.sgrep",
      "tests/patterns/python/wildcard_qualified_mvar.py",
      "tests/patterns/python/wildcard_qualified_mvar.sgrep",
      "tests/patterns/r/concrete_syntax.r",
      "tests/patterns/r/dots_args.r",
      "tests/patterns/r/dots_nested_stmts.r",
      "tests/patterns/r/dots_stmts.r",
      "tests/patterns/r/dots_stmts.sgrep",
      "tests/patterns/r/dots_string.r",
      "tests/patterns/r/metavar_arg.r",
      "tests/patterns/r/metavar_call.r",
      "tests/patterns/r/metavar_equality_var.r",
      "tests/patterns/ruby/blocks.rb",
      "tests/patterns/ruby/blocks.sgrep",
      "tests/patterns/ruby/blocks1.rb",
      "tests/patterns/ruby/blocks1.sgrep",
      "tests/patterns/ruby/call_expr_property.rb",
      "tests/patterns/ruby/call_expr_property.sgrep",
      "tests/patterns/ruby/command_call_with_ellipsis.rb",
      "tests/patterns/ruby/command_call_with_ellipsis.sgrep",
      "tests/patterns/ruby/command_call_with_ellipsis_with_block.rb",
      "tests/patterns/ruby/command_call_with_ellipsis_with_block.sgrep",
      "tests/patterns/ruby/command_call_with_ellipsis_with_do_block.rb",
      "tests/patterns/ruby/command_call_with_ellipsis_with_do_block.sgrep",
      "tests/patterns/ruby/command_call_with_ellipsis_with_newlined_do_block.rb",
      "tests/patterns/ruby/command_call_with_ellipsis_with_newlined_do_block.sgrep",
      "tests/patterns/ruby/concrete_syntax.rb",
      "tests/patterns/ruby/cp_assign.rb",
      "tests/patterns/ruby/cp_assign.sgrep",
      "tests/patterns/ruby/cp_concat.rb",
      "tests/patterns/ruby/cp_concat.sgrep",
      "tests/patterns/ruby/cp_interpolated.rb",
      "tests/patterns/ruby/cp_interpolated.sgrep",
      "tests/patterns/ruby/cp_string_mutable.rb",
      "tests/patterns/ruby/cp_string_mutable.sgrep",
      "tests/patterns/ruby/deep_expr_operator.rb",
      "tests/patterns/ruby/deep_expr_operator.sgrep",
      "tests/patterns/ruby/deep_exprstmt.rb",
      "tests/patterns/ruby/deep_exprstmt.sgrep",
      "tests/patterns/ruby/dots_args.rb",
      "tests/patterns/ruby/dots_atom.TODO",
      "tests/patterns/ruby/dots_atom.sgrep",
      "tests/patterns/ruby/dots_expr.rb",
      "tests/patterns/ruby/dots_interpolated_string.rb",
      "tests/patterns/ruby/dots_interpolated_string.sgrep",
      "tests/patterns/ruby/dots_method_chaining.rb",
      "tests/patterns/ruby/dots_multiple_interpolated.rb",
      "tests/patterns/ruby/dots_multiple_interpolated.sgrep",
      "tests/patterns/ruby/dots_nested_stmts.rb",
      "tests/patterns/ruby/dots_nested_stmts.sgrep",
      "tests/patterns/ruby/dots_regexp.rb",
      "tests/patterns/ruby/dots_regexp.sgrep",
      "tests/patterns/ruby/dots_stmts.rb",
      "tests/patterns/ruby/dots_stmts.sgrep",
      "tests/patterns/ruby/dots_string.rb",
      "tests/patterns/ruby/dots_struct_new.rb",
      "tests/patterns/ruby/dots_struct_new.sgrep",
      "tests/patterns/ruby/equivalence_constant_propagation.rb",
      "tests/patterns/ruby/equivalence_keyword_args.rb",
      "tests/patterns/ruby/equivalence_keyword_args.sgrep",
      "tests/patterns/ruby/equivalence_keyword_args_hash.rb",
      "tests/patterns/ruby/equivalence_keyword_args_hash.sgrep",
      "tests/patterns/ruby/foo.rb",
      "tests/patterns/ruby/foo.sgrep",
      "tests/patterns/ruby/implicit_return.rb",
      "tests/patterns/ruby/implicit_return.sgrep",
      "tests/patterns/ruby/lambda.rb",
      "tests/patterns/ruby/lambda.sgrep",
      "tests/patterns/ruby/metavar_arg.rb",
      "tests/patterns/ruby/metavar_atom.rb",
      "tests/patterns/ruby/metavar_atom.sgrep",
      "tests/patterns/ruby/metavar_atom_or_id.rb",
      "tests/patterns/ruby/metavar_atom_or_id.sgrep",
      "tests/patterns/ruby/metavar_call.rb",
      "tests/patterns/ruby/metavar_class_def.rb",
      "tests/patterns/ruby/metavar_class_def.sgrep",
      "tests/patterns/ruby/metavar_classname.rb",
      "tests/patterns/ruby/metavar_classname.sgrep",
      "tests/patterns/ruby/metavar_cond.rb",
      "tests/patterns/ruby/metavar_cond.sgrep",
      "tests/patterns/ruby/metavar_ellipsis_args.rb",
      "tests/patterns/ruby/metavar_ellipsis_args_empty.rb",
      "tests/patterns/ruby/metavar_ellipsis_args_empty.sgrep",
      "tests/patterns/ruby/metavar_equality_expr.rb",
      "tests/patterns/ruby/metavar_equality_stmt.rb",
      "tests/patterns/ruby/metavar_equality_stmt.sgrep",
      "tests/patterns/ruby/metavar_equality_var.rb",
      "tests/patterns/ruby/metavar_equality_var.sgrep",
      "tests/patterns/ruby/metavar_func_def.rb",
      "tests/patterns/ruby/metavar_func_def.sgrep",
      "tests/patterns/ruby/metavar_import.rb",
      "tests/patterns/ruby/metavar_import.sgrep",
      "tests/patterns/ruby/metavar_interpolated.rb",
      "tests/patterns/ruby/metavar_interpolated.sgrep",
      "tests/patterns/ruby/metavar_key_value.rb",
      "tests/patterns/ruby/metavar_regexp.rb",
      "tests/patterns/ruby/metavar_regexp.sgrep",
      "tests/patterns/ruby/metavar_stmt.rb",
      "tests/patterns/ruby/metavar_stmt.sgrep",
      "tests/patterns/ruby/misc_backtick_interp.rb",
      "tests/patterns/ruby/misc_backtick_interp.sgrep",
      "tests/patterns/ruby/misc_backticks.rb",
      "tests/patterns/ruby/misc_backticks.sgrep",
      "tests/patterns/ruby/misc_bitand.rb",
      "tests/patterns/ruby/misc_bitand.sgrep",
      "tests/patterns/ruby/misc_div0.rb",
      "tests/patterns/ruby/misc_div0.sgrep",
      "tests/patterns/ruby/misc_dot_call.rb",
      "tests/patterns/ruby/misc_dot_call.sgrep",
      "tests/patterns/ruby/misc_dotaccess.rb",
      "tests/patterns/ruby/misc_dotaccess.sgrep",
      "tests/patterns/ruby/misc_empty_token1.rb",
      "tests/patterns/ruby/misc_empty_token1.sgrep",
      "tests/patterns/ruby/misc_hidden_call.rb",
      "tests/patterns/ruby/misc_hidden_call.sgrep",
      "tests/patterns/ruby/misc_kwdarg.rb",
      "tests/patterns/ruby/misc_kwdarg.sgrep",
      "tests/patterns/ruby/misc_kwdarg2.rb",
      "tests/patterns/ruby/misc_kwdarg2.sgrep",
      "tests/patterns/ruby/misc_kwdarg3.rb",
      "tests/patterns/ruby/misc_kwdarg3.sgrep",
      "tests/patterns/ruby/misc_kwdarg_dots.rb",
      "tests/patterns/ruby/misc_kwdarg_dots.sgrep",
      "tests/patterns/ruby/misc_kwdarg_vs_atom.rb",
      "tests/patterns/ruby/misc_kwdarg_vs_atom.sgrep",
      "tests/patterns/ruby/misc_multiple_assign.rb",
      "tests/patterns/ruby/misc_multiple_assign.sgrep",
      "tests/patterns/ruby/misc_multiple_assign_uneq_lists.rb",
      "tests/patterns/ruby/misc_multiple_assign_uneq_lists.sgrep",
      "tests/patterns/ruby/misc_parsing1.rb",
      "tests/patterns/ruby/misc_parsing1.sgrep",
      "tests/patterns/ruby/misc_parsing2.rb",
      "tests/patterns/ruby/misc_parsing2.sgrep",
      "tests/patterns/ruby/misc_range.rb",
      "tests/patterns/ruby/misc_range.sgrep",
      "tests/patterns/ruby/regexp_ellipsis.rb",
      "tests/patterns/ruby/regexp_ellipsis.sgrep",
      "tests/patterns/ruby/regexp_literal.rb",
      "tests/patterns/ruby/regexp_literal.sgrep",
      "tests/patterns/ruby/regexp_metavar.rb",
      "tests/patterns/ruby/regexp_metavar.sgrep",
      "tests/patterns/ruby/regexp_string.rb",
      "tests/patterns/ruby/regexp_template.rb",
      "tests/patterns/ruby/regexp_template.sgrep",
      "tests/patterns/ruby/rescue_func.rb",
      "tests/patterns/ruby/rescue_func.sgrep",
      "tests/patterns/ruby/unless_argkwd.rb",
      "tests/patterns/ruby/unless_argkwd.sgrep",
      "tests/patterns/rust/attribute_ellipsis.rs",
      "tests/patterns/rust/attribute_ellipsis.sgrep",
      "tests/patterns/rust/attribute_function.rs",
      "tests/patterns/rust/attribute_function.sgrep",
      "tests/patterns/rust/attribute_matching.rs",
      "tests/patterns/rust/attribute_matching.sgrep",
      "tests/patterns/rust/concrete_syntax.rs",
      "tests/patterns/rust/cp_expr_stmt_if.ex",
      "tests/patterns/rust/cp_expr_stmt_if.sgrep",
      "tests/patterns/rust/deep_expr_operator.rs",
      "tests/patterns/rust/deep_exprstmt.rs",
      "tests/patterns/rust/dots_args.rs",
      "tests/patterns/rust/dots_field_chaining.rs",
      "tests/patterns/rust/dots_field_chaining.sgrep",
      "tests/patterns/rust/dots_macro_call.rs",
      "tests/patterns/rust/dots_macro_call.sgrep",
      "tests/patterns/rust/dots_method_chaining.rs",
      "tests/patterns/rust/dots_method_chaining.sgrep",
      "tests/patterns/rust/dots_mod.rs",
      "tests/patterns/rust/dots_mod.sgrep",
      "tests/patterns/rust/dots_nested_stmts.rs",
      "tests/patterns/rust/dots_nested_stmts.sgrep",
      "tests/patterns/rust/dots_stmts.rs",
      "tests/patterns/rust/dots_string.rs",
      "tests/patterns/rust/dots_struct.rs",
      "tests/patterns/rust/dots_struct.sgrep",
      "tests/patterns/rust/epattern_type_prop.rs",
      "tests/patterns/rust/epattern_type_prop.sgrep",
      "tests/patterns/rust/implicit_return.rs",
      "tests/patterns/rust/implicit_return.sgrep",
      "tests/patterns/rust/metavar_arg.rs",
      "tests/patterns/rust/metavar_call.rs",
      "tests/patterns/rust/metavar_class_def.rs",
      "tests/patterns/rust/metavar_class_def.sgrep",
      "tests/patterns/rust/metavar_cond.rs",
      "tests/patterns/rust/metavar_cond.sgrep",
      "tests/patterns/rust/metavar_ellipsis.rs",
      "tests/patterns/rust/metavar_ellipsis.sgrep",
      "tests/patterns/rust/metavar_ellipsis_args.rs",
      "tests/patterns/rust/metavar_ellipsis_args.sgrep",
      "tests/patterns/rust/metavar_equality_expr.rs",
      "tests/patterns/rust/metavar_equality_stmt.rs",
      "tests/patterns/rust/metavar_equality_stmt.sgrep",
      "tests/patterns/rust/metavar_equality_var.rs",
      "tests/patterns/rust/metavar_func_def.rs",
      "tests/patterns/rust/metavar_func_def.sgrep",
      "tests/patterns/rust/metavar_import.rs",
      "tests/patterns/rust/metavar_import.sgrep",
      "tests/patterns/rust/metavar_param.rs",
      "tests/patterns/rust/metavar_param.sgrep",
      "tests/patterns/rust/metavar_pattern.rs",
      "tests/patterns/rust/metavar_pattern.sgrep",
      "tests/patterns/rust/metavar_standalone.rs",
      "tests/patterns/rust/metavar_standalone.sgrep",
      "tests/patterns/rust/metavar_stmt.rs",
      "tests/patterns/rust/metavar_stmt.sgrep",
      "tests/patterns/rust/misc_impl.rs",
      "tests/patterns/rust/misc_impl.sgrep",
      "tests/patterns/rust/misc_macrocall.rs",
      "tests/patterns/rust/misc_macrocall.sgrep",
      "tests/patterns/rust/misc_name_pattern.rs",
      "tests/patterns/rust/misc_name_pattern.sgrep",
      "tests/patterns/rust/misc_naming_recursion.rs",
      "tests/patterns/rust/misc_naming_recursion.sgrep",
      "tests/patterns/rust/misc_return_3.rs",
      "tests/patterns/rust/misc_return_3.sgrep",
      "tests/patterns/rust/misc_scoped_idents.rs",
      "tests/patterns/rust/misc_scoped_idents.sgrep",
      "tests/patterns/rust/misc_scoped_idents_as.rs",
      "tests/patterns/rust/misc_scoped_idents_as.sgrep",
      "tests/patterns/rust/struct_pattern.rs",
      "tests/patterns/rust/struct_pattern.sgrep",
      "tests/patterns/scala/by_name.scala",
      "tests/patterns/scala/by_name.sgrep",
      "tests/patterns/scala/case_class_block.scala",
      "tests/patterns/scala/case_class_block.sgrep",
      "tests/patterns/scala/case_object_block.scala",
      "tests/patterns/scala/case_object_block.sgrep",
      "tests/patterns/scala/catch_ellipsis.scala",
      "tests/patterns/scala/catch_ellipsis.sgrep",
      "tests/patterns/scala/class_params.scala",
      "tests/patterns/scala/class_params.sgrep",
      "tests/patterns/scala/concrete_syntax.scala",
      "tests/patterns/scala/constructor_annots.scala",
      "tests/patterns/scala/constructor_annots.sgrep",
      "tests/patterns/scala/custom_interpolated.scala",
      "tests/patterns/scala/custom_interpolated.sgrep",
      "tests/patterns/scala/deep_expr_operator.scala",
      "tests/patterns/scala/deep_exprstmt.scala",
      "tests/patterns/scala/dots_args.scala",
      "tests/patterns/scala/dots_atom.scala",
      "tests/patterns/scala/dots_atom.sgrep",
      "tests/patterns/scala/dots_match.scala",
      "tests/patterns/scala/dots_match.sgrep",
      "tests/patterns/scala/dots_method_chaining.scala",
      "tests/patterns/scala/dots_method_chaining.sgrep",
      "tests/patterns/scala/dots_nested_stmts.scala",
      "tests/patterns/scala/dots_stmts.scala",
      "tests/patterns/scala/dots_string.scala",
      "tests/patterns/scala/equivalence_constant_propagation.scala",
      "tests/patterns/scala/equivalence_naming_import.scala",
      "tests/patterns/scala/equivalence_naming_import.sgrep",
      "tests/patterns/scala/for_loop.scala",
      "tests/patterns/scala/for_loop.sgrep",
      "tests/patterns/scala/for_loop_ellipsis.scala",
      "tests/patterns/scala/for_loop_ellipsis.sgrep",
      "tests/patterns/scala/implicit_return.scala",
      "tests/patterns/scala/implicit_return.sgrep",
      "tests/patterns/scala/import_metavariable.scala",
      "tests/patterns/scala/import_metavariable.sgrep",
      "tests/patterns/scala/infix_method.scala",
      "tests/patterns/scala/infix_method.sgrep",
      "tests/patterns/scala/match_type_ellipsis.scala",
      "tests/patterns/scala/match_type_ellipsis.sgrep",
      "tests/patterns/scala/metavar_anno.scala",
      "tests/patterns/scala/metavar_arg.scala",
      "tests/patterns/scala/metavar_atom.scala",
      "tests/patterns/scala/metavar_atom.sgrep",
      "tests/patterns/scala/metavar_call.scala",
      "tests/patterns/scala/metavar_class_def.scala",
      "tests/patterns/scala/metavar_cond.scala",
      "tests/patterns/scala/metavar_cond.sgrep",
      "tests/patterns/scala/metavar_equality_expr.scala",
      "tests/patterns/scala/metavar_equality_stmt.scala",
      "tests/patterns/scala/metavar_equality_stmt.sgrep",
      "tests/patterns/scala/metavar_equality_var.scala",
      "tests/patterns/scala/metavar_func_def.scala",
      "tests/patterns/scala/metavar_func_def.sgrep",
      "tests/patterns/scala/metavar_import.scala",
      "tests/patterns/scala/metavar_import.sgrep",
      "tests/patterns/scala/metavar_key_value.scala",
      "tests/patterns/scala/metavar_key_value.sgrep",
      "tests/patterns/scala/metavar_pat.scala",
      "tests/patterns/scala/metavar_pat.sgrep",
      "tests/patterns/scala/metavar_stmt.scala",
      "tests/patterns/scala/metavar_stmt.sgrep",
      "tests/patterns/scala/metavar_typed.scala",
      "tests/patterns/scala/metavar_typed.sgrep",
      "tests/patterns/scala/metavar_typed_parens.scala",
      "tests/patterns/scala/metavar_typed_parens.sgrep",
      "tests/patterns/scala/minus_identifier.scala",
      "tests/patterns/scala/minus_identifier.sgrep",
      "tests/patterns/scala/misc_symbol.scala",
      "tests/patterns/scala/misc_symbol.sgrep",
      "tests/patterns/scala/pat_def.scala",
      "tests/patterns/scala/pat_def.sgrep",
      "tests/patterns/scala/pat_ellipsis.scala",
      "tests/patterns/scala/pat_ellipsis.sgrep",
      "tests/patterns/scala/tuple_def.scala",
      "tests/patterns/scala/tuple_def.sgrep",
      "tests/patterns/scala/tuple_infix_type.scala",
      "tests/patterns/scala/tuple_infix_type.sgrep",
      "tests/patterns/solidity/concrete_syntax.sol",
      "tests/patterns/solidity/deep_expr_operator.sol",
      "tests/patterns/solidity/deep_exprstmt.sol",
      "tests/patterns/solidity/dots_args.sol",
      "tests/patterns/solidity/dots_contract.sgrep",
      "tests/patterns/solidity/dots_contract.sol",
      "tests/patterns/solidity/dots_for.sol",
      "tests/patterns/solidity/dots_inherit.sgrep",
      "tests/patterns/solidity/dots_inherit.sol",
      "tests/patterns/solidity/dots_nested_stmts.sol",
      "tests/patterns/solidity/dots_stmts.sol",
      "tests/patterns/solidity/dots_string.sol",
      "tests/patterns/solidity/metavar_arg.sol",
      "tests/patterns/solidity/metavar_call.sol",
      "tests/patterns/solidity/metavar_equality_var.sol",
      "tests/patterns/solidity/metavar_version.sgrep",
      "tests/patterns/solidity/metavar_version.sol",
      "tests/patterns/solidity/misc_constructor.sgrep",
      "tests/patterns/solidity/misc_constructor.sol",
      "tests/patterns/solidity/misc_enum.sgrep",
      "tests/patterns/solidity/misc_enum.sol",
      "tests/patterns/solidity/misc_event.sgrep",
      "tests/patterns/solidity/misc_event.sol",
      "tests/patterns/solidity/misc_modifier.sgrep",
      "tests/patterns/solidity/misc_modifier.sol",
      "tests/patterns/solidity/misc_parent.sgrep",
      "tests/patterns/solidity/misc_parent.sol",
      "tests/patterns/solidity/misc_try_as_lambda.sgrep",
      "tests/patterns/solidity/misc_try_as_lambda.sol",
      "tests/patterns/solidity/misc_unchecked.sgrep",
      "tests/patterns/solidity/misc_unchecked.sol",
      "tests/patterns/swift/class_ellipsis.sgrep",
      "tests/patterns/swift/class_ellipsis.swift",
      "tests/patterns/swift/class_variants.sgrep",
      "tests/patterns/swift/class_variants.swift",
      "tests/patterns/swift/concrete_syntax.swift",
      "tests/patterns/swift/deep_expr_operator.swift",
      "tests/patterns/swift/deep_exprstmt.swift",
      "tests/patterns/swift/dots_args.swift",
      "tests/patterns/swift/dots_nested_stmts.sgrep",
      "tests/patterns/swift/dots_nested_stmts.swift",
      "tests/patterns/swift/dots_stmts.swift",
      "tests/patterns/swift/dots_string.swift",
      "tests/patterns/swift/ellipsis_metavar.sgrep",
      "tests/patterns/swift/ellipsis_metavar.swift",
      "tests/patterns/swift/if_let.sgrep",
      "tests/patterns/swift/if_let.swift",
      "tests/patterns/swift/keypath.sgrep",
      "tests/patterns/swift/keypath.swift",
      "tests/patterns/swift/labeled_binding_in_case_stmt.sgrep",
      "tests/patterns/swift/labeled_binding_in_case_stmt.swift",
      "tests/patterns/swift/match_name.sgrep",
      "tests/patterns/swift/match_name.swift",
      "tests/patterns/swift/metavar_arg.swift",
      "tests/patterns/swift/metavar_call.swift",
      "tests/patterns/swift/metavar_equality_var.swift",
      "tests/patterns/swift/nav_exp_ellipsis.sgrep",
      "tests/patterns/swift/nav_exp_ellipsis.swift",
      "tests/patterns/swift/semgrep_ellipsis.sgrep",
      "tests/patterns/swift/semgrep_ellipsis.swift",
      "tests/patterns/swift/semgrep_ellipsis_no_semi.sgrep",
      "tests/patterns/swift/semgrep_ellipsis_no_semi.swift",
      "tests/patterns/swift/unbounded_range_ellipsis.sgrep",
      "tests/patterns/swift/unbounded_range_ellipsis.swift",
      "tests/patterns/terraform/concrete_syntax.tf",
      "tests/patterns/terraform/deep_expr_operator.sgrep",
      "tests/patterns/terraform/deep_expr_operator.tf",
      "tests/patterns/terraform/dots_args.tf",
      "tests/patterns/terraform/dots_fields.sgrep",
      "tests/patterns/terraform/dots_fields.tf",
      "tests/patterns/terraform/dots_objects.sgrep",
      "tests/patterns/terraform/dots_objects.tf",
      "tests/patterns/terraform/dots_resource.sgrep",
      "tests/patterns/terraform/dots_resource.tf",
      "tests/patterns/terraform/dots_string.tf",
      "tests/patterns/terraform/dots_top.sgrep",
      "tests/patterns/terraform/dots_top.tf",
      "tests/patterns/terraform/equivalence_constant_propagation.sgrep",
      "tests/patterns/terraform/equivalence_constant_propagation.tf",
      "tests/patterns/terraform/equivalence_constant_propagation2.sgrep",
      "tests/patterns/terraform/equivalence_constant_propagation2.tf",
      "tests/patterns/terraform/metavar_arg.tf",
      "tests/patterns/terraform/metavar_call.tf",
      "tests/patterns/terraform/metavar_equality_var.sgrep",
      "tests/patterns/terraform/metavar_equality_var.tf",
      "tests/patterns/ts/concrete_syntax.ts",
      "tests/patterns/ts/deep_expr_operator.ts",
      "tests/patterns/ts/deep_exprstmt.ts",
      "tests/patterns/ts/deep_record.sgrep",
      "tests/patterns/ts/deep_record.ts",
      "tests/patterns/ts/dots_args.ts",
      "tests/patterns/ts/dots_arrow_body.sgrep",
      "tests/patterns/ts/dots_arrow_body.ts",
      "tests/patterns/ts/dots_import.sgrep",
      "tests/patterns/ts/dots_import.ts",
      "tests/patterns/ts/dots_import_complex.sgrep",
      "tests/patterns/ts/dots_import_complex.ts",
      "tests/patterns/ts/dots_method_chaining.ts",
      "tests/patterns/ts/dots_nested_stmts.ts",
      "tests/patterns/ts/dots_stmts.ts",
      "tests/patterns/ts/dots_string.ts",
      "tests/patterns/ts/dots_type_literal.sgrep",
      "tests/patterns/ts/dots_type_literal.ts",
      "tests/patterns/ts/equivalence_constant_propagation.ts",
      "tests/patterns/ts/equivalence_decl_vs_assign.sgrep",
      "tests/patterns/ts/equivalence_decl_vs_assign.ts",
      "tests/patterns/ts/ignore_types_function.sgrep",
      "tests/patterns/ts/ignore_types_function.ts",
      "tests/patterns/ts/import_vN.sgrep",
      "tests/patterns/ts/import_vN.ts",
      "tests/patterns/ts/less_type_let.sgrep",
      "tests/patterns/ts/less_type_let.ts",
      "tests/patterns/ts/metavar_arg.ts",
      "tests/patterns/ts/metavar_call.ts",
      "tests/patterns/ts/metavar_cond.ts",
      "tests/patterns/ts/metavar_ellipsis_args.ts",
      "tests/patterns/ts/metavar_equality_expr.ts",
      "tests/patterns/ts/metavar_equality_methoddef_vs_use.sgrep",
      "tests/patterns/ts/metavar_equality_methoddef_vs_use.ts",
      "tests/patterns/ts/metavar_equality_stmt.ts",
      "tests/patterns/ts/metavar_equality_var.ts",
      "tests/patterns/ts/metavar_func_def.ts",
      "tests/patterns/ts/metavar_import.sgrep",
      "tests/patterns/ts/metavar_import.ts",
      "tests/patterns/ts/metavar_key_value.ts",
      "tests/patterns/ts/metavar_stmt.ts",
      "tests/patterns/ts/metavar_typed_class.sgrep",
      "tests/patterns/ts/metavar_typed_class.ts",
      "tests/patterns/ts/metavar_typed_expr.sgrep",
      "tests/patterns/ts/metavar_typed_expr.ts",
      "tests/patterns/ts/metavar_typed_func.sgrep",
      "tests/patterns/ts/metavar_typed_func.ts",
      "tests/patterns/ts/misc_as_cast.sgrep",
      "tests/patterns/ts/misc_as_cast.ts",
      "tests/patterns/ts/misc_ast.sgrep",
      "tests/patterns/ts/misc_ast.ts",
      "tests/patterns/ts/misc_commonjs.sgrep",
      "tests/patterns/ts/misc_commonjs.ts",
      "tests/patterns/ts/misc_decorator1.sgrep",
      "tests/patterns/ts/misc_decorator1.ts",
      "tests/patterns/ts/misc_decorator_export.sgrep",
      "tests/patterns/ts/misc_decorator_export.ts",
      "tests/patterns/ts/misc_decorator_method.sgrep",
      "tests/patterns/ts/misc_decorator_method.ts",
      "tests/patterns/ts/misc_deep_metavar.sgrep",
      "tests/patterns/ts/misc_deep_metavar.ts",
      "tests/patterns/ts/misc_export.sgrep",
      "tests/patterns/ts/misc_export.ts",
      "tests/patterns/ts/misc_extends_qualified.sgrep",
      "tests/patterns/ts/misc_extends_qualified.ts",
      "tests/patterns/ts/misc_function.sgrep",
      "tests/patterns/ts/misc_function.ts",
      "tests/patterns/ts/misc_implements.sgrep",
      "tests/patterns/ts/misc_implements.ts",
      "tests/patterns/ts/misc_method.sgrep",
      "tests/patterns/ts/misc_method.ts",
      "tests/patterns/ts/misc_naming_recursion.sgrep",
      "tests/patterns/ts/misc_naming_recursion.ts",
      "tests/patterns/ts/misc_private_prop.sgrep",
      "tests/patterns/ts/misc_private_prop.ts",
      "tests/patterns/ts/misc_semicolon.sgrep",
      "tests/patterns/ts/misc_semicolon.ts",
      "tests/patterns/ts/misc_type1.sgrep",
      "tests/patterns/ts/misc_type1.ts",
      "tests/patterns/ts/misc_type2.sgrep",
      "tests/patterns/ts/misc_type2.ts",
      "tests/patterns/ts/misc_type3.sgrep",
      "tests/patterns/ts/misc_type3.ts",
      "tests/patterns/ts/opt_chain.sgrep",
      "tests/patterns/ts/opt_chain.ts",
      "tests/patterns/ts/param_type_annot.sgrep",
      "tests/patterns/ts/param_type_annot.ts",
      "tests/patterns/ts/record_functions.sgrep",
      "tests/patterns/ts/record_functions.ts",
      "tests/patterns/ts/regexp_fieldname.sgrep",
      "tests/patterns/ts/regexp_fieldname.ts",
      "tests/patterns/ts/regexp_string.ts",
      "tests/patterns/ts/type_assert.sgrep",
      "tests/patterns/ts/type_assert.ts",
      "tests/patterns/ts/unordered_implement.sgrep",
      "tests/patterns/ts/unordered_implement.ts",
      "tests/patterns/vue/concrete_syntax.vue",
      "tests/patterns/vue/deep_expr_operator.vue",
      "tests/patterns/xml/dots_body.sgrep",
      "tests/patterns/xml/dots_body.xml",
      "tests/patterns/xml/misc_attribute_pattern.sgrep",
      "tests/patterns/xml/misc_attribute_pattern.xml",
      "tests/patterns/yaml/anchor.sgrep",
      "tests/patterns/yaml/anchor.yaml",
      "tests/patterns/yaml/array_field_only.sgrep",
      "tests/patterns/yaml/array_field_only.yaml",
      "tests/patterns/yaml/dots_dict_list.sgrep",
      "tests/patterns/yaml/dots_dict_list.yaml",
      "tests/patterns/yaml/dots_list_dict.sgrep",
      "tests/patterns/yaml/dots_list_dict.yaml",
      "tests/patterns/yaml/dots_list_list.sgrep",
      "tests/patterns/yaml/dots_list_list.yaml",
      "tests/patterns/yaml/dots_nested.sgrep",
      "tests/patterns/yaml/dots_nested.yaml",
      "tests/patterns/yaml/empty.sgrep",
      "tests/patterns/yaml/empty.yaml",
      "tests/patterns/yaml/field_only.sgrep",
      "tests/patterns/yaml/field_only.yaml",
      "tests/patterns/yaml/metavar_array.sgrep",
      "tests/patterns/yaml/metavar_array.yaml",
      "tests/patterns/yaml/metavar_equality.sgrep",
      "tests/patterns/yaml/metavar_equality.yaml",
      "tests/patterns/yaml/metavar_field.sgrep",
      "tests/patterns/yaml/metavar_field.yaml",
      "tests/patterns/yaml/misc_double_id.sgrep",
      "tests/patterns/yaml/misc_double_id.yaml",
      "tests/patterns/yaml/misc_other_formats_braces.sgrep",
      "tests/patterns/yaml/misc_other_formats_braces.yaml",
      "tests/patterns/yaml/post_unicode.sgrep",
      "tests/patterns/yaml/post_unicode.yaml",
      "tests/patterns/yaml/semgrep/array.sgrep",
      "tests/patterns/yaml/semgrep/array_brackets.sgrep",
      "tests/patterns/yaml/semgrep/ellipses_only.sgrep",
      "tests/patterns/yaml/semgrep/ellipses_stress.sgrep",
      "tests/patterns/yaml/semgrep/field.sgrep",
      "tests/patterns/yaml/unicode.sgrep",
      "tests/patterns/yaml/unicode.yaml",
      "tests/patterns/yaml/yaml_rules/colleen.yaml",
      "tests/patterns/yaml/yaml_rules/kubernetes_ex.yml",
      "tests/patterns/yaml/yaml_rules/kubernetes_semgrep.yaml",
      "tests/patterns/yaml/yaml_rules/kubernetes_spacegrep.yaml",
      "tests/perf/OS.java",
      "tests/perf/ajin.yaml",
      "tests/perf/ajin2.yaml",
      "tests/perf/ajin2_semgrepcore.yaml",
      "tests/perf/benchmarking/netflix-slow-javascript.yml",
      "tests/perf/benchmarking/netflix-slow-python.yml",
      "tests/perf/bloom/BadLogClass.java",
      "tests/perf/bloom/ExampleErrorClass.java",
      "tests/perf/bloom/crlf-injection-logs.yaml",
      "tests/perf/bloom/crlf-injection-rule1.yaml",
      "tests/perf/bloom/l10000.js",
      "tests/perf/bloom/stmts-ellipsis.sgrep",
      "tests/perf/bloom/stmts-mv-ellipsis.sgrep",
      "tests/perf/ellipsis-js.sgrep",
      "tests/perf/ellipsis-python.sgrep",
      "tests/perf/ellipsis-slow-js.sgrep",
      "tests/perf/eq.sgrep",
      "tests/perf/force_timeout.py",
      "tests/perf/force_timeout.yaml",
      "tests/perf/java.sgrep",
      "tests/perf/java.yml",
      "tests/perf/l100.js",
      "tests/perf/l100.py",
      "tests/perf/l1000.js",
      "tests/perf/l1000.py",
      "tests/perf/l10000.js",
      "tests/perf/l10000.py",
      "tests/perf/my_first_calculator.py",
      "tests/perf/three.js",
      "tests/perf/timeout.js",
      "tests/perf/timeout.py",
      "tests/perf/timeout.sgrep",
      "tests/perf/timeout_gracefully.py",
      "tests/perf/timeout_gracefully.yaml",
      "tests/precommit_dogfooding/bandit.yml",
      "tests/precommit_dogfooding/python.yml",
      "tests/rule_formats/jwt-hardcode.rb",
      "tests/rule_formats/jwt-hardcode.yaml",
      "tests/rule_formats/jwt-hardcode1.jsonnet",
      "tests/rule_formats/jwt-hardcode2.jsonnet",
      "tests/rule_formats/new_syntax.json",
      "tests/rule_formats/new_syntax.jsonnet",
      "tests/rule_formats/new_syntax.yaml",
      "tests/rule_formats/new_syntax_basic.json",
      "tests/rule_formats/notes.txt",
      "tests/rule_formats/ok-rule-ids.yaml",
      "tests/rule_formats/string_pattern.json",
      "tests/rule_formats/string_pattern.jsonnet",
      "tests/rule_formats/string_pattern.yaml",
      "tests/rules/Makefile",
      "tests/rules/TEMPLATE.js",
      "tests/rules/TEMPLATE.yaml",
      "tests/rules/and_inside.mustache",
      "tests/rules/and_inside.yaml",
      "tests/rules/anywhere_global.py",
      "tests/rules/anywhere_global.yaml",
      "tests/rules/anywhere_include.c",
      "tests/rules/anywhere_include.yaml",
      "tests/rules/anywhere_metavar.py",
      "tests/rules/anywhere_metavar.yaml",
      "tests/rules/assign_in_cond_expr_cpp.cpp",
      "tests/rules/assign_in_cond_expr_cpp.yaml",
      "tests/rules/attributes_match_multiple.php",
      "tests/rules/attributes_match_multiple.yaml",
      "tests/rules/bitwise_metavar_compare.jl",
      "tests/rules/bitwise_metavar_compare.yaml",
      "tests/rules/c_array_inits.c",
      "tests/rules/c_array_inits.yaml",
      "tests/rules/capture_group_unification.py",
      "tests/rules/capture_group_unification.yaml",
      "tests/rules/cast_symbol_prop.go",
      "tests/rules/cast_symbol_prop.yaml",
      "tests/rules/compare-exposed-port.dockerfile",
      "tests/rules/compare-exposed-port.yaml",
      "tests/rules/cp_mults.py",
      "tests/rules/cp_mults.yaml",
      "tests/rules/cp_private_class_attr.java",
      "tests/rules/cp_private_class_attr.yaml",
      "tests/rules/cp_private_class_attr1.java",
      "tests/rules/cp_private_class_attr1.yaml",
      "tests/rules/cp_private_class_attr2.java",
      "tests/rules/cp_private_class_attr2.yaml",
      "tests/rules/cp_private_class_attr3.java",
      "tests/rules/cp_private_class_attr3.yaml",
      "tests/rules/cp_python_and_or.py",
      "tests/rules/cp_python_and_or.yaml",
      "tests/rules/cp_python_strings.py",
      "tests/rules/cp_python_strings.yaml",
      "tests/rules/cp_relevant_rule.js",
      "tests/rules/cp_relevant_rule.yaml",
      "tests/rules/cp_subtraction.go",
      "tests/rules/cp_subtraction.yaml",
      "tests/rules/cp_subtraction1.go",
      "tests/rules/cp_subtraction1.yaml",
      "tests/rules/cpp_array_inits.cpp",
      "tests/rules/cpp_array_inits.yaml",
      "tests/rules/ctor_cpp.cpp",
      "tests/rules/ctor_cpp.yaml",
      "tests/rules/date_comparison.py",
      "tests/rules/date_comparison.yaml",
      "tests/rules/decorated-field.ts",
      "tests/rules/decorated-field.yaml",
      "tests/rules/decorated_field_pattern.ts",
      "tests/rules/decorated_field_pattern.yaml",
      "tests/rules/decorated_match.py",
      "tests/rules/decorated_match.yaml",
      "tests/rules/deep_expr_xml.js",
      "tests/rules/deep_expr_xml.yaml",
      "tests/rules/defer-persistent-binding.py",
      "tests/rules/defer-persistent-binding.yaml",
      "tests/rules/df_scala_expr_block.scala",
      "tests/rules/df_scala_expr_block.yaml",
      "tests/rules/different_binding_locations.py",
      "tests/rules/different_binding_locations.yaml",
      "tests/rules/elixir_kwd_relevant_rule.ex",
      "tests/rules/elixir_kwd_relevant_rule.yaml",
      "tests/rules/ellipsis_metavar_template.js",
      "tests/rules/ellipsis_metavar_template.yaml",
      "tests/rules/ellipsis_stmts_deep.py",
      "tests/rules/ellipsis_stmts_deep.yaml",
      "tests/rules/ellipsis_stmts_deep1.ts",
      "tests/rules/ellipsis_stmts_deep1.yaml",
      "tests/rules/entropy_python.py",
      "tests/rules/entropy_python.yaml",
      "tests/rules/eval_not_in.py",
      "tests/rules/eval_not_in.yaml",
      "tests/rules/field_sensitive1.js",
      "tests/rules/field_sensitive1.yaml",
      "tests/rules/field_sensitive2.js",
      "tests/rules/field_sensitive2.yaml",
      "tests/rules/field_sensitive3.js",
      "tests/rules/field_sensitive3.yaml",
      "tests/rules/field_sensitive4.js",
      "tests/rules/field_sensitive4.yaml",
      "tests/rules/field_sensitive5.php",
      "tests/rules/field_sensitive5.yaml",
      "tests/rules/field_sensitive6.py",
      "tests/rules/field_sensitive6.yaml",
      "tests/rules/field_sensitive7.py",
      "tests/rules/field_sensitive7.yaml",
      "tests/rules/field_sensitive8.py",
      "tests/rules/field_sensitive8.yaml",
      "tests/rules/focus_metavariable.py",
      "tests/rules/focus_metavariable.yaml",
      "tests/rules/focus_metavariable1.py",
      "tests/rules/focus_metavariable1.yaml",
      "tests/rules/focus_metavariable2.py",
      "tests/rules/focus_metavariable2.yaml",
      "tests/rules/generic_dots_mvar.generic",
      "tests/rules/generic_dots_mvar.yaml",
      "tests/rules/generic_ignore_comments.generic",
      "tests/rules/generic_ignore_comments.yaml",
      "tests/rules/generic_multilines.generic",
      "tests/rules/generic_multilines.yaml",
      "tests/rules/generic_single_line_ellipsis.generic",
      "tests/rules/generic_single_line_ellipsis.yaml",
      "tests/rules/inception.yaml",
      "tests/rules/inception2.yaml",
      "tests/rules/inside.ejs",
      "tests/rules/inside.yaml",
      "tests/rules/inside_test.go",
      "tests/rules/inside_test.yaml",
      "tests/rules/js_constructor_naming.js",
      "tests/rules/js_constructor_naming.yaml",
      "tests/rules/js_no_ts.yaml",
      "tests/rules/julia_let_taint.jl",
      "tests/rules/julia_let_taint.yaml",
      "tests/rules/julia_typed_mvar.jl",
      "tests/rules/julia_typed_mvar.yaml",
      "tests/rules/kotlin_named_ellipsis.kt",
      "tests/rules/kotlin_named_ellipsis.yaml",
      "tests/rules/kotlin_slow_import.kt",
      "tests/rules/kotlin_slow_import.yaml",
      "tests/rules/labeled_propagators.py",
      "tests/rules/labeled_propagators.yaml",
      "tests/rules/macro_arg_taint.rs",
      "tests/rules/macro_arg_taint.yaml",
      "tests/rules/metavar_call.php",
      "tests/rules/metavar_call.yaml",
      "tests/rules/metavar_call_case_insensitive.php",
      "tests/rules/metavar_call_case_insensitive.yaml",
      "tests/rules/metavar_comparison_bitand.java",
      "tests/rules/metavar_comparison_bitand.yaml",
      "tests/rules/metavar_comparison_bitnot.java",
      "tests/rules/metavar_comparison_bitnot.yaml",
      "tests/rules/metavar_comparison_bitor.java",
      "tests/rules/metavar_comparison_bitor.yaml",
      "tests/rules/metavar_comparison_bitxor.java",
      "tests/rules/metavar_comparison_bitxor.yaml",
      "tests/rules/metavar_comparison_constness.c",
      "tests/rules/metavar_comparison_constness.yaml",
      "tests/rules/metavar_comparison_constness1.py",
      "tests/rules/metavar_comparison_constness1.yaml",
      "tests/rules/metavar_comparison_str.go",
      "tests/rules/metavar_comparison_str.yaml",
      "tests/rules/metavar_ellipsis_args_empty.rb",
      "tests/rules/metavar_ellipsis_args_empty.yaml",
      "tests/rules/metavar_ellipsis_xmls.html",
      "tests/rules/metavar_ellipsis_xmls.yaml",
      "tests/rules/metavar_pattern_dots_mvar.py",
      "tests/rules/metavar_pattern_dots_mvar.yaml",
      "tests/rules/metavar_pattern_either.js",
      "tests/rules/metavar_pattern_either.yaml",
      "tests/rules/metavar_pattern_fake_toks.php",
      "tests/rules/metavar_pattern_fake_toks.yaml",
      "tests/rules/metavar_pattern_fake_toks1.php",
      "tests/rules/metavar_pattern_fake_toks1.yaml",
      "tests/rules/metavar_pattern_generic.js",
      "tests/rules/metavar_pattern_generic.yaml",
      "tests/rules/metavar_pattern_generic_gibberish.js",
      "tests/rules/metavar_pattern_generic_gibberish.yaml",
      "tests/rules/metavar_pattern_lang.py",
      "tests/rules/metavar_pattern_lang.yaml",
      "tests/rules/metavar_pattern_lang1.py",
      "tests/rules/metavar_pattern_lang1.yaml",
      "tests/rules/metavar_pattern_lang2.generic",
      "tests/rules/metavar_pattern_lang2.yaml",
      "tests/rules/metavar_pattern_name.js",
      "tests/rules/metavar_pattern_name.yaml",
      "tests/rules/metavar_pattern_nested.py",
      "tests/rules/metavar_pattern_nested.yaml",
      "tests/rules/metavar_pattern_nested1.py",
      "tests/rules/metavar_pattern_nested1.yaml",
      "tests/rules/metavar_pattern_not.py",
      "tests/rules/metavar_pattern_not.yaml",
      "tests/rules/metavar_pattern_old_tls_versions.js",
      "tests/rules/metavar_pattern_old_tls_versions.yaml",
      "tests/rules/metavar_pattern_open_redirect.py",
      "tests/rules/metavar_pattern_open_redirect.yaml",
      "tests/rules/metavar_pattern_regex.generic",
      "tests/rules/metavar_pattern_regex.yaml",
      "tests/rules/metavar_pattern_regex1.js",
      "tests/rules/metavar_pattern_regex1.yaml",
      "tests/rules/metavar_pattern_regex2.js",
      "tests/rules/metavar_pattern_regex2.yaml",
      "tests/rules/metavar_pattern_regex3.js",
      "tests/rules/metavar_pattern_regex3.yaml",
      "tests/rules/metavar_pattern_regex4.js",
      "tests/rules/metavar_pattern_regex4.yaml",
      "tests/rules/metavar_regex_and.js",
      "tests/rules/metavar_regex_and.yaml",
      "tests/rules/metavar_regex_capture.py",
      "tests/rules/metavar_regex_capture.yaml",
      "tests/rules/metavar_regex_id.js",
      "tests/rules/metavar_regex_id.yaml",
      "tests/rules/metavar_regex_include.php",
      "tests/rules/metavar_regex_include.yaml",
      "tests/rules/metavar_regex_scope.py",
      "tests/rules/metavar_regex_scope.yaml",
      "tests/rules/metavar_regex_scope2.py",
      "tests/rules/metavar_regex_scope2.yaml",
      "tests/rules/metavar_regex_scope3.py",
      "tests/rules/metavar_regex_scope3.yaml",
      "tests/rules/metavar_regex_scope4.py",
      "tests/rules/metavar_regex_scope4.yaml",
      "tests/rules/metavar_template_type_arg.cpp",
      "tests/rules/metavar_template_type_arg.yaml",
      "tests/rules/metavar_type_func_param_julia.jl",
      "tests/rules/metavar_type_func_param_julia.yaml",
      "tests/rules/metavar_type_multi_types_cpp.cpp",
      "tests/rules/metavar_type_multi_types_cpp.yaml",
      "tests/rules/metavar_type_non_prim_php.php",
      "tests/rules/metavar_type_non_prim_php.yaml",
      "tests/rules/metavar_type_not_csharp.cs",
      "tests/rules/metavar_type_not_csharp.yaml",
      "tests/rules/metavar_type_not_go.go",
      "tests/rules/metavar_type_not_go.yaml",
      "tests/rules/metavar_type_not_java.java",
      "tests/rules/metavar_type_not_java.yaml",
      "tests/rules/metavar_type_not_kotlin.kt",
      "tests/rules/metavar_type_not_kotlin.yaml",
      "tests/rules/metavar_type_not_rust.rs",
      "tests/rules/metavar_type_not_rust.yaml",
      "tests/rules/metavar_type_not_scala.scala",
      "tests/rules/metavar_type_not_scala.yaml",
      "tests/rules/metavar_type_not_typescript.ts",
      "tests/rules/metavar_type_not_typescript.yaml",
      "tests/rules/metavar_type_simple_c.c",
      "tests/rules/metavar_type_simple_c.yaml",
      "tests/rules/metavar_type_simple_cpp.cpp",
      "tests/rules/metavar_type_simple_cpp.yaml",
      "tests/rules/metavar_type_str_eq_java.java",
      "tests/rules/metavar_type_str_eq_java.yaml",
      "tests/rules/metavar_type_str_eq_php.php",
      "tests/rules/metavar_type_str_eq_php.yaml",
      "tests/rules/metavar_type_str_eq_python.py",
      "tests/rules/metavar_type_str_eq_python.yaml",
      "tests/rules/metavar_unification.json",
      "tests/rules/metavar_unification.yaml",
      "tests/rules/metavariable_name_resolution.java",
      "tests/rules/metavariable_name_resolution.yaml",
      "tests/rules/metavariable_object_type.ts",
      "tests/rules/metavariable_object_type.yaml",
      "tests/rules/metavariable_pattern_either_unif.js",
      "tests/rules/metavariable_pattern_either_unif.yaml",
      "tests/rules/metavariable_pattern_keep_env.js",
      "tests/rules/metavariable_pattern_keep_env.yaml",
      "tests/rules/metavariable_pattern_php.php",
      "tests/rules/metavariable_pattern_php.yaml",
      "tests/rules/metavariable_pattern_recursive_def.js",
      "tests/rules/metavariable_pattern_recursive_def.yaml",
      "tests/rules/misc_deep_metavar.ts",
      "tests/rules/misc_deep_metavar.yaml",
      "tests/rules/misc_eval_nothandle.py",
      "tests/rules/misc_eval_nothandle.yaml",
      "tests/rules/misc_field.js",
      "tests/rules/misc_field.yaml",
      "tests/rules/misc_macro_call.rs",
      "tests/rules/misc_macro_call.yaml",
      "tests/rules/misc_name_and_neg.java",
      "tests/rules/misc_name_and_neg.yaml",
      "tests/rules/misc_php_new.php",
      "tests/rules/misc_php_new.yaml",
      "tests/rules/misc_php_new_taint.php",
      "tests/rules/misc_php_new_taint.yaml",
      "tests/rules/misc_terraform1.tf",
      "tests/rules/misc_terraform1.yaml",
      "tests/rules/misc_tpl_is_php.tpl",
      "tests/rules/misc_tpl_is_php.yaml",
      "tests/rules/misc_var_is_var.js",
      "tests/rules/misc_var_is_var.yaml",
      "tests/rules/naming_class_attribute.java",
      "tests/rules/naming_class_attribute.yaml",
      "tests/rules/negation_exact.js",
      "tests/rules/negation_exact.yaml",
      "tests/rules/no_fatal_error_with_xxx_equal.js",
      "tests/rules/no_fatal_error_with_xxx_equal.yaml",
      "tests/rules/non_irrelevant_rule.java",
      "tests/rules/non_irrelevant_rule.yaml",
      "tests/rules/not_found_exn.go",
      "tests/rules/not_found_exn.yaml",
      "tests/rules/not_found_exn2.py",
      "tests/rules/not_found_exn2.yaml",
      "tests/rules/numeric_regex_capture_groups.py",
      "tests/rules/numeric_regex_capture_groups.yaml",
      "tests/rules/option_ac_matching.php",
      "tests/rules/option_ac_matching.yaml",
      "tests/rules/option_attr_expr_false.py",
      "tests/rules/option_attr_expr_false.yaml",
      "tests/rules/option_attr_expr_true.py",
      "tests/rules/option_attr_expr_true.yaml",
      "tests/rules/option_attr_expr_true1.py",
      "tests/rules/option_attr_expr_true1.yaml",
      "tests/rules/option_commutative_compop.php",
      "tests/rules/option_commutative_compop.yaml",
      "tests/rules/option_fielddef_assign_arrow.js",
      "tests/rules/option_fielddef_assign_arrow.yaml",
      "tests/rules/option_implicit_exprstmt.dockerfile",
      "tests/rules/option_implicit_exprstmt.yaml",
      "tests/rules/option_xml_attr_implicit_ellipsis.js",
      "tests/rules/option_xml_attr_implicit_ellipsis.yaml",
      "tests/rules/option_xml_children_ordered.xml",
      "tests/rules/option_xml_children_ordered.yaml",
      "tests/rules/option_xml_singleton.js",
      "tests/rules/option_xml_singleton.yaml",
      "tests/rules/parse_pattern_as_stmt.ts",
      "tests/rules/parse_pattern_as_stmt.yaml",
      "tests/rules/pattern-either-one-general.py",
      "tests/rules/pattern-either-one-general.yaml",
      "tests/rules/pattern-inside-range.py",
      "tests/rules/pattern-inside-range.yaml",
      "tests/rules/pattern-regex.py",
      "tests/rules/pattern-regex.yaml",
      "tests/rules/pattern-x-1.py",
      "tests/rules/pattern-x-1.yaml",
      "tests/rules/pattern-x-2.py",
      "tests/rules/pattern-x-2.yaml",
      "tests/rules/pattern-x-3.py",
      "tests/rules/pattern-x-3.yaml",
      "tests/rules/pattern-x-4.py",
      "tests/rules/pattern-x-4.yaml",
      "tests/rules/pattern-x-bug.py",
      "tests/rules/pattern-x-bug.yaml",
      "tests/rules/pattern-x.js",
      "tests/rules/pattern-x.yaml",
      "tests/rules/pattern_int.py",
      "tests/rules/pattern_int.yaml",
      "tests/rules/pattern_not_regex.html",
      "tests/rules/pattern_not_regex.yaml",
      "tests/rules/pattern_not_regex1.txt",
      "tests/rules/pattern_not_regex1.yaml",
      "tests/rules/pattern_regex_inside.py",
      "tests/rules/pattern_regex_inside.yaml",
      "tests/rules/persistent_metavariable_pattern.py",
      "tests/rules/persistent_metavariable_pattern.yaml",
      "tests/rules/persistent_metavariable_pattern2.py",
      "tests/rules/persistent_metavariable_pattern2.yaml",
      "tests/rules/pow_metavar_comparison.py",
      "tests/rules/pow_metavar_comparison.yaml",
      "tests/rules/prometheus_long_duration_promql.test.yaml",
      "tests/rules/prometheus_long_duration_promql.yaml",
      "tests/rules/propagator_labels.py",
      "tests/rules/propagator_labels.yaml",
      "tests/rules/quotes.test.yaml",
      "tests/rules/quotes.yaml",
      "tests/rules/record_any.js",
      "tests/rules/record_any.yaml",
      "tests/rules/record_empty.js",
      "tests/rules/record_empty.yaml",
      "tests/rules/record_field_ellipsis.js",
      "tests/rules/record_field_ellipsis.yaml",
      "tests/rules/record_mixed.js",
      "tests/rules/record_mixed.yaml",
      "tests/rules/record_one_field.js",
      "tests/rules/record_one_field.yaml",
      "tests/rules/record_one_spread.js",
      "tests/rules/record_one_spread.yaml",
      "tests/rules/record_spread_ellipsis.js",
      "tests/rules/record_spread_ellipsis.yaml",
      "tests/rules/redos_python.py",
      "tests/rules/redos_python.yaml",
      "tests/rules/regex_capture_groups.py",
      "tests/rules/regex_capture_groups.yaml",
      "tests/rules/regexp_capture_empty_group.gem",
      "tests/rules/regexp_capture_empty_group.yaml",
      "tests/rules/regexp_capture_groups.gem",
      "tests/rules/regexp_capture_groups.yaml",
      "tests/rules/regexp_multiline_mode.txt",
      "tests/rules/regexp_multiline_mode.yaml",
      "tests/rules/regression_uniq_or_ellipsis.go",
      "tests/rules/regression_uniq_or_ellipsis.yaml",
      "tests/rules/relevant_rule_badutf8.js",
      "tests/rules/relevant_rule_badutf8.yaml",
      "tests/rules/resolved_metavariables.js",
      "tests/rules/resolved_metavariables.yaml",
      "tests/rules/rule_extensions.py",
      "tests/rules/rule_extensions.yaml",
      "tests/rules/rust_macro_token_args.rs",
      "tests/rules/rust_macro_token_args.yaml",
      "tests/rules/settings.js",
      "tests/rules/settings.yaml",
      "tests/rules/skip_list.txt",
      "tests/rules/spacegrep_metavarbug.dockerfile",
      "tests/rules/spacegrep_metavarbug.yaml",
      "tests/rules/string_in_comparison.py",
      "tests/rules/string_in_comparison.yaml",
      "tests/rules/string_mvar_julia.jl",
      "tests/rules/string_mvar_julia.yaml",
      "tests/rules/swift_lambda_taint.swift",
      "tests/rules/swift_lambda_taint.yaml",
      "tests/rules/sym_prop_chain.py",
      "tests/rules/sym_prop_chain.yaml",
      "tests/rules/sym_prop_class_attr.java",
      "tests/rules/sym_prop_class_attr.yaml",
      "tests/rules/sym_prop_deep.java",
      "tests/rules/sym_prop_deep.yaml",
      "tests/rules/sym_prop_exp.js",
      "tests/rules/sym_prop_exp.yaml",
      "tests/rules/sym_prop_exp_no_propagate.js",
      "tests/rules/sym_prop_exp_no_propagate.yaml",
      "tests/rules/sym_prop_explosion.js",
      "tests/rules/sym_prop_explosion.yaml",
      "tests/rules/sym_prop_lhs_exp.py",
      "tests/rules/sym_prop_lhs_exp.yaml",
      "tests/rules/sym_prop_merge.py",
      "tests/rules/sym_prop_merge.yaml",
      "tests/rules/sym_prop_merge1.java",
      "tests/rules/sym_prop_merge1.yaml",
      "tests/rules/sym_prop_merge2.java",
      "tests/rules/sym_prop_merge2.yaml",
      "tests/rules/sym_prop_new.java",
      "tests/rules/sym_prop_new.yaml",
      "tests/rules/sym_prop_no_cycle.py",
      "tests/rules/sym_prop_no_cycle.yaml",
      "tests/rules/sym_prop_no_cycle1.js",
      "tests/rules/sym_prop_no_cycle1.yaml",
      "tests/rules/sym_prop_no_merge.py",
      "tests/rules/sym_prop_no_merge.yaml",
      "tests/rules/sym_prop_no_merge1.go",
      "tests/rules/sym_prop_no_merge1.yaml",
      "tests/rules/sym_prop_no_merge2.py",
      "tests/rules/sym_prop_no_merge2.yaml",
      "tests/rules/sym_prop_non_constant_exp.js",
      "tests/rules/sym_prop_non_constant_exp.yaml",
      "tests/rules/sym_prop_non_literal.java",
      "tests/rules/sym_prop_non_literal.yaml",
      "tests/rules/sym_prop_open_redirect.py",
      "tests/rules/sym_prop_open_redirect.yaml",
      "tests/rules/sym_prop_react.js",
      "tests/rules/sym_prop_react.yaml",
      "tests/rules/sym_prop_redundancy.py",
      "tests/rules/sym_prop_redundancy.yaml",
      "tests/rules/sym_prop_string_eq.py",
      "tests/rules/sym_prop_string_eq.yaml",
      "tests/rules/taint-general-source-sink.js",
      "tests/rules/taint-general-source-sink.yaml",
      "tests/rules/taint_array.py",
      "tests/rules/taint_array.yaml",
      "tests/rules/taint_assign_record.ts",
      "tests/rules/taint_assign_record.yaml",
      "tests/rules/taint_assign_record1.ts",
      "tests/rules/taint_assign_record1.yaml",
      "tests/rules/taint_assign_record2.js",
      "tests/rules/taint_assign_record2.yaml",
      "tests/rules/taint_assume_safe_booleans.py",
      "tests/rules/taint_assume_safe_booleans.yaml",
      "tests/rules/taint_assume_safe_booleans1.java",
      "tests/rules/taint_assume_safe_booleans1.yaml",
      "tests/rules/taint_assume_safe_funcs.php",
      "tests/rules/taint_assume_safe_funcs.yaml",
      "tests/rules/taint_assume_safe_indexes.py",
      "tests/rules/taint_assume_safe_indexes.yaml",
      "tests/rules/taint_assume_safe_numbers.py",
      "tests/rules/taint_assume_safe_numbers.yaml",
      "tests/rules/taint_assume_safe_numbers1.java",
      "tests/rules/taint_assume_safe_numbers1.yaml",
      "tests/rules/taint_assume_safe_numbers2.php",
      "tests/rules/taint_assume_safe_numbers2.yaml",
      "tests/rules/taint_async.py",
      "tests/rules/taint_async.yaml",
      "tests/rules/taint_basic.py",
      "tests/rules/taint_basic.yaml",
      "tests/rules/taint_best_fit_sink.py",
      "tests/rules/taint_best_fit_sink.yaml",
      "tests/rules/taint_best_fit_sink1.php",
      "tests/rules/taint_best_fit_sink1.yaml",
      "tests/rules/taint_best_fit_sink2.py",
      "tests/rules/taint_best_fit_sink2.yaml",
      "tests/rules/taint_best_fit_sink3.py",
      "tests/rules/taint_best_fit_sink3.yaml",
      "tests/rules/taint_best_fit_sink4.php",
      "tests/rules/taint_best_fit_sink4.yaml",
      "tests/rules/taint_best_fit_sink5.java",
      "tests/rules/taint_best_fit_sink5.yaml",
      "tests/rules/taint_best_fit_sink6.java",
      "tests/rules/taint_best_fit_sink6.yaml",
      "tests/rules/taint_by_side_effect_lhs.py",
      "tests/rules/taint_by_side_effect_lhs.yaml",
      "tests/rules/taint_control.py",
      "tests/rules/taint_control.yaml",
      "tests/rules/taint_cpp_for_each.cpp",
      "tests/rules/taint_cpp_for_each.yaml",
      "tests/rules/taint_cpp_ptr_field.cpp",
      "tests/rules/taint_cpp_ptr_field.yaml",
      "tests/rules/taint_decl_in_if_cond.cpp",
      "tests/rules/taint_decl_in_if_cond.yaml",
      "tests/rules/taint_decl_in_while_cond.cpp",
      "tests/rules/taint_decl_in_while_cond.yaml",
      "tests/rules/taint_exact_sanitizer.py",
      "tests/rules/taint_exact_sanitizer.yaml",
      "tests/rules/taint_exact_sources.py",
      "tests/rules/taint_exact_sources.yaml",
      "tests/rules/taint_exception.py",
      "tests/rules/taint_exception.yaml",
      "tests/rules/taint_final_globals.java",
      "tests/rules/taint_final_globals.yaml",
      "tests/rules/taint_final_globals1.js",
      "tests/rules/taint_final_globals1.yaml",
      "tests/rules/taint_final_globals2.java",
      "tests/rules/taint_final_globals2.yaml",
      "tests/rules/taint_flask.py",
      "tests/rules/taint_flask.yaml",
      "tests/rules/taint_foreach.java",
      "tests/rules/taint_foreach.yaml",
      "tests/rules/taint_foreach1.scala",
      "tests/rules/taint_foreach1.yaml",
      "tests/rules/taint_get_set_sensitivity.java",
      "tests/rules/taint_get_set_sensitivity.yaml",
      "tests/rules/taint_get_set_sensitivity1.java",
      "tests/rules/taint_get_set_sensitivity1.yaml",
      "tests/rules/taint_if_cond_sink.c",
      "tests/rules/taint_if_cond_sink.yaml",
      "tests/rules/taint_implicit_return.rs",
      "tests/rules/taint_implicit_return.yaml",
      "tests/rules/taint_imported_func.py",
      "tests/rules/taint_imported_func.yaml",
      "tests/rules/taint_labels.py",
      "tests/rules/taint_labels.yaml",
      "tests/rules/taint_labels1.py",
      "tests/rules/taint_labels1.yaml",
      "tests/rules/taint_labels2.py",
      "tests/rules/taint_labels2.yaml",
      "tests/rules/taint_labels3.py",
      "tests/rules/taint_labels3.yaml",
      "tests/rules/taint_labels4.py",
      "tests/rules/taint_labels4.yaml",
      "tests/rules/taint_labels5.py",
      "tests/rules/taint_labels5.yaml",
      "tests/rules/taint_labels6.py",
      "tests/rules/taint_labels6.yaml",
      "tests/rules/taint_labels7.py",
      "tests/rules/taint_labels7.yaml",
      "tests/rules/taint_labels_empty.go",
      "tests/rules/taint_labels_empty.yaml",
      "tests/rules/taint_labels_rec.rs",
      "tests/rules/taint_labels_rec.yaml",
      "tests/rules/taint_lambda.js",
      "tests/rules/taint_lambda.yaml",
      "tests/rules/taint_lambda1.java",
      "tests/rules/taint_lambda1.yaml",
      "tests/rules/taint_lambda_cpp.cpp",
      "tests/rules/taint_lambda_cpp.yaml",
      "tests/rules/taint_match_on_source.py",
      "tests/rules/taint_match_on_source.yaml",
      "tests/rules/taint_no_builtin_props.py",
      "tests/rules/taint_no_builtin_props.yaml",
      "tests/rules/taint_no_builtin_props1.py",
      "tests/rules/taint_no_builtin_props1.yaml",
      "tests/rules/taint_no_builtin_props2.py",
      "tests/rules/taint_no_builtin_props2.yaml",
      "tests/rules/taint_not_conflicting_sanitizer.php",
      "tests/rules/taint_not_conflicting_sanitizer.yaml",
      "tests/rules/taint_not_conflicting_sanitizer1.php",
      "tests/rules/taint_not_conflicting_sanitizer1.yaml",
      "tests/rules/taint_obj_fields.kt",
      "tests/rules/taint_obj_fields.yaml",
      "tests/rules/taint_object_destructure.js",
      "tests/rules/taint_object_destructure.yaml",
      "tests/rules/taint_param_default.py",
      "tests/rules/taint_param_default.yaml",
      "tests/rules/taint_param_pattern.rs",
      "tests/rules/taint_param_pattern.yaml",
      "tests/rules/taint_param_source.py",
      "tests/rules/taint_param_source.yaml",
      "tests/rules/taint_param_source1.js",
      "tests/rules/taint_param_source1.yaml",
      "tests/rules/taint_param_source2.ts",
      "tests/rules/taint_param_source2.yaml",
      "tests/rules/taint_propagator.py",
      "tests/rules/taint_propagator.yaml",
      "tests/rules/taint_propagator1.js",
      "tests/rules/taint_propagator1.yaml",
      "tests/rules/taint_propagator2.py",
      "tests/rules/taint_propagator2.yaml",
      "tests/rules/taint_propagator3.py",
      "tests/rules/taint_propagator3.yaml",
      "tests/rules/taint_propagator4.java",
      "tests/rules/taint_propagator4.yaml",
      "tests/rules/taint_propagator_by_side_effect_false.php",
      "tests/rules/taint_propagator_by_side_effect_false.yaml",
      "tests/rules/taint_propagator_by_side_effect_false1.php",
      "tests/rules/taint_propagator_by_side_effect_false1.yaml",
      "tests/rules/taint_propagator_lambda.java",
      "tests/rules/taint_propagator_lambda.yaml",
      "tests/rules/taint_propagator_lambda1.py",
      "tests/rules/taint_propagator_lambda1.yaml",
      "tests/rules/taint_propagator_lambda2.js",
      "tests/rules/taint_propagator_lambda2.yaml",
      "tests/rules/taint_react.js",
      "tests/rules/taint_react.yaml",
      "tests/rules/taint_return_expr.scala",
      "tests/rules/taint_return_expr.yaml",
      "tests/rules/taint_return_expr_fn_sink.scala",
      "tests/rules/taint_return_expr_fn_sink.yaml",
      "tests/rules/taint_ruby_concat.rb",
      "tests/rules/taint_ruby_concat.yaml",
      "tests/rules/taint_ruby_hash_elem_ref.rb",
      "tests/rules/taint_ruby_hash_elem_ref.yaml",
      "tests/rules/taint_ruby_if_expr.rb",
      "tests/rules/taint_ruby_if_expr.yaml",
      "tests/rules/taint_rust_returns.rs",
      "tests/rules/taint_rust_returns.yaml",
      "tests/rules/taint_safe_comparisons.py",
      "tests/rules/taint_safe_comparisons.yaml",
      "tests/rules/taint_sanitizer_var.py",
      "tests/rules/taint_sanitizer_var.yaml",
      "tests/rules/taint_source_var.py",
      "tests/rules/taint_source_var.yaml",
      "tests/rules/taint_source_var1.py",
      "tests/rules/taint_source_var1.yaml",
      "tests/rules/taint_splat.py",
      "tests/rules/taint_splat.yaml",
      "tests/rules/taint_spread_record_big.js",
      "tests/rules/taint_spread_record_big.yaml",
      "tests/rules/taint_spread_record_small.js",
      "tests/rules/taint_spread_record_small.yaml",
      "tests/rules/taint_this.js",
      "tests/rules/taint_this.yaml",
      "tests/rules/taint_this1.java",
      "tests/rules/taint_this1.yaml",
      "tests/rules/taint_typestate.py",
      "tests/rules/taint_typestate.yaml",
      "tests/rules/taint_typestate1.py",
      "tests/rules/taint_typestate1.yaml",
      "tests/rules/taint_typestate2.cpp",
      "tests/rules/taint_typestate2.yaml",
      "tests/rules/taint_typestate3.cpp",
      "tests/rules/taint_typestate3.yaml",
      "tests/rules/taint_unify_mvars.js",
      "tests/rules/taint_unify_mvars.yaml",
      "tests/rules/taint_union_mvars.js",
      "tests/rules/taint_union_mvars.yaml",
      "tests/rules/taint_unsafe_block.rs",
      "tests/rules/taint_unsafe_block.yaml",
      "tests/rules/taint_wo_side_effects.php",
      "tests/rules/taint_wo_side_effects.yaml",
      "tests/rules/taint_wo_side_effects1.php",
      "tests/rules/taint_wo_side_effects1.yaml",
      "tests/rules/taint_wo_side_effects2.php",
      "tests/rules/taint_wo_side_effects2.yaml",
      "tests/rules/tainted-file-path.java",
      "tests/rules/tainted-file-path.yaml",
      "tests/rules/tainted-filename.php",
      "tests/rules/tainted-filename.yaml",
      "tests/rules/tainted_pattern_lval.rs",
      "tests/rules/tainted_pattern_lval.yaml",
      "tests/rules/terraform_block_sink.tf",
      "tests/rules/terraform_block_sink.yaml",
      "tests/rules/terraform_coercions.tf",
      "tests/rules/terraform_coercions.yaml",
      "tests/rules/terraform_metavariable.tf",
      "tests/rules/terraform_metavariable.yaml",
      "tests/rules/terraform_nested_yaml.tf",
      "tests/rules/terraform_nested_yaml.yaml",
      "tests/rules/top_level_sym_prop.py",
      "tests/rules/top_level_sym_prop.yaml",
      "tests/rules/ts_decorated_async_property.ts",
      "tests/rules/ts_decorated_async_property.yaml",
      "tests/rules/ts_decorated_static_property.ts",
      "tests/rules/ts_decorated_static_property.yaml",
      "tests/rules/typed_metavar_metavar_regex.go",
      "tests/rules/typed_metavar_metavar_regex.yaml",
      "tests/rules/typed_metavar_not.java",
      "tests/rules/typed_metavar_not.yaml",
      "tests/rules/typed_metavar_not_rust.rs",
      "tests/rules/typed_metavar_not_rust.yaml",
      "tests/rules/unicode_string.py",
      "tests/rules/unicode_string.yaml",
      "tests/rules/vardef_assign_false.js",
      "tests/rules/vardef_assign_false.yaml",
      "tests/rules/vardef_assign_false1.js",
      "tests/rules/vardef_assign_false1.yaml",
      "tests/rules/vardef_assign_true.js",
      "tests/rules/vardef_assign_true.yaml",
      "tests/rules/vardef_assign_true1.js",
      "tests/rules/vardef_assign_true1.yaml",
      "tests/rules/vardef_assign_true2.js",
      "tests/rules/vardef_assign_true2.yaml",
      "tests/rules/whole_file.tf",
      "tests/rules/whole_file.yaml",
      "tests/rules/xml_metavar_comp.xml",
      "tests/rules/xml_metavar_comp.yaml",
      "tests/rules/xml_metavar_comp2.xml",
      "tests/rules/xml_metavar_comp2.yaml",
      "tests/rules/yaml_metavariable_pattern.test.yaml",
      "tests/rules/yaml_metavariable_pattern.yaml",
      "tests/rules/yaml_on_yaml.test.yaml",
      "tests/rules/yaml_on_yaml.yaml",
      "tests/rules_v2/anywhere_global.py",
      "tests/rules_v2/anywhere_global.yaml",
      "tests/rules_v2/anywhere_include.c",
      "tests/rules_v2/anywhere_include.yaml",
      "tests/rules_v2/anywhere_metavar.py",
      "tests/rules_v2/anywhere_metavar.yaml",
      "tests/rules_v2/go_grouped_arguments.go",
      "tests/rules_v2/go_grouped_arguments.yaml",
      "tests/rules_v2/metavar_cond.py",
      "tests/rules_v2/metavar_cond.yaml",
      "tests/rules_v2/metavar_cond2.py",
      "tests/rules_v2/metavar_cond2.yaml",
      "tests/rules_v2/metavar_cond_octal.go",
      "tests/rules_v2/metavar_cond_octal.yaml",
      "tests/rules_v2/metavar_ellipsis_param.go",
      "tests/rules_v2/metavar_ellipsis_param.yaml",
      "tests/rules_v2/metavar_regex.py",
      "tests/rules_v2/metavar_regex.yaml",
      "tests/rules_v2/metavar_type_multi_types_rule20_cpp.cpp",
      "tests/rules_v2/metavar_type_multi_types_rule20_cpp.yaml",
      "tests/rules_v2/metavar_type_rule20.java",
      "tests/rules_v2/metavar_type_rule20.yaml",
      "tests/rules_v2/negation_ajin.py",
      "tests/rules_v2/negation_ajin.yaml",
      "tests/rules_v2/new_syntax.py",
      "tests/rules_v2/new_syntax.yaml",
      "tests/rules_v2/new_syntax_taint.py",
      "tests/rules_v2/new_syntax_taint.yaml",
      "tests/rules_v2/new_syntax_taint_no_mode.py",
      "tests/rules_v2/new_syntax_taint_no_mode.yaml",
      "tests/rules_v2/regexp.py",
      "tests/rules_v2/regexp.yaml",
      "tests/rules_v2/regexp_nomatch.py",
      "tests/rules_v2/regexp_nomatch.yaml",
      "tests/semgrep-core-e2e/targets/basic.py",
      "tests/semgrep-core-e2e/targets.json",
      "tests/semgrep-core-e2e/test_target_file.py",
      "tests/semgrep_output/cli_output/cli_output1.json",
      "tests/semgrep_output/cli_output/cli_test_basic.TODO",
      "tests/semgrep_output/cli_output/cli_test_yaml_language.TODO",
      "tests/semgrep_output/cli_output/debug.TODO",
      "tests/semgrep_output/cli_output/dependency_aware.json",
      "tests/semgrep_output/cli_output/fix_regexp.json",
      "tests/semgrep_output/cli_output/invalid_rule.json",
      "tests/semgrep_output/cli_output/no_fingerprint.TODO",
      "tests/semgrep_output/cli_output/optional_offset.TODO",
      "tests/semgrep_output/cli_output/rule_id_and_spans.json",
      "tests/semgrep_output/cli_output/semgrep_ignore_report.TODO",
      "tests/semgrep_output/cli_output/skipped.json",
      "tests/semgrep_output/cli_output/timing.json",
      "tests/semgrep_output/core_output/core_output1.json",
      "tests/semgrep_output/scans_output/findings.json",
      "tests/syntax_v2/anywhere.yaml",
      "tests/syntax_v2/depends_on.yaml",
      "tests/syntax_v2/depends_on_either.yaml",
      "tests/syntax_v2/extract.yaml",
      "tests/syntax_v2/fix.yaml",
      "tests/syntax_v2/labeled_propagators.yaml",
      "tests/syntax_v2/match.yaml",
      "tests/syntax_v2/metadata.yaml",
      "tests/syntax_v2/metadata_supply_chain.yaml",
      "tests/syntax_v2/min_version.yaml",
      "tests/syntax_v2/not_formula.yaml",
      "tests/syntax_v2/options.yaml",
      "tests/syntax_v2/options_aliengrep.yaml",
      "tests/syntax_v2/options_comments.yaml",
      "tests/syntax_v2/steps.yaml",
      "tests/syntax_v2/taint.yaml",
      "tests/syntax_v2/taint_labels.yaml",
      "tests/syntax_v2/validators.yaml",
      "tests/syntax_v2/where_comparison.yaml",
      "tests/syntax_v2/where_formula.yaml",
      "tests/syntax_v2/where_formula_language.yaml",
      "tests/syntax_v2/where_regex.yaml",
      "tests/syntax_v2/where_regex_constprop.yaml",
      "tests/syntax_v2/where_type.yaml",
      "tests/syntax_v2/where_types.yaml",
      "tests/synthesizing/arrays_and_funcs.py",
      "tests/synthesizing/equal_size_assign_to_arg.py",
      "tests/synthesizing/ex1.py",
      "tests/synthesizing/ex2.py",
      "tests/synthesizing/ex_stmts1.py",
      "tests/synthesizing/exact_match.java",
      "tests/synthesizing/import_as.py",
      "tests/synthesizing/set_cookie.py",
      "tests/synthesizing/targets/addition_constant.py",
      "tests/synthesizing/targets/equal_length_assign_call.js",
      "tests/synthesizing/targets/equal_length_assign_call.py",
      "tests/synthesizing/targets/hello.py",
      "tests/synthesizing/targets/string_ellipsis.py",
      "tests/synthesizing/targets/unequal_length_assign_call.js",
      "tests/synthesizing/targets/vardef.js",
      "tests/synthesizing/typed_funcs.java",
      "tests/taint_maturity/c/taint_if.c",
      "tests/taint_maturity/c/taint_if.yaml",
      "tests/taint_maturity/c/taint_seq.c",
      "tests/taint_maturity/c/taint_seq.yaml",
      "tests/taint_maturity/csharp/taint_if.cs",
      "tests/taint_maturity/csharp/taint_if.yaml",
      "tests/taint_maturity/csharp/taint_seq.cs",
      "tests/taint_maturity/csharp/taint_seq.yaml",
      "tests/taint_maturity/elixir/taint_if.ex",
      "tests/taint_maturity/elixir/taint_if.yaml",
      "tests/taint_maturity/elixir/taint_seq.ex",
      "tests/taint_maturity/elixir/taint_seq.yaml",
      "tests/taint_maturity/java/taint_if.java",
      "tests/taint_maturity/java/taint_if.yaml",
      "tests/taint_maturity/java/taint_seq.java",
      "tests/taint_maturity/java/taint_seq.yaml",
      "tests/taint_maturity/php/taint_if.php",
      "tests/taint_maturity/php/taint_if.yaml",
      "tests/taint_maturity/php/taint_seq.php",
      "tests/taint_maturity/php/taint_seq.yaml",
      "tests/taint_maturity/python/taint_if.py",
      "tests/taint_maturity/python/taint_if.yaml",
      "tests/taint_maturity/python/taint_seq.py",
      "tests/taint_maturity/python/taint_seq.yaml",
      "tests/tainting_rules/go/command-injection.go",
      "tests/tainting_rules/go/command-injection.yaml",
      "tests/tainting_rules/go/continue.go",
      "tests/tainting_rules/go/continue.yaml",
      "tests/tainting_rules/go/goto_dead_code.go",
      "tests/tainting_rules/go/goto_dead_code.yaml",
      "tests/tainting_rules/go/make.go",
      "tests/tainting_rules/go/make.yaml",
      "tests/tainting_rules/go/nobuiltin.go",
      "tests/tainting_rules/go/nobuiltin.yaml",
      "tests/tainting_rules/go/switch.go",
      "tests/tainting_rules/go/switch.yaml",
      "tests/tainting_rules/go/switch_no_scrutinee.go",
      "tests/tainting_rules/go/switch_no_scrutinee.yaml",
      "tests/tainting_rules/go/token_labels.go",
      "tests/tainting_rules/go/token_labels.yaml",
      "tests/tainting_rules/go/zip-traversal.go",
      "tests/tainting_rules/go/zip-traversal.yaml",
      "tests/tainting_rules/java/tainted_args.java",
      "tests/tainting_rules/java/tainted_args.yaml",
      "tests/tainting_rules/java/try_return.java",
      "tests/tainting_rules/java/try_return.yaml",
      "tests/tainting_rules/js/await.js",
      "tests/tainting_rules/js/await.yaml",
      "tests/tainting_rules/js/call_chain.js",
      "tests/tainting_rules/js/call_chain.yaml",
      "tests/tainting_rules/js/eslint_obj_inj.js",
      "tests/tainting_rules/js/eslint_obj_inj.yaml",
      "tests/tainting_rules/js/everything_source.js",
      "tests/tainting_rules/js/everything_source.yaml",
      "tests/tainting_rules/js/everything_source1.js",
      "tests/tainting_rules/js/everything_source1.yaml",
      "tests/tainting_rules/js/metavar_eq_conditional.js",
      "tests/tainting_rules/js/metavar_eq_conditional.yaml",
      "tests/tainting_rules/js/metavar_eq_simple.js",
      "tests/tainting_rules/js/metavar_eq_simple.yaml",
      "tests/tainting_rules/js/nested_function.js",
      "tests/tainting_rules/js/nested_function.yaml",
      "tests/tainting_rules/js/sanitized_by_side_effect.js",
      "tests/tainting_rules/js/sanitized_by_side_effect.yaml",
      "tests/tainting_rules/js/simpl_nodejs_eval.js",
      "tests/tainting_rules/js/simpl_nodejs_eval.yaml",
      "tests/tainting_rules/js/single_variable_source.js",
      "tests/tainting_rules/js/single_variable_source.yaml",
      "tests/tainting_rules/js/throw.js",
      "tests/tainting_rules/js/throw.yaml",
      "tests/tainting_rules/php/break.php",
      "tests/tainting_rules/php/break.yaml",
      "tests/tainting_rules/php/echo.php",
      "tests/tainting_rules/php/echo.yaml",
      "tests/tainting_rules/php/lval_var_sink.php",
      "tests/tainting_rules/php/lval_var_sink.yaml",
      "tests/tainting_rules/php/no_duplicate_submatches.php",
      "tests/tainting_rules/php/no_duplicate_submatches.yaml",
      "tests/tainting_rules/php/switch.php",
      "tests/tainting_rules/php/switch.yaml",
      "tests/tainting_rules/php/ternary.php",
      "tests/tainting_rules/php/ternary.yaml",
      "tests/tainting_rules/python/break.py",
      "tests/tainting_rules/python/break.yaml",
      "tests/tainting_rules/python/fake_tokens.py",
      "tests/tainting_rules/python/fake_tokens.yaml",
      "tests/tainting_rules/python/raise_from.py",
      "tests/tainting_rules/python/raise_from.yaml",
      "tests/tainting_rules/python/raise_no_args.py",
      "tests/tainting_rules/python/raise_no_args.yaml",
      "tests/tainting_rules/python/simpl_django_redirect.py",
      "tests/tainting_rules/python/simpl_django_redirect.yaml",
      "tests/tainting_rules/python/sink_param.py",
      "tests/tainting_rules/python/sink_param.yaml",
      "tests/tainting_rules/python/sink_return.py",
      "tests/tainting_rules/python/sink_return.yaml",
      "tests/tainting_rules/python/source_param.py",
      "tests/tainting_rules/python/source_param.yaml",
      "tests/tainting_rules/python/tainting_top.py",
      "tests/tainting_rules/python/tainting_top.yaml",
      "tests/tainting_rules/python/try_finally.py",
      "tests/tainting_rules/python/try_finally.yaml",
      "tests/tainting_rules/python/try_finally1.py",
      "tests/tainting_rules/python/try_finally1.yaml",
      "tests/tainting_rules/python/try_raise.py",
      "tests/tainting_rules/python/try_raise.yaml",
      "tests/tainting_rules/ruby/switch.rb",
      "tests/tainting_rules/ruby/switch.yaml",
      "tests/tainting_rules/scala/new_object_sink.scala",
      "tests/tainting_rules/scala/new_object_sink.yaml",
      "tests/tainting_rules/ts/source_exp.ts",
      "tests/tainting_rules/ts/source_exp.yaml",
      "tests/typing/BasicParam.java",
      "tests/typing/ClassFields.java",
      "tests/typing/EqVarCmp.java",
      "tests/typing/FuncParam.go",
      "tests/typing/PropVarDef.go",
      "tests/typing/StaticVarDef.go",
      "tests/typing/VarDef.java",
      "tools/hello_script.ml",
      "tools/languages_dumper/Main.ml",
      "tools/languages_dumper/dune",
      "tools/ojsonnet/Main.ml",
      "tools/ojsonnet/dune",
      "tools/otarzan/README.md",
      "tools/otarzan/bin/Main.ml",
      "tools/otarzan/bin/dune",
      "tools/otarzan/lib/Conf.ml",
      "tools/otarzan/lib/Parse.ml",
      "tools/otarzan/lib/Parse.mli",
      "tools/otarzan/lib/Print.ml",
      "tools/otarzan/lib/Print.mli",
      "tools/otarzan/lib/Run.ml",
      "tools/otarzan/lib/Test_otarzan.ml",
      "tools/otarzan/lib/dune"
    ]
  },
  "results": [
    {
      "check_id": "python.lang.compatibility.python37.python37-compatibility-importlib2",
      "end": { "col": 27, "line": 34, "offset": 1746 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2c821706833f5d829c25d747c63b1fdabac07bca066ae204c277615ad7bbf719f02b6b588714c86eee1bd55f28a1d14c952f6b9a0b0c2130af746f2ad399103d_0",
        "is_ignored": false,
        "lines": "import importlib.resources",
        "message": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions.",
        "metadata": {
          "category": "compatibility",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "L1Uy0n",
              "url": "https://semgrep.dev/playground/r/X0TQxBO/python.lang.compatibility.python37.python37-compatibility-importlib2",
              "version_id": "X0TQxBO"
            }
          },
          "shortlink": "https://sg.run/eL3y",
          "source": "https://semgrep.dev/r/python.lang.compatibility.python37.python37-compatibility-importlib2",
          "technology": ["python"]
        },
        "metavars": {},
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/bin/semgrep",
      "start": { "col": 1, "line": 34, "offset": 1720 }
    },
    {
      "check_id": "python.lang.security.audit.insecure-file-permissions.insecure-file-permissions",
      "end": { "col": 6, "line": 152, "offset": 5635 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "a94526814b5337f2328eb96a2a1385f98bfc4771b3ff45b2f7ca0fb3afd25ccb06f1f02095e10f5490418ac6524a7081e8a053e7ee85b5a2e126cb9b623d9999_0",
        "is_ignored": false,
        "lines": "    os.chmod(\n        semgrep_pro_path_tmp,\n        os.stat(semgrep_pro_path_tmp).st_mode\n        | stat.S_IEXEC\n        | stat.S_IXGRP\n        | stat.S_IXOTH,\n    )",
        "message": "These permissions `os.stat(semgrep_pro_path_tmp).st_mode\n        | stat.S_IEXEC\n        | stat.S_IXGRP\n        | stat.S_IXOTH` are widely permissive and grant access to more people than may be necessary. A good default is `0o644` which gives read and write access to yourself and read access to everyone else.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-276: Incorrect Default Permissions"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdUYqR",
              "url": "https://semgrep.dev/playground/r/YDTpnq3/python.lang.security.audit.insecure-file-permissions.insecure-file-permissions",
              "version_id": "YDTpnq3"
            }
          },
          "shortlink": "https://sg.run/AXY4",
          "source": "https://semgrep.dev/r/python.lang.security.audit.insecure-file-permissions.insecure-file-permissions",
          "subcategory": ["vuln"],
          "technology": ["python"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$BITS": {
            "abstract_content": "os.stat(semgrep_pro_path_tmp).st_mode|stat.S_IEXEC|stat.S_IXGRP|stat.S_IXOTH",
            "end": { "col": 23, "line": 151, "offset": 5628 },
            "start": { "col": 9, "line": 148, "offset": 5522 }
          },
          "$FILE": {
            "abstract_content": "semgrep_pro_path_tmp",
            "end": { "col": 29, "line": 147, "offset": 5512 },
            "propagated_value": {
              "svalue_abstract_content": "semgrep_pro_path.with_suffix(\".tmp_download\")",
              "svalue_end": { "col": 73, "line": 134, "offset": 4896 },
              "svalue_start": { "col": 28, "line": 134, "offset": 4851 }
            },
            "start": { "col": 9, "line": 147, "offset": 5492 }
          },
          "$METHOD": {
            "abstract_content": "chmod",
            "end": { "col": 13, "line": 146, "offset": 5482 },
            "start": { "col": 8, "line": 146, "offset": 5477 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/src/semgrep/commands/install.py",
      "start": { "col": 5, "line": 146, "offset": 5474 }
    },
    {
      "check_id": "python.lang.compatibility.python37.python37-compatibility-importlib2",
      "end": { "col": 27, "line": 1, "offset": 26 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "1e321b79d22593af58137bf905d035646dfd7999f56704e5782c39b2c260d10c5821ddf2be1614129d9f91f1db52638c2d4889dcc8a2d932e00bec974d6b5afd_0",
        "is_ignored": false,
        "lines": "import importlib.resources",
        "message": "Found 'importlib.resources', which is a module only available on Python 3.7+. This does not work in lower versions, and therefore is not backwards compatible. Use importlib_resources instead for older Python versions.",
        "metadata": {
          "category": "compatibility",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "L1Uy0n",
              "url": "https://semgrep.dev/playground/r/X0TQxBO/python.lang.compatibility.python37.python37-compatibility-importlib2",
              "version_id": "X0TQxBO"
            }
          },
          "shortlink": "https://sg.run/eL3y",
          "source": "https://semgrep.dev/r/python.lang.compatibility.python37.python37-compatibility-importlib2",
          "technology": ["python"]
        },
        "metavars": {},
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/src/semgrep/semgrep_core.py",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 46, "line": 9, "offset": 255 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "94cab9d9e223278ff643da66f640dbc807f3968bf1984b91c6638ba282f2ad8f7f27a8b96a6822c83fbfa42413f8aac7d87ea22f1bc2e204f4caffccfa3209e2_0",
        "is_ignored": false,
        "lines": "    return redirect(request.POST.get(\"next\"))",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arg",
            "end": { "col": 8, "line": 7, "offset": 171 },
            "start": { "col": 5, "line": 7, "offset": 168 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 33, "line": 9, "offset": 242 },
            "start": { "col": 29, "line": 9, "offset": 238 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e/rules/cli_test/error/long.py",
      "start": { "col": 5, "line": 9, "offset": 214 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 46, "line": 9, "offset": 255 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "94cab9d9e223278ff643da66f640dbc807f3968bf1984b91c6638ba282f2ad8f7f27a8b96a6822c83fbfa42413f8aac7d87ea22f1bc2e204f4caffccfa3209e2_1",
        "is_ignored": false,
        "lines": "    return redirect(request.POST.get(\"next\"))",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arg",
            "end": { "col": 8, "line": 7, "offset": 171 },
            "start": { "col": 5, "line": 7, "offset": 168 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 33, "line": 9, "offset": 242 },
            "start": { "col": 29, "line": 9, "offset": 238 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e/rules/cli_test/error/long.py",
      "start": { "col": 12, "line": 9, "offset": 221 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 40, "line": 14, "offset": 344 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "143344693cd9c295276ead06797f4f649371e45566ec3eda2875a1c2c217f5243e69798aec12c69c7d8775b4ec37d14d47b55565a2dee69786f7d1897d007997_0",
        "is_ignored": false,
        "lines": "    return redirect(request.get_host())",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "argh",
            "end": { "col": 9, "line": 12, "offset": 266 },
            "start": { "col": 5, "line": 12, "offset": 262 }
          },
          "$W": {
            "abstract_content": "get_host",
            "end": { "col": 37, "line": 14, "offset": 341 },
            "start": { "col": 29, "line": 14, "offset": 333 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e/rules/cli_test/error/long.py",
      "start": { "col": 5, "line": 14, "offset": 309 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 40, "line": 14, "offset": 344 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "143344693cd9c295276ead06797f4f649371e45566ec3eda2875a1c2c217f5243e69798aec12c69c7d8775b4ec37d14d47b55565a2dee69786f7d1897d007997_1",
        "is_ignored": false,
        "lines": "    return redirect(request.get_host())",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "argh",
            "end": { "col": 9, "line": 12, "offset": 266 },
            "start": { "col": 5, "line": 12, "offset": 262 }
          },
          "$W": {
            "abstract_content": "get_host",
            "end": { "col": 37, "line": 14, "offset": 341 },
            "start": { "col": 29, "line": 14, "offset": 333 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e/rules/cli_test/error/long.py",
      "start": { "col": 12, "line": 14, "offset": 316 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 36, "line": 19, "offset": 430 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6b32178741dd4a4cbd46206d5cdbfd3324aa1fa28094e9c8ee64d8b5403bf039c5833c6257550d004082b1c2eff444b37c5fa939b3b6c6b86823f43329202fee_0",
        "is_ignored": false,
        "lines": "    return redirect(request.method)",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arghh",
            "end": { "col": 10, "line": 17, "offset": 356 },
            "start": { "col": 5, "line": 17, "offset": 351 }
          },
          "$W": {
            "abstract_content": "method",
            "end": { "col": 35, "line": 19, "offset": 429 },
            "start": { "col": 29, "line": 19, "offset": 423 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e/rules/cli_test/error/long.py",
      "start": { "col": 5, "line": 19, "offset": 399 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 36, "line": 19, "offset": 430 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6b32178741dd4a4cbd46206d5cdbfd3324aa1fa28094e9c8ee64d8b5403bf039c5833c6257550d004082b1c2eff444b37c5fa939b3b6c6b86823f43329202fee_1",
        "is_ignored": false,
        "lines": "    return redirect(request.method)",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arghh",
            "end": { "col": 10, "line": 17, "offset": 356 },
            "start": { "col": 5, "line": 17, "offset": 351 }
          },
          "$W": {
            "abstract_content": "method",
            "end": { "col": 35, "line": 19, "offset": 429 },
            "start": { "col": 29, "line": 19, "offset": 423 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e/rules/cli_test/error/long.py",
      "start": { "col": 12, "line": 19, "offset": 406 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 26, "offset": 557 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "7f748460ab3c1d67c17d06f93897a707010ddd5491add36bb7ad4e278ed5fdd5a64461d7db6a84a8f26df3ce1d83f023813f4489af254e31c99f95ff31aab8d6_0",
        "is_ignored": false,
        "lines": "    url = request.get_host()\n    print(\"something\")\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 24, "offset": 488 },
            "start": { "col": 5, "line": 24, "offset": 485 }
          },
          "$FUNC": {
            "abstract_content": "argh2",
            "end": { "col": 10, "line": 22, "offset": 442 },
            "start": { "col": 5, "line": 22, "offset": 437 }
          },
          "$W": {
            "abstract_content": "get_host",
            "end": { "col": 27, "line": 24, "offset": 507 },
            "start": { "col": 19, "line": 24, "offset": 499 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e/rules/cli_test/error/long.py",
      "start": { "col": 5, "line": 24, "offset": 485 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 33, "offset": 698 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "4c06d1666a491f255bd7a16ba8fccf5d48a0e7629615f71fd93779cf18d5fdd31d392a9dd117bfdbec0becdb2702b708c9832529c1faf09ed2963b268cb125db_0",
        "is_ignored": false,
        "lines": "    url = request.headers.get(\"referrer\")\n    print(\"something\")\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 31, "offset": 616 },
            "start": { "col": 5, "line": 31, "offset": 613 }
          },
          "$FUNC": {
            "abstract_content": "unsafe",
            "end": { "col": 11, "line": 29, "offset": 570 },
            "start": { "col": 5, "line": 29, "offset": 564 }
          },
          "$W": {
            "abstract_content": "headers",
            "end": { "col": 26, "line": 31, "offset": 634 },
            "start": { "col": 19, "line": 31, "offset": 627 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e/rules/cli_test/error/long.py",
      "start": { "col": 5, "line": 31, "offset": 613 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 37, "line": 50, "offset": 990 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "e5a79104635c498637d87b0a291de9a81ce00733de5962fe9d002571da42977e892930accf762868537a46b4696ce77cb026b6a1aa3ce35b2fee1b6dad70a121_0",
        "is_ignored": false,
        "lines": "    url = request.POST.get(\"url\")\n    return HttpResponseRedirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 49, "offset": 927 },
            "start": { "col": 5, "line": 49, "offset": 924 }
          },
          "$FUNC": {
            "abstract_content": "unsafe2",
            "end": { "col": 12, "line": 47, "offset": 881 },
            "start": { "col": 5, "line": 47, "offset": 874 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 23, "line": 49, "offset": 942 },
            "start": { "col": 19, "line": 49, "offset": 938 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e/rules/cli_test/error/long.py",
      "start": { "col": 5, "line": 49, "offset": 924 }
    },
    {
      "check_id": "python.lang.compatibility.python36.python36-compatibility-Popen2",
      "end": { "col": 6, "line": 197, "offset": 6036 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "b43f5eea1e81a756e36f87426053ca10eb4f14a4b0ca2631c331ff8e4425bb12f2f3c4beb22683c9320d7bc911539aa374635b4ebe5c28116bb26cc048951c94_0",
        "is_ignored": false,
        "lines": "    process = subprocess.Popen(\n        SEMGREP_BASE_SCAN_COMMAND + [\"--json\", \"-e\", \"a\", \"--lang\", \"js\", \"-\"],\n        encoding=\"utf-8\",\n        env={\n            **os.environ,\n            \"SEMGREP_SETTINGS_FILE\": unique_settings_file,\n            \"SEMGREP_VERSION_CACHE_PATH\": tempfile.TemporaryDirectory().name,\n            \"SEMGREP_ENABLE_VERSION_CHECK\": \"0\",\n            \"SEMGREP_SEND_METRICS\": \"off\",\n        },\n        stdin=subprocess.PIPE,\n        stdout=subprocess.PIPE,\n    )",
        "message": "the `encoding` argument to Popen is only available on Python 3.6+",
        "metadata": {
          "category": "compatibility",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "EwU2n3",
              "url": "https://semgrep.dev/playground/r/pZT1y9P/python.lang.compatibility.python36.python36-compatibility-Popen2",
              "version_id": "pZT1y9P"
            }
          },
          "shortlink": "https://sg.run/x1Dg",
          "source": "https://semgrep.dev/r/python.lang.compatibility.python36.python36-compatibility-Popen2",
          "technology": ["python"]
        },
        "metavars": {
          "$X": {
            "abstract_content": "\"utf-8\"",
            "end": { "col": 25, "line": 187, "offset": 5686 },
            "start": { "col": 18, "line": 187, "offset": 5679 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e/test_check.py",
      "start": { "col": 15, "line": 185, "offset": 5564 }
    },
    {
      "check_id": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
      "end": { "col": 6, "line": 566, "offset": 17895 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c3349838bbe69f4a4240ece784fa46b0cae9f477094818d41443bc9e5310e444cb1f728b583a3b2fef6a0a6765c57eba690134c1008a1fce3938a7717a7aae8f_0",
        "fix": "subprocess.run(\n        f\"ulimit -s 1000 && {SEMGREP_BASE_SCAN_COMMAND_STR} --disable-version-check --metrics off --config {rulepath} --verbose {targetpath}\",\n        shell=False,\n        capture_output=True,\n        encoding=\"utf-8\",\n    )",
        "is_ignored": false,
        "lines": "    output = subprocess.run(\n        f\"ulimit -s 1000 && {SEMGREP_BASE_SCAN_COMMAND_STR} --disable-version-check --metrics off --config {rulepath} --verbose {targetpath}\",\n        shell=True,\n        capture_output=True,\n        encoding=\"utf-8\",\n    )",
        "message": "Found 'subprocess' function 'run' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess",
            "https://docs.python.org/3/library/subprocess.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUpz2",
              "url": "https://semgrep.dev/playground/r/ExTjAjz/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
              "version_id": "ExTjAjz"
            }
          },
          "shortlink": "https://sg.run/J92w",
          "source": "https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
          "subcategory": ["vuln"],
          "technology": ["python"],
          "vulnerability_class": ["Command Injection"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "run",
            "end": { "col": 28, "line": 561, "offset": 17670 },
            "start": { "col": 25, "line": 561, "offset": 17667 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e/test_check.py",
      "start": { "col": 14, "line": 561, "offset": 17656 }
    },
    {
      "check_id": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
      "end": { "col": 6, "line": 579, "offset": 18390 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c3349838bbe69f4a4240ece784fa46b0cae9f477094818d41443bc9e5310e444cb1f728b583a3b2fef6a0a6765c57eba690134c1008a1fce3938a7717a7aae8f_1",
        "fix": "subprocess.run(\n        f\"ulimit -S -s 1000 && {SEMGREP_BASE_SCAN_COMMAND_STR} --disable-version-check --metrics off --config {rulepath} --verbose {targetpath}\",\n        shell=False,\n        capture_output=True,\n        encoding=\"utf-8\",\n    )",
        "is_ignored": false,
        "lines": "    output = subprocess.run(\n        f\"ulimit -S -s 1000 && {SEMGREP_BASE_SCAN_COMMAND_STR} --disable-version-check --metrics off --config {rulepath} --verbose {targetpath}\",\n        shell=True,\n        capture_output=True,\n        encoding=\"utf-8\",\n    )",
        "message": "Found 'subprocess' function 'run' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess",
            "https://docs.python.org/3/library/subprocess.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUpz2",
              "url": "https://semgrep.dev/playground/r/ExTjAjz/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
              "version_id": "ExTjAjz"
            }
          },
          "shortlink": "https://sg.run/J92w",
          "source": "https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
          "subcategory": ["vuln"],
          "technology": ["python"],
          "vulnerability_class": ["Command Injection"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "run",
            "end": { "col": 28, "line": 574, "offset": 18162 },
            "start": { "col": 25, "line": 574, "offset": 18159 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e/test_check.py",
      "start": { "col": 14, "line": 574, "offset": 18148 }
    },
    {
      "check_id": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
      "end": { "col": 6, "line": 79, "offset": 2648 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "fe92b5bad11169c600d04698f126958212ca3968721d2d4f814c9d678aa8803581775476277fc6902d0fb437c0641da99654bd53ecdfe31de88504ae91e8db44_0",
        "fix": "subprocess.run(\n        f\"git grep --recurse-submodules -hPo 'GITHUB_[\\\\w_]*' {_cli_src}\",\n        shell=False,\n        capture_output=True,\n        check=True,\n    )",
        "is_ignored": false,
        "lines": "    subprocess.run(\n        f\"git grep --recurse-submodules -hPo 'GITHUB_[\\\\w_]*' {_cli_src}\",\n        shell=True,\n        capture_output=True,\n        check=True,\n    )",
        "message": "Found 'subprocess' function 'run' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess",
            "https://docs.python.org/3/library/subprocess.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUpz2",
              "url": "https://semgrep.dev/playground/r/ExTjAjz/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
              "version_id": "ExTjAjz"
            }
          },
          "shortlink": "https://sg.run/J92w",
          "source": "https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
          "subcategory": ["vuln"],
          "technology": ["python"],
          "vulnerability_class": ["Command Injection"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "run",
            "end": { "col": 19, "line": 74, "offset": 2497 },
            "start": { "col": 16, "line": 74, "offset": 2494 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e-pro/test_ci.py",
      "start": { "col": 5, "line": 74, "offset": 2483 }
    },
    {
      "check_id": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
      "end": { "col": 62, "line": 24, "offset": 561 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "3f32563306a1132e6417a15d66b25ccec31e7abe935e3810a68bc9fc5e3a12b88f5920625ee899fcfacf0cd89e182dce210dce830d7d410fff079d84524f849c_0",
        "fix": "subprocess.run(semgrep_core_command, shell=False)",
        "is_ignored": false,
        "lines": "    result = subprocess.run(semgrep_core_command, shell=True)",
        "message": "Found 'subprocess' function 'run' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess",
            "https://docs.python.org/3/library/subprocess.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUpz2",
              "url": "https://semgrep.dev/playground/r/ExTjAjz/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
              "version_id": "ExTjAjz"
            }
          },
          "shortlink": "https://sg.run/J92w",
          "source": "https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
          "subcategory": ["vuln"],
          "technology": ["python"],
          "vulnerability_class": ["Command Injection"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "run",
            "end": { "col": 28, "line": 24, "offset": 527 },
            "start": { "col": 25, "line": 24, "offset": 524 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "cli/tests/e2e-pysemgrep/test_utility_commands.py",
      "start": { "col": 14, "line": 24, "offset": 513 }
    },
    {
      "check_id": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
      "end": { "col": 57, "line": 36, "offset": 1259 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "ruleFile",
              "location": {
                "end": { "col": 56, "line": 35, "offset": 1187 },
                "path": "js/engine/tests/index.test.js",
                "start": { "col": 48, "line": 35, "offset": 1179 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 57, "line": 36, "offset": 1259 },
                "path": "js/engine/tests/index.test.js",
                "start": { "col": 33, "line": 36, "offset": 1235 }
              },
              "`${__dirname}/${ruleFile"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 56, "line": 35, "offset": 1187 },
                "path": "js/engine/tests/index.test.js",
                "start": { "col": 48, "line": 35, "offset": 1179 }
              },
              "ruleFile"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "5a03fc5ade7108a9420b1f081991b715cd6039474e5d6de404ad38677f93e343df120f9b9f04b3df2a3015f2be4ebab1aba5eedc3093e936f371fa6812f6091b_0",
        "is_ignored": false,
        "lines": "  const rulePath = path.resolve(`${__dirname}/${ruleFile}`);",
        "message": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUjrq",
              "url": "https://semgrep.dev/playground/r/nWTxP4n/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
              "version_id": "nWTxP4n"
            }
          },
          "shortlink": "https://sg.run/OPqk",
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
          "subcategory": ["vuln"],
          "technology": ["javascript", "node.js"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$PATH": {
            "abstract_content": "path",
            "end": { "col": 24, "line": 36, "offset": 1226 },
            "start": { "col": 20, "line": 36, "offset": 1222 }
          },
          "$SINK": {
            "abstract_content": "`__dirname/ruleFile",
            "end": { "col": 57, "line": 36, "offset": 1259 },
            "start": { "col": 33, "line": 36, "offset": 1235 }
          },
          "$X": {
            "abstract_content": "ruleFile",
            "end": { "col": 56, "line": 35, "offset": 1187 },
            "start": { "col": 48, "line": 35, "offset": 1179 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/engine/tests/index.test.js",
      "start": { "col": 33, "line": 36, "offset": 1235 }
    },
    {
      "check_id": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
      "end": { "col": 61, "line": 37, "offset": 1324 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "targetFile",
              "location": {
                "end": { "col": 68, "line": 35, "offset": 1199 },
                "path": "js/engine/tests/index.test.js",
                "start": { "col": 58, "line": 35, "offset": 1189 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 61, "line": 37, "offset": 1324 },
                "path": "js/engine/tests/index.test.js",
                "start": { "col": 35, "line": 37, "offset": 1298 }
              },
              "`${__dirname}/${targetFile"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 68, "line": 35, "offset": 1199 },
                "path": "js/engine/tests/index.test.js",
                "start": { "col": 58, "line": 35, "offset": 1189 }
              },
              "targetFile"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "ec08fb82655815792cf7eabb85cb583a1ff6f19d392dd773a3108d488a6a5eb83d78987fc24eadbb06aa8a1e745120775c16088aee91df801a8d9fdaabb16926_0",
        "is_ignored": false,
        "lines": "  const targetPath = path.resolve(`${__dirname}/${targetFile}`);",
        "message": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUjrq",
              "url": "https://semgrep.dev/playground/r/nWTxP4n/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
              "version_id": "nWTxP4n"
            }
          },
          "shortlink": "https://sg.run/OPqk",
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
          "subcategory": ["vuln"],
          "technology": ["javascript", "node.js"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$PATH": {
            "abstract_content": "path",
            "end": { "col": 26, "line": 37, "offset": 1289 },
            "start": { "col": 22, "line": 37, "offset": 1285 }
          },
          "$SINK": {
            "abstract_content": "`__dirname/targetFile",
            "end": { "col": 61, "line": 37, "offset": 1324 },
            "start": { "col": 35, "line": 37, "offset": 1298 }
          },
          "$X": {
            "abstract_content": "targetFile",
            "end": { "col": 68, "line": 35, "offset": 1199 },
            "start": { "col": 58, "line": 35, "offset": 1189 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/engine/tests/index.test.js",
      "start": { "col": 35, "line": 37, "offset": 1298 }
    },
    {
      "check_id": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
      "end": { "col": 64, "line": 18, "offset": 451 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "testsRoot",
              "location": {
                "end": { "col": 12, "line": 6, "offset": 124 },
                "path": "js/language_server/src/tests/index.ts",
                "start": { "col": 3, "line": 6, "offset": 115 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 64, "line": 18, "offset": 451 },
                "path": "js/language_server/src/tests/index.ts",
                "start": { "col": 55, "line": 18, "offset": 442 }
              },
              "testsRoot"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 12, "line": 6, "offset": 124 },
                "path": "js/language_server/src/tests/index.ts",
                "start": { "col": 3, "line": 6, "offset": 115 }
              },
              "testsRoot"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "d017868381ca29e571bc23107e55fcb5bcd28b298e6f056ac4031e132d215035dbb58d39aa41bc6d18a9450d09705a29c58192571eced3510c41fadb7a04803d_0",
        "is_ignored": false,
        "lines": "      files.forEach((f) => mocha.addFile(path.resolve(testsRoot, f)));",
        "message": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUjrq",
              "url": "https://semgrep.dev/playground/r/nWTxP4n/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
              "version_id": "nWTxP4n"
            }
          },
          "shortlink": "https://sg.run/OPqk",
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
          "subcategory": ["vuln"],
          "technology": ["javascript", "node.js"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$SINK": {
            "abstract_content": "testsRoot",
            "end": { "col": 64, "line": 18, "offset": 451 },
            "start": { "col": 55, "line": 18, "offset": 442 }
          },
          "$X": {
            "abstract_content": "testsRoot",
            "end": { "col": 12, "line": 6, "offset": 124 },
            "start": { "col": 3, "line": 6, "offset": 115 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/language_server/src/tests/index.ts",
      "start": { "col": 55, "line": 18, "offset": 442 }
    },
    {
      "check_id": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
      "end": { "col": 67, "line": 18, "offset": 454 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "f",
              "location": {
                "end": { "col": 23, "line": 18, "offset": 410 },
                "path": "js/language_server/src/tests/index.ts",
                "start": { "col": 22, "line": 18, "offset": 409 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 67, "line": 18, "offset": 454 },
                "path": "js/language_server/src/tests/index.ts",
                "start": { "col": 66, "line": 18, "offset": 453 }
              },
              "f"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 23, "line": 18, "offset": 410 },
                "path": "js/language_server/src/tests/index.ts",
                "start": { "col": 22, "line": 18, "offset": 409 }
              },
              "f"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "a564234c8a1bc9adc8c331304daea3947df27bd09de4b7bf22d8c49fba672aac5efe2cf0d84ad2fa4df71f53d5aab14968c16b9aa67f5c05ddb3045968d4770a_0",
        "is_ignored": false,
        "lines": "      files.forEach((f) => mocha.addFile(path.resolve(testsRoot, f)));",
        "message": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUjrq",
              "url": "https://semgrep.dev/playground/r/nWTxP4n/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
              "version_id": "nWTxP4n"
            }
          },
          "shortlink": "https://sg.run/OPqk",
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
          "subcategory": ["vuln"],
          "technology": ["javascript", "node.js"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$SINK": {
            "abstract_content": "f",
            "end": { "col": 67, "line": 18, "offset": 454 },
            "start": { "col": 66, "line": 18, "offset": 453 }
          },
          "$X": {
            "abstract_content": "f",
            "end": { "col": 23, "line": 18, "offset": 410 },
            "start": { "col": 22, "line": 18, "offset": 409 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/language_server/src/tests/index.ts",
      "start": { "col": 66, "line": 18, "offset": 453 }
    },
    {
      "check_id": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
      "end": { "col": 51, "line": 30, "offset": 906 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "lang",
              "location": {
                "end": { "col": 30, "line": 26, "offset": 722 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 26, "line": 26, "offset": 718 }
              }
            },
            {
              "content": "PARSING_BASE_PATH",
              "location": {
                "end": { "col": 26, "line": 27, "offset": 754 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 9, "line": 27, "offset": 737 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 51, "line": 30, "offset": 906 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 34, "line": 30, "offset": 889 }
              },
              "PARSING_BASE_PATH"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 30, "line": 26, "offset": 722 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 26, "line": 26, "offset": 718 }
              },
              "lang"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "59f744009e7ed96fa9505513756933a55382ba4d2f50a7200823527b892c10ae691279778cee980057ad914fc2323d59ae4aab7ece1025f4020e0a110ba9ac68_0",
        "is_ignored": false,
        "lines": "    .map((filename) => path.join(PARSING_BASE_PATH, filename))",
        "message": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUjrq",
              "url": "https://semgrep.dev/playground/r/nWTxP4n/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
              "version_id": "nWTxP4n"
            }
          },
          "shortlink": "https://sg.run/OPqk",
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
          "subcategory": ["vuln"],
          "technology": ["javascript", "node.js"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$PATH": {
            "abstract_content": "path",
            "end": { "col": 28, "line": 30, "offset": 883 },
            "start": { "col": 24, "line": 30, "offset": 879 }
          },
          "$SINK": {
            "abstract_content": "PARSING_BASE_PATH",
            "end": { "col": 51, "line": 30, "offset": 906 },
            "propagated_value": {
              "svalue_abstract_content": "`__dirname/../../tests/tests/parsing/lang/",
              "svalue_end": { "col": 77, "line": 27, "offset": 805 },
              "svalue_start": { "col": 29, "line": 27, "offset": 757 }
            },
            "start": { "col": 34, "line": 30, "offset": 889 }
          },
          "$X": {
            "abstract_content": "lang",
            "end": { "col": 30, "line": 26, "offset": 722 },
            "start": { "col": 26, "line": 26, "offset": 718 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/languages/shared/parser.js",
      "start": { "col": 34, "line": 30, "offset": 889 }
    },
    {
      "check_id": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
      "end": { "col": 61, "line": 30, "offset": 916 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "filename",
              "location": {
                "end": { "col": 19, "line": 30, "offset": 874 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 11, "line": 30, "offset": 866 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 61, "line": 30, "offset": 916 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 53, "line": 30, "offset": 908 }
              },
              "filename"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 19, "line": 30, "offset": 874 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 11, "line": 30, "offset": 866 }
              },
              "filename"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "45b831adb3f0b5e7f7c51abe8542c831bb0d2f37d57f240afa0e1e63e28103ddaa24ab08589c0c9368864708f22eeed4ec1d52940bebe28e060bdab2a6331ca6_0",
        "is_ignored": false,
        "lines": "    .map((filename) => path.join(PARSING_BASE_PATH, filename))",
        "message": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUjrq",
              "url": "https://semgrep.dev/playground/r/nWTxP4n/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
              "version_id": "nWTxP4n"
            }
          },
          "shortlink": "https://sg.run/OPqk",
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
          "subcategory": ["vuln"],
          "technology": ["javascript", "node.js"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$PATH": {
            "abstract_content": "path",
            "end": { "col": 28, "line": 30, "offset": 883 },
            "start": { "col": 24, "line": 30, "offset": 879 }
          },
          "$SINK": {
            "abstract_content": "filename",
            "end": { "col": 61, "line": 30, "offset": 916 },
            "start": { "col": 53, "line": 30, "offset": 908 }
          },
          "$X": {
            "abstract_content": "filename",
            "end": { "col": 19, "line": 30, "offset": 874 },
            "start": { "col": 11, "line": 30, "offset": 866 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/languages/shared/parser.js",
      "start": { "col": 53, "line": 30, "offset": 908 }
    },
    {
      "check_id": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
      "end": { "col": 52, "line": 49, "offset": 1554 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "lang",
              "location": {
                "end": { "col": 31, "line": 44, "offset": 1311 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 27, "line": 44, "offset": 1307 }
              }
            },
            {
              "content": "PATTERNS_BASE_PATH",
              "location": {
                "end": { "col": 27, "line": 45, "offset": 1344 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 9, "line": 45, "offset": 1326 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 52, "line": 49, "offset": 1554 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 34, "line": 49, "offset": 1536 }
              },
              "PATTERNS_BASE_PATH"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 31, "line": 44, "offset": 1311 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 27, "line": 44, "offset": 1307 }
              },
              "lang"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "34db03fa1de039a9ec732cc5f8ad80c22d16f368262850c241da30edcaa1e907ecea1f85f2d80861950562ae6c44558fae723d0bacb084b15f9776339c6b1dae_0",
        "is_ignored": false,
        "lines": "    .map((filename) => path.join(PATTERNS_BASE_PATH, filename));",
        "message": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUjrq",
              "url": "https://semgrep.dev/playground/r/nWTxP4n/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
              "version_id": "nWTxP4n"
            }
          },
          "shortlink": "https://sg.run/OPqk",
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
          "subcategory": ["vuln"],
          "technology": ["javascript", "node.js"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$PATH": {
            "abstract_content": "path",
            "end": { "col": 28, "line": 49, "offset": 1530 },
            "start": { "col": 24, "line": 49, "offset": 1526 }
          },
          "$SINK": {
            "abstract_content": "PATTERNS_BASE_PATH",
            "end": { "col": 52, "line": 49, "offset": 1554 },
            "propagated_value": {
              "svalue_abstract_content": "`__dirname/../../tests/tests/patterns/lang/",
              "svalue_end": { "col": 79, "line": 45, "offset": 1396 },
              "svalue_start": { "col": 30, "line": 45, "offset": 1347 }
            },
            "start": { "col": 34, "line": 49, "offset": 1536 }
          },
          "$X": {
            "abstract_content": "lang",
            "end": { "col": 31, "line": 44, "offset": 1311 },
            "start": { "col": 27, "line": 44, "offset": 1307 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/languages/shared/parser.js",
      "start": { "col": 34, "line": 49, "offset": 1536 }
    },
    {
      "check_id": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
      "end": { "col": 62, "line": 49, "offset": 1564 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "filename",
              "location": {
                "end": { "col": 19, "line": 49, "offset": 1521 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 11, "line": 49, "offset": 1513 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 62, "line": 49, "offset": 1564 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 54, "line": 49, "offset": 1556 }
              },
              "filename"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 19, "line": 49, "offset": 1521 },
                "path": "js/languages/shared/parser.js",
                "start": { "col": 11, "line": 49, "offset": 1513 }
              },
              "filename"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "45b831adb3f0b5e7f7c51abe8542c831bb0d2f37d57f240afa0e1e63e28103ddaa24ab08589c0c9368864708f22eeed4ec1d52940bebe28e060bdab2a6331ca6_1",
        "is_ignored": false,
        "lines": "    .map((filename) => path.join(PATTERNS_BASE_PATH, filename));",
        "message": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUjrq",
              "url": "https://semgrep.dev/playground/r/nWTxP4n/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
              "version_id": "nWTxP4n"
            }
          },
          "shortlink": "https://sg.run/OPqk",
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
          "subcategory": ["vuln"],
          "technology": ["javascript", "node.js"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$PATH": {
            "abstract_content": "path",
            "end": { "col": 28, "line": 49, "offset": 1530 },
            "start": { "col": 24, "line": 49, "offset": 1526 }
          },
          "$SINK": {
            "abstract_content": "filename",
            "end": { "col": 62, "line": 49, "offset": 1564 },
            "start": { "col": 54, "line": 49, "offset": 1556 }
          },
          "$X": {
            "abstract_content": "filename",
            "end": { "col": 19, "line": 49, "offset": 1521 },
            "start": { "col": 11, "line": 49, "offset": 1513 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/languages/shared/parser.js",
      "start": { "col": 54, "line": 49, "offset": 1556 }
    },
    {
      "check_id": "c.lang.security.insecure-use-memset.insecure-use-memset",
      "end": { "col": 58, "line": 81, "offset": 1303 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5acc33b87e7a81e685dff3259541a295cdec34eda918a39c3b365fa764ba941c84f6fa63e8d4a9290778372202aab62e3b48f4a7f8a39c54348599052ca64c6c_0",
        "fix": "memset_s(new_start + (*end - *start), 0, *end - *start)",
        "is_ignored": false,
        "lines": "    memset(new_start + (*end - *start), 0, *end - *start);",
        "message": "When handling sensitive information in a buffer, it's important to ensure  that the data is securely erased before the buffer is deleted or reused.  While `memset()` is commonly used for this purpose, it can leave sensitive  information behind due to compiler optimizations or other factors.  To avoid this potential vulnerability, it's recommended to use the  `memset_s()` function instead. `memset_s()` is a standardized function  that securely overwrites the memory with a specified value, making it more  difficult for an attacker to recover any sensitive data that was stored in  the buffer. By using `memset_s()` instead of `memset()`, you can help to  ensure that your application is more secure and less vulnerable to exploits  that rely on residual data in memory.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-14: Compiler Removal of Code to Clear Buffers"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://cwe.mitre.org/data/definitions/14.html",
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UK7D",
              "url": "https://semgrep.dev/playground/r/e1T013E/c.lang.security.insecure-use-memset.insecure-use-memset",
              "version_id": "e1T013E"
            }
          },
          "shortlink": "https://sg.run/l9GE",
          "source": "https://semgrep.dev/r/c.lang.security.insecure-use-memset.insecure-use-memset",
          "subcategory": ["audit"],
          "technology": ["c"],
          "vulnerability_class": ["Memory Issues"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "new_start+*end-*start 0*end-*start",
            "end": { "col": 57, "line": 81, "offset": 1302 },
            "start": { "col": 12, "line": 81, "offset": 1257 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/libyaml/api.c",
      "start": { "col": 5, "line": 81, "offset": 1250 }
    },
    {
      "check_id": "c.lang.security.insecure-use-memset.insecure-use-memset",
      "end": { "col": 45, "line": 181, "offset": 3621 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6954f62acbb09d3456be41129f02355ea96b8393c5880b8f499d3c586391ad69de33bb554906dcd2fe0773c7b4b0a5c5bbd633e8f9b881df0da03c572bb3aa2e_0",
        "fix": "memset_s(parser, 0, sizeof(yaml_parser_t)",
        "is_ignored": false,
        "lines": "    memset(parser, 0, sizeof(yaml_parser_t));",
        "message": "When handling sensitive information in a buffer, it's important to ensure  that the data is securely erased before the buffer is deleted or reused.  While `memset()` is commonly used for this purpose, it can leave sensitive  information behind due to compiler optimizations or other factors.  To avoid this potential vulnerability, it's recommended to use the  `memset_s()` function instead. `memset_s()` is a standardized function  that securely overwrites the memory with a specified value, making it more  difficult for an attacker to recover any sensitive data that was stored in  the buffer. By using `memset_s()` instead of `memset()`, you can help to  ensure that your application is more secure and less vulnerable to exploits  that rely on residual data in memory.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-14: Compiler Removal of Code to Clear Buffers"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://cwe.mitre.org/data/definitions/14.html",
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UK7D",
              "url": "https://semgrep.dev/playground/r/e1T013E/c.lang.security.insecure-use-memset.insecure-use-memset",
              "version_id": "e1T013E"
            }
          },
          "shortlink": "https://sg.run/l9GE",
          "source": "https://semgrep.dev/r/c.lang.security.insecure-use-memset.insecure-use-memset",
          "subcategory": ["audit"],
          "technology": ["c"],
          "vulnerability_class": ["Memory Issues"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "parser 0 sizeof yaml_parser_t",
            "end": { "col": 43, "line": 181, "offset": 3619 },
            "start": { "col": 12, "line": 181, "offset": 3588 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/libyaml/api.c",
      "start": { "col": 5, "line": 181, "offset": 3581 }
    },
    {
      "check_id": "c.lang.security.insecure-use-memset.insecure-use-memset",
      "end": { "col": 45, "line": 241, "offset": 5579 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6954f62acbb09d3456be41129f02355ea96b8393c5880b8f499d3c586391ad69de33bb554906dcd2fe0773c7b4b0a5c5bbd633e8f9b881df0da03c572bb3aa2e_1",
        "fix": "memset_s(parser, 0, sizeof(yaml_parser_t)",
        "is_ignored": false,
        "lines": "    memset(parser, 0, sizeof(yaml_parser_t));",
        "message": "When handling sensitive information in a buffer, it's important to ensure  that the data is securely erased before the buffer is deleted or reused.  While `memset()` is commonly used for this purpose, it can leave sensitive  information behind due to compiler optimizations or other factors.  To avoid this potential vulnerability, it's recommended to use the  `memset_s()` function instead. `memset_s()` is a standardized function  that securely overwrites the memory with a specified value, making it more  difficult for an attacker to recover any sensitive data that was stored in  the buffer. By using `memset_s()` instead of `memset()`, you can help to  ensure that your application is more secure and less vulnerable to exploits  that rely on residual data in memory.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-14: Compiler Removal of Code to Clear Buffers"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://cwe.mitre.org/data/definitions/14.html",
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UK7D",
              "url": "https://semgrep.dev/playground/r/e1T013E/c.lang.security.insecure-use-memset.insecure-use-memset",
              "version_id": "e1T013E"
            }
          },
          "shortlink": "https://sg.run/l9GE",
          "source": "https://semgrep.dev/r/c.lang.security.insecure-use-memset.insecure-use-memset",
          "subcategory": ["audit"],
          "technology": ["c"],
          "vulnerability_class": ["Memory Issues"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "parser 0 sizeof yaml_parser_t",
            "end": { "col": 43, "line": 241, "offset": 5577 },
            "start": { "col": 12, "line": 241, "offset": 5546 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/libyaml/api.c",
      "start": { "col": 5, "line": 241, "offset": 5539 }
    },
    {
      "check_id": "c.lang.security.insecure-use-memset.insecure-use-memset",
      "end": { "col": 47, "line": 359, "offset": 8456 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "237db077b114692b90320f353ecde73d69cc39b417ab28b76aa6f608d1c2ae2ed4f8220db4b3cb725bf6667ea05c57b2b9c3b74b60762b104997c748b7ce3a1c_0",
        "fix": "memset_s(emitter, 0, sizeof(yaml_emitter_t)",
        "is_ignored": false,
        "lines": "    memset(emitter, 0, sizeof(yaml_emitter_t));",
        "message": "When handling sensitive information in a buffer, it's important to ensure  that the data is securely erased before the buffer is deleted or reused.  While `memset()` is commonly used for this purpose, it can leave sensitive  information behind due to compiler optimizations or other factors.  To avoid this potential vulnerability, it's recommended to use the  `memset_s()` function instead. `memset_s()` is a standardized function  that securely overwrites the memory with a specified value, making it more  difficult for an attacker to recover any sensitive data that was stored in  the buffer. By using `memset_s()` instead of `memset()`, you can help to  ensure that your application is more secure and less vulnerable to exploits  that rely on residual data in memory.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-14: Compiler Removal of Code to Clear Buffers"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://cwe.mitre.org/data/definitions/14.html",
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UK7D",
              "url": "https://semgrep.dev/playground/r/e1T013E/c.lang.security.insecure-use-memset.insecure-use-memset",
              "version_id": "e1T013E"
            }
          },
          "shortlink": "https://sg.run/l9GE",
          "source": "https://semgrep.dev/r/c.lang.security.insecure-use-memset.insecure-use-memset",
          "subcategory": ["audit"],
          "technology": ["c"],
          "vulnerability_class": ["Memory Issues"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "emitter 0 sizeof yaml_emitter_t",
            "end": { "col": 45, "line": 359, "offset": 8454 },
            "start": { "col": 12, "line": 359, "offset": 8421 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/libyaml/api.c",
      "start": { "col": 5, "line": 359, "offset": 8414 }
    },
    {
      "check_id": "c.lang.security.insecure-use-memset.insecure-use-memset",
      "end": { "col": 47, "line": 412, "offset": 10172 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "237db077b114692b90320f353ecde73d69cc39b417ab28b76aa6f608d1c2ae2ed4f8220db4b3cb725bf6667ea05c57b2b9c3b74b60762b104997c748b7ce3a1c_1",
        "fix": "memset_s(emitter, 0, sizeof(yaml_emitter_t)",
        "is_ignored": false,
        "lines": "    memset(emitter, 0, sizeof(yaml_emitter_t));",
        "message": "When handling sensitive information in a buffer, it's important to ensure  that the data is securely erased before the buffer is deleted or reused.  While `memset()` is commonly used for this purpose, it can leave sensitive  information behind due to compiler optimizations or other factors.  To avoid this potential vulnerability, it's recommended to use the  `memset_s()` function instead. `memset_s()` is a standardized function  that securely overwrites the memory with a specified value, making it more  difficult for an attacker to recover any sensitive data that was stored in  the buffer. By using `memset_s()` instead of `memset()`, you can help to  ensure that your application is more secure and less vulnerable to exploits  that rely on residual data in memory.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-14: Compiler Removal of Code to Clear Buffers"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://cwe.mitre.org/data/definitions/14.html",
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UK7D",
              "url": "https://semgrep.dev/playground/r/e1T013E/c.lang.security.insecure-use-memset.insecure-use-memset",
              "version_id": "e1T013E"
            }
          },
          "shortlink": "https://sg.run/l9GE",
          "source": "https://semgrep.dev/r/c.lang.security.insecure-use-memset.insecure-use-memset",
          "subcategory": ["audit"],
          "technology": ["c"],
          "vulnerability_class": ["Memory Issues"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "emitter 0 sizeof yaml_emitter_t",
            "end": { "col": 45, "line": 412, "offset": 10170 },
            "start": { "col": 12, "line": 412, "offset": 10137 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/libyaml/api.c",
      "start": { "col": 5, "line": 412, "offset": 10130 }
    },
    {
      "check_id": "c.lang.security.insecure-use-memset.insecure-use-memset",
      "end": { "col": 43, "line": 616, "offset": 15194 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "849ce557dc3c9dfbe10fc7fd24a9d0f4bc541cea1975ab199acffa7fde16993d39bdff2bc231013b6d2735576774e94481071115d1425b8e72ed91381b60d86a_0",
        "fix": "memset_s(token, 0, sizeof(yaml_token_t)",
        "is_ignored": false,
        "lines": "    memset(token, 0, sizeof(yaml_token_t));",
        "message": "When handling sensitive information in a buffer, it's important to ensure  that the data is securely erased before the buffer is deleted or reused.  While `memset()` is commonly used for this purpose, it can leave sensitive  information behind due to compiler optimizations or other factors.  To avoid this potential vulnerability, it's recommended to use the  `memset_s()` function instead. `memset_s()` is a standardized function  that securely overwrites the memory with a specified value, making it more  difficult for an attacker to recover any sensitive data that was stored in  the buffer. By using `memset_s()` instead of `memset()`, you can help to  ensure that your application is more secure and less vulnerable to exploits  that rely on residual data in memory.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-14: Compiler Removal of Code to Clear Buffers"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://cwe.mitre.org/data/definitions/14.html",
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UK7D",
              "url": "https://semgrep.dev/playground/r/e1T013E/c.lang.security.insecure-use-memset.insecure-use-memset",
              "version_id": "e1T013E"
            }
          },
          "shortlink": "https://sg.run/l9GE",
          "source": "https://semgrep.dev/r/c.lang.security.insecure-use-memset.insecure-use-memset",
          "subcategory": ["audit"],
          "technology": ["c"],
          "vulnerability_class": ["Memory Issues"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "token 0 sizeof yaml_token_t",
            "end": { "col": 41, "line": 616, "offset": 15192 },
            "start": { "col": 12, "line": 616, "offset": 15163 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/libyaml/api.c",
      "start": { "col": 5, "line": 616, "offset": 15156 }
    },
    {
      "check_id": "c.lang.security.insecure-use-memset.insecure-use-memset",
      "end": { "col": 43, "line": 1028, "offset": 26099 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "e071494ade4a01fc54e9d7e9630fe7f7973698c99ac6359f59761b57756ebdce15c6748be61a6592d1b1881ec55d6bf35c4d965eff51809bacc1c454a40b4cab_0",
        "fix": "memset_s(event, 0, sizeof(yaml_event_t)",
        "is_ignored": false,
        "lines": "    memset(event, 0, sizeof(yaml_event_t));",
        "message": "When handling sensitive information in a buffer, it's important to ensure  that the data is securely erased before the buffer is deleted or reused.  While `memset()` is commonly used for this purpose, it can leave sensitive  information behind due to compiler optimizations or other factors.  To avoid this potential vulnerability, it's recommended to use the  `memset_s()` function instead. `memset_s()` is a standardized function  that securely overwrites the memory with a specified value, making it more  difficult for an attacker to recover any sensitive data that was stored in  the buffer. By using `memset_s()` instead of `memset()`, you can help to  ensure that your application is more secure and less vulnerable to exploits  that rely on residual data in memory.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-14: Compiler Removal of Code to Clear Buffers"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://cwe.mitre.org/data/definitions/14.html",
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UK7D",
              "url": "https://semgrep.dev/playground/r/e1T013E/c.lang.security.insecure-use-memset.insecure-use-memset",
              "version_id": "e1T013E"
            }
          },
          "shortlink": "https://sg.run/l9GE",
          "source": "https://semgrep.dev/r/c.lang.security.insecure-use-memset.insecure-use-memset",
          "subcategory": ["audit"],
          "technology": ["c"],
          "vulnerability_class": ["Memory Issues"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "event 0 sizeof yaml_event_t",
            "end": { "col": 41, "line": 1028, "offset": 26097 },
            "start": { "col": 12, "line": 1028, "offset": 26068 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/libyaml/api.c",
      "start": { "col": 5, "line": 1028, "offset": 26061 }
    },
    {
      "check_id": "c.lang.security.insecure-use-memset.insecure-use-memset",
      "end": { "col": 49, "line": 1157, "offset": 30475 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "32490dbfab8bf0e749b125f294d9259bfab171947d15151e2e683e125ece3b66a319f5928eea334cf44f27f67eadc83e92ebe6c89ef8900ca3fa608639b402cd_0",
        "fix": "memset_s(document, 0, sizeof(yaml_document_t)",
        "is_ignored": false,
        "lines": "    memset(document, 0, sizeof(yaml_document_t));",
        "message": "When handling sensitive information in a buffer, it's important to ensure  that the data is securely erased before the buffer is deleted or reused.  While `memset()` is commonly used for this purpose, it can leave sensitive  information behind due to compiler optimizations or other factors.  To avoid this potential vulnerability, it's recommended to use the  `memset_s()` function instead. `memset_s()` is a standardized function  that securely overwrites the memory with a specified value, making it more  difficult for an attacker to recover any sensitive data that was stored in  the buffer. By using `memset_s()` instead of `memset()`, you can help to  ensure that your application is more secure and less vulnerable to exploits  that rely on residual data in memory.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-14: Compiler Removal of Code to Clear Buffers"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://cwe.mitre.org/data/definitions/14.html",
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UK7D",
              "url": "https://semgrep.dev/playground/r/e1T013E/c.lang.security.insecure-use-memset.insecure-use-memset",
              "version_id": "e1T013E"
            }
          },
          "shortlink": "https://sg.run/l9GE",
          "source": "https://semgrep.dev/r/c.lang.security.insecure-use-memset.insecure-use-memset",
          "subcategory": ["audit"],
          "technology": ["c"],
          "vulnerability_class": ["Memory Issues"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "document 0 sizeof yaml_document_t",
            "end": { "col": 47, "line": 1157, "offset": 30473 },
            "start": { "col": 12, "line": 1157, "offset": 30438 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/libyaml/api.c",
      "start": { "col": 5, "line": 1157, "offset": 30431 }
    },
    {
      "check_id": "c.lang.security.insecure-use-memset.insecure-use-memset",
      "end": { "col": 61, "line": 138, "offset": 3107 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5eeffcadc5a230e657dc85cf833cdb918f4cc3aa0ee64cc6327c01784672036bb5180d207bdf26f9c99265c69ef0f7b07cbe0b448f5f12d103ee40c91247f596_0",
        "fix": "memset_s(emitter->anchors, 0, sizeof(*(emitter->anchors))\n            * (document->nodes.top - document->nodes.start)",
        "is_ignored": false,
        "lines": "    memset(emitter->anchors, 0, sizeof(*(emitter->anchors))\n            * (document->nodes.top - document->nodes.start));",
        "message": "When handling sensitive information in a buffer, it's important to ensure  that the data is securely erased before the buffer is deleted or reused.  While `memset()` is commonly used for this purpose, it can leave sensitive  information behind due to compiler optimizations or other factors.  To avoid this potential vulnerability, it's recommended to use the  `memset_s()` function instead. `memset_s()` is a standardized function  that securely overwrites the memory with a specified value, making it more  difficult for an attacker to recover any sensitive data that was stored in  the buffer. By using `memset_s()` instead of `memset()`, you can help to  ensure that your application is more secure and less vulnerable to exploits  that rely on residual data in memory.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-14: Compiler Removal of Code to Clear Buffers"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://cwe.mitre.org/data/definitions/14.html",
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UK7D",
              "url": "https://semgrep.dev/playground/r/e1T013E/c.lang.security.insecure-use-memset.insecure-use-memset",
              "version_id": "e1T013E"
            }
          },
          "shortlink": "https://sg.run/l9GE",
          "source": "https://semgrep.dev/r/c.lang.security.insecure-use-memset.insecure-use-memset",
          "subcategory": ["audit"],
          "technology": ["c"],
          "vulnerability_class": ["Memory Issues"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "emitter->->anchors 0 sizeof*emitter->->anchors*document->->nodes...top-document->->nodes...start",
            "end": { "col": 59, "line": 138, "offset": 3105 },
            "start": { "col": 12, "line": 137, "offset": 2998 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/libyaml/dumper.c",
      "start": { "col": 5, "line": 137, "offset": 2991 }
    },
    {
      "check_id": "c.lang.security.insecure-use-memset.insecure-use-memset",
      "end": { "col": 49, "line": 94, "offset": 2037 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "066290cbcd8bb226fcb2821c56238941c827dc6486cea686a99351f399f8f7f4e92ea3dc91d2ff0fdeafb6ae22f8442fda84815e91d56192179be222d2187ec5_0",
        "fix": "memset_s(document, 0, sizeof(yaml_document_t)",
        "is_ignored": false,
        "lines": "    memset(document, 0, sizeof(yaml_document_t));",
        "message": "When handling sensitive information in a buffer, it's important to ensure  that the data is securely erased before the buffer is deleted or reused.  While `memset()` is commonly used for this purpose, it can leave sensitive  information behind due to compiler optimizations or other factors.  To avoid this potential vulnerability, it's recommended to use the  `memset_s()` function instead. `memset_s()` is a standardized function  that securely overwrites the memory with a specified value, making it more  difficult for an attacker to recover any sensitive data that was stored in  the buffer. By using `memset_s()` instead of `memset()`, you can help to  ensure that your application is more secure and less vulnerable to exploits  that rely on residual data in memory.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-14: Compiler Removal of Code to Clear Buffers"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://cwe.mitre.org/data/definitions/14.html",
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UK7D",
              "url": "https://semgrep.dev/playground/r/e1T013E/c.lang.security.insecure-use-memset.insecure-use-memset",
              "version_id": "e1T013E"
            }
          },
          "shortlink": "https://sg.run/l9GE",
          "source": "https://semgrep.dev/r/c.lang.security.insecure-use-memset.insecure-use-memset",
          "subcategory": ["audit"],
          "technology": ["c"],
          "vulnerability_class": ["Memory Issues"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "document 0 sizeof yaml_document_t",
            "end": { "col": 47, "line": 94, "offset": 2035 },
            "start": { "col": 12, "line": 94, "offset": 2000 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/libyaml/loader.c",
      "start": { "col": 5, "line": 94, "offset": 1993 }
    },
    {
      "check_id": "c.lang.security.insecure-use-memset.insecure-use-memset",
      "end": { "col": 43, "line": 177, "offset": 5875 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "b77ad55ec8bafb5b71f949c25d8b9fa8b853f5274b1833ec1d6cd1494eb7508726fcfa315a1016083a6bee2b11cf6db2d01fec2ae8c676b381c3309727f0fa41_0",
        "fix": "memset_s(event, 0, sizeof(yaml_event_t)",
        "is_ignored": false,
        "lines": "    memset(event, 0, sizeof(yaml_event_t));",
        "message": "When handling sensitive information in a buffer, it's important to ensure  that the data is securely erased before the buffer is deleted or reused.  While `memset()` is commonly used for this purpose, it can leave sensitive  information behind due to compiler optimizations or other factors.  To avoid this potential vulnerability, it's recommended to use the  `memset_s()` function instead. `memset_s()` is a standardized function  that securely overwrites the memory with a specified value, making it more  difficult for an attacker to recover any sensitive data that was stored in  the buffer. By using `memset_s()` instead of `memset()`, you can help to  ensure that your application is more secure and less vulnerable to exploits  that rely on residual data in memory.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-14: Compiler Removal of Code to Clear Buffers"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://cwe.mitre.org/data/definitions/14.html",
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UK7D",
              "url": "https://semgrep.dev/playground/r/e1T013E/c.lang.security.insecure-use-memset.insecure-use-memset",
              "version_id": "e1T013E"
            }
          },
          "shortlink": "https://sg.run/l9GE",
          "source": "https://semgrep.dev/r/c.lang.security.insecure-use-memset.insecure-use-memset",
          "subcategory": ["audit"],
          "technology": ["c"],
          "vulnerability_class": ["Memory Issues"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "event 0 sizeof yaml_event_t",
            "end": { "col": 41, "line": 177, "offset": 5873 },
            "start": { "col": 12, "line": 177, "offset": 5844 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "js/libyaml/parser.c",
      "start": { "col": 5, "line": 177, "offset": 5837 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 27, "line": 32, "offset": 1160 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "4d1d919031a34b55e73696f623c56c6b2231b4ec6466082a4eedeb3530693d6b6a97d410343e386cf837f31d54ff4d6b7604a4a9b29e8a0bc905eb165d032c6b_0",
        "is_ignored": false,
        "lines": "        let l = input_line chan in",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "languages/php/ast/lib_parsing_php.ml",
      "start": { "col": 17, "line": 32, "offset": 1150 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 21, "line": 439, "offset": 15801 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "324989637304a147ed49e0344059ee442904a1046218c9789edf0e08afd9a55c9acddf9a4186e670788f174ae0bdce3cc008d63f71487077b934cba731b2c1a3_0",
        "is_ignored": false,
        "lines": "  let s = input_line ic in",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/Common.ml",
      "start": { "col": 11, "line": 439, "offset": 15791 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 23, "line": 45, "offset": 1549 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "0b6fdd0412256f6cd44b558eaf1db1e55adf4aa04747559f6a9f2e68a0ee4c8e83bad2455d5fa28ac779a67c40c232412082496c9a9a3dc2d4d1a5bd66e098fe_0",
        "is_ignored": false,
        "lines": "    let e = input_line chan in",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/UCommon.ml",
      "start": { "col": 13, "line": 45, "offset": 1539 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 41, "line": 342, "offset": 9889 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_0",
        "is_ignored": false,
        "lines": "  let filename = spf \"/tmp/debugml%d:%d\" (UUnix.getuid ()) (UUnix.getpid ()) in",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 22, "line": 342, "offset": 9870 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 47, "line": 828, "offset": 23592 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_1",
        "is_ignored": false,
        "lines": "  let c = UStdlib.open_out_bin \"/tmp/ttttt.ml\" in",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 32, "line": 828, "offset": 23577 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 56, "line": 834, "offset": 23798 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_2",
        "is_ignored": false,
        "lines": "  command2 \"camlp4o ./macro.cmo pr_o.cmo /tmp/ttttt.ml\";",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 12, "line": 834, "offset": 23754 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 33, "line": 835, "offset": 23832 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_3",
        "is_ignored": false,
        "lines": "  command2 \"rm -f /tmp/ttttt.ml\"",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 12, "line": 835, "offset": 23811 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 25, "line": 2642, "offset": 75511 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "954fd2cdfb94c378418121c45c91ff347ac3e8fe689ec2a34b857fde1e93a5a94b926416597905c0765c8ed65bcc15fae988efef2fc17c674b195fa7b1b011e2_0",
        "is_ignored": false,
        "lines": "      let l = input_line chan in",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 15, "line": 2642, "offset": 75501 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 28, "line": 2655, "offset": 75845 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "954fd2cdfb94c378418121c45c91ff347ac3e8fe689ec2a34b857fde1e93a5a94b926416597905c0765c8ed65bcc15fae988efef2fc17c674b195fa7b1b011e2_1",
        "is_ignored": false,
        "lines": "      try (true, input_line chan) with",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 18, "line": 2655, "offset": 75835 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 32, "line": 2677, "offset": 76405 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "954fd2cdfb94c378418121c45c91ff347ac3e8fe689ec2a34b857fde1e93a5a94b926416597905c0765c8ed65bcc15fae988efef2fc17c674b195fa7b1b011e2_2",
        "is_ignored": false,
        "lines": "          try (true, input_line chan) with",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 22, "line": 2677, "offset": 76395 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 53, "line": 2690, "offset": 76787 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_4",
        "is_ignored": false,
        "lines": "  command2 (\"printf \\\"%s\\\\n\\\" \" ^ str ^ \">/tmp/caml\");",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 41, "line": 2690, "offset": 76775 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 18, "line": 2691, "offset": 76807 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_5",
        "is_ignored": false,
        "lines": "  cat \"/tmp/caml\"",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 7, "line": 2691, "offset": 76796 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 23, "line": 2727, "offset": 77586 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "954fd2cdfb94c378418121c45c91ff347ac3e8fe689ec2a34b857fde1e93a5a94b926416597905c0765c8ed65bcc15fae988efef2fc17c674b195fa7b1b011e2_3",
        "is_ignored": false,
        "lines": "    let e = input_line chan in",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 13, "line": 2727, "offset": 77576 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 28, "line": 4987, "offset": 144039 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_6",
        "is_ignored": false,
        "lines": "  let file1 = \"/tmp/diff1-\" ^ string_of_int (UUnix.getuid ()) in",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 15, "line": 4987, "offset": 144026 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 28, "line": 4988, "offset": 144104 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_7",
        "is_ignored": false,
        "lines": "  let file2 = \"/tmp/diff2-\" ^ string_of_int (UUnix.getuid ()) in",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 15, "line": 4988, "offset": 144091 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 38, "line": 4989, "offset": 144179 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_8",
        "is_ignored": false,
        "lines": "  let fileresult = \"/tmp/diffresult-\" ^ string_of_int (UUnix.getuid ()) in",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 20, "line": 4989, "offset": 144161 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 26, "line": 5031, "offset": 145286 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_9",
        "is_ignored": false,
        "lines": "  write_file \"/tmp/diff1\" xstr;",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 14, "line": 5031, "offset": 145274 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 26, "line": 5032, "offset": 145318 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_10",
        "is_ignored": false,
        "lines": "  write_file \"/tmp/diff2\" ystr;",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 14, "line": 5032, "offset": 145306 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 47, "line": 5035, "offset": 145429 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_11",
        "is_ignored": false,
        "lines": "   ^ \"/tmp/diff1 /tmp/diff2 > /tmp/diffresult\");",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 6, "line": 5035, "offset": 145388 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 34, "line": 5036, "offset": 145465 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_12",
        "is_ignored": false,
        "lines": "  let res = cat \"/tmp/diffresult\" in",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 17, "line": 5036, "offset": 145448 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 25, "line": 5567, "offset": 161348 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "954fd2cdfb94c378418121c45c91ff347ac3e8fe689ec2a34b857fde1e93a5a94b926416597905c0765c8ed65bcc15fae988efef2fc17c674b195fa7b1b011e2_4",
        "is_ignored": false,
        "lines": "    let cur = input_line i in",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 15, "line": 5567, "offset": 161338 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 37, "line": 5749, "offset": 166268 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_13",
        "is_ignored": false,
        "lines": "  write_value v \"/tmp/generic_print\";",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 17, "line": 5749, "offset": 166248 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 77, "line": 5751, "offset": 166357 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_14",
        "is_ignored": false,
        "lines": "    (\"printf 'let (v:\" ^ typ ^ \")= Common.get_value \\\"/tmp/generic_print\\\" \"",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 32, "line": 5751, "offset": 166312 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 61, "line": 5752, "offset": 166418 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_15",
        "is_ignored": false,
        "lines": "   ^ \" in v;;' \" ^ \" | calc.top > /tmp/result_generic_print\");",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 20, "line": 5752, "offset": 166377 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 34, "line": 5753, "offset": 166454 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2de1d20368d3e14e90783b06130dce36bf274a7172edcabed40428977325d54fb17add0d9b01219ed7d5bd7cdfa31058b8a5feca3ed6379d83dfb220e82f1909_16",
        "is_ignored": false,
        "lines": "  cat \"/tmp/result_generic_print\"",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/commons/common2.ml",
      "start": { "col": 7, "line": 5753, "offset": 166427 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 31, "line": 172, "offset": 6842 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "cba5678f828924c3d07cbbdee769f6def03e1e8a6bbc9749461fa9f337b80bec0df6cc04c0f3fe4ed3c07585f078717fa1e71e9a97496f1f1a17c881a5cef59e_0",
        "is_ignored": false,
        "lines": "          try Some (input_line chan) with",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/lib_parsing/Parsing_helpers.ml",
      "start": { "col": 21, "line": 172, "offset": 6832 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 31, "line": 184, "offset": 6961 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "124620a54c546382cb24276aac80914d6d3ba97f40711485d0a9e10a145cfff0e324a7e1d97f1d2ed7588572a91405e78221dce2068afbc9445eac63445ce6bc_0",
        "is_ignored": false,
        "lines": "            let s = input_line chan in",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/lib_parsing/Pos.ml",
      "start": { "col": 21, "line": 184, "offset": 6951 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 31, "line": 52, "offset": 1800 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "b95ddbd666caac81655c6baffe9e2a2cd2e752ee15193dc7dc84a9ce38882602005ac40d18c241848fc0f71cb09936bdbb4db967bdc402422b3e22d3c7500082_0",
        "is_ignored": false,
        "lines": "            let s = input_line chan in",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/lib_parsing_tree_sitter/Parse_tree_sitter_helpers.ml",
      "start": { "col": 21, "line": 52, "offset": 1790 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 34, "line": 267, "offset": 8412 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "43162421b52f51e85fc244924722c5625833a2e438323936e7dd78d403321075a59760c626340198635304e9f46519d466c7c4e865a165cee11afc6a103def2e_0",
        "is_ignored": false,
        "lines": "           let uname = input_line ic in",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/ograph/ograph_extended.ml",
      "start": { "col": 24, "line": 267, "offset": 8402 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 37, "line": 46, "offset": 1205 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "8c698357fa0074f0378944c37aa58c92b6313caacbb1452635ad63a73ba8e26087feca1cefcc534bc505624c2b236df8bb5e9f34aa2031d6b4852aef1875bc87_0",
        "is_ignored": false,
        "lines": "      bprintf buf \"%s\\n\" (input_line ic)",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "libs/spacegrep/src/lib/Src_file.ml",
      "start": { "col": 27, "line": 46, "offset": 1195 }
    },
    {
      "check_id": "java.lang.security.audit.crlf-injection-logs.crlf-injection-logs",
      "end": { "col": 24, "line": 44, "offset": 874 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "b0525cf5e97f9d7c18434898e74b003b97f50959e813dc76440a1d7f5f4e4f697539f1a6442afbee2ace52ad7d9be023e09a47efa746a25045bf158ed363cda9_0",
        "is_ignored": false,
        "lines": "        String val = req.getParameter(\"here\");\n        log.level(val);",
        "message": "When data from an untrusted source is put into a logger and not neutralized correctly, an attacker could forge log entries or include malicious content.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUjwW",
              "url": "https://semgrep.dev/playground/r/RGTDk8b/java.lang.security.audit.crlf-injection-logs.crlf-injection-logs",
              "version_id": "RGTDk8b"
            }
          },
          "shortlink": "https://sg.run/wek0",
          "source": "https://semgrep.dev/r/java.lang.security.audit.crlf-injection-logs.crlf-injection-logs",
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#CRLF_INJECTION_LOGS",
          "subcategory": ["vuln"],
          "technology": ["java"],
          "vulnerability_class": ["Improper Validation"]
        },
        "metavars": {
          "$CLASS": {
            "abstract_content": "ExampleErrorClass",
            "end": { "col": 31, "line": 16, "offset": 362 },
            "start": { "col": 14, "line": 16, "offset": 345 }
          },
          "$LEVEL": {
            "abstract_content": "level",
            "end": { "col": 18, "line": 44, "offset": 868 },
            "start": { "col": 13, "line": 44, "offset": 863 }
          },
          "$LOG": {
            "abstract_content": "log",
            "end": { "col": 12, "line": 44, "offset": 862 },
            "start": { "col": 9, "line": 44, "offset": 859 }
          },
          "$METHOD": {
            "abstract_content": "badMethod",
            "end": { "col": 28, "line": 42, "offset": 777 },
            "start": { "col": 19, "line": 42, "offset": 768 }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": { "col": 25, "line": 43, "offset": 828 },
            "start": { "col": 22, "line": 43, "offset": 825 }
          },
          "$VAL": {
            "abstract_content": "val",
            "end": { "col": 19, "line": 43, "offset": 822 },
            "start": { "col": 16, "line": 43, "offset": 819 }
          },
          "$X": {
            "abstract_content": "String",
            "end": { "col": 18, "line": 42, "offset": 767 },
            "start": { "col": 12, "line": 42, "offset": 761 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "perf/perf-matching/input/l5000.java",
      "start": { "col": 9, "line": 43, "offset": 812 }
    },
    {
      "check_id": "ocaml.lang.portability.crlf-support.broken-input-line",
      "end": { "col": 21, "line": 95, "offset": 2424 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "0df3828c3d29d37d8c2e41d5e10d1e200e4fa6192c374203e6609da897b7fb158cb936a750d997913473b9d2cc35cdace871760c774fb42a7066d6033f5fd79c_0",
        "is_ignored": false,
        "lines": "      try input_line ic with",
        "message": "'input_line' leaves a '\\r' (CR) character when reading lines from a Windows text file, whose lines end in \"\\r\\n\" (CRLF). This is a problem for any Windows file that is being read either on a Unix-like platform or on Windows in binary mode. If the code already takes care of removing any trailing '\\r' after reading the line, add a '(* nosemgrep *)' comment to disable this warning.",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUKZX",
              "url": "https://semgrep.dev/playground/r/7ZTgo3q/ocaml.lang.portability.crlf-support.broken-input-line",
              "version_id": "7ZTgo3q"
            }
          },
          "shortlink": "https://sg.run/v2gY",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.crlf-support.broken-input-line",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "src/targeting/Guess_lang.ml",
      "start": { "col": 11, "line": 95, "offset": 2414 }
    },
    {
      "check_id": "python.lang.compatibility.python36.python36-compatibility-Popen2",
      "end": { "col": 6, "line": 14, "offset": 314 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c6b004f77bd9f073a7e9008044c39dd4b4a59e249abff4e565a89e51620786933e618f4e23dd78d645de777dcf1205032ae1fcf7162a2f6ac2bd00d4df039c88_0",
        "is_ignored": false,
        "lines": "    p36 = sub.Popen(\n        [sys.executable, \"-c\", script], encoding=encoding, stdout=subprocess.PIPE\n    )",
        "message": "the `encoding` argument to Popen is only available on Python 3.6+",
        "metadata": {
          "category": "compatibility",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "EwU2n3",
              "url": "https://semgrep.dev/playground/r/pZT1y9P/python.lang.compatibility.python36.python36-compatibility-Popen2",
              "version_id": "pZT1y9P"
            }
          },
          "shortlink": "https://sg.run/x1Dg",
          "source": "https://semgrep.dev/r/python.lang.compatibility.python36.python36-compatibility-Popen2",
          "technology": ["python"]
        },
        "metavars": {
          "$X": {
            "abstract_content": "encoding",
            "end": { "col": 58, "line": 13, "offset": 284 },
            "start": { "col": 50, "line": 13, "offset": 276 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/TODO/imports2.py",
      "start": { "col": 11, "line": 12, "offset": 216 }
    },
    {
      "check_id": "python.lang.security.audit.eval-detected.eval-detected",
      "end": { "col": 24, "line": 2, "offset": 34 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "3c07db2860aa9f956198f3eae615af0ab3f18e3a76fe5c87cf58e4b30acc76d6d3402873fc60604179ea6046dca0234a59d248504c0bc3ff898a5d76d907b954_0",
        "is_ignored": false,
        "lines": "  while i < 1 + eval(2):",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "gxU149",
              "url": "https://semgrep.dev/playground/r/DkT6Yd0/python.lang.security.audit.eval-detected.eval-detected",
              "version_id": "DkT6Yd0"
            }
          },
          "shortlink": "https://sg.run/ZvrD",
          "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/misc/controlflow/while.py",
      "start": { "col": 17, "line": 2, "offset": 27 }
    },
    {
      "check_id": "python.lang.security.audit.eval-detected.eval-detected",
      "end": { "col": 15, "line": 2, "offset": 25 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "e2a4dbfef60583eea37ab79dba7d16f608724efda328488c310c7551f70ce975ab0a18e3b48458c3f07d03507f5ef2c8167de48b0a39e9f24493ca713aa4adcc_0",
        "is_ignored": false,
        "lines": "  a = [eval(1), 2, 3]",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "gxU149",
              "url": "https://semgrep.dev/playground/r/DkT6Yd0/python.lang.security.audit.eval-detected.eval-detected",
              "version_id": "DkT6Yd0"
            }
          },
          "shortlink": "https://sg.run/ZvrD",
          "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/misc/il/container.py",
      "start": { "col": 8, "line": 2, "offset": 18 }
    },
    {
      "check_id": "javascript.browser.security.eval-detected.eval-detected",
      "end": { "col": 16, "line": 4, "offset": 52 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "a94cf4b32f05868bc370b603e1ca965b26280046d19f996d4b150fea0d2df13eca82e48ce49cf4782a2adb1084c09a4ef5a2fcafd0b40cf9f86d310b54839541_0",
        "is_ignored": false,
        "lines": "        eval(2);",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dynamic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing",
            "section": "V5 Validation, Sanitization and Encoding",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "GdU7dw",
              "url": "https://semgrep.dev/playground/r/xyTKZ6r/javascript.browser.security.eval-detected.eval-detected",
              "version_id": "xyTKZ6r"
            }
          },
          "shortlink": "https://sg.run/7ope",
          "source": "https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/misc/il/dowhile.js",
      "start": { "col": 9, "line": 4, "offset": 45 }
    },
    {
      "check_id": "javascript.browser.security.eval-detected.eval-detected",
      "end": { "col": 29, "line": 5, "offset": 82 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "a94cf4b32f05868bc370b603e1ca965b26280046d19f996d4b150fea0d2df13eca82e48ce49cf4782a2adb1084c09a4ef5a2fcafd0b40cf9f86d310b54839541_1",
        "is_ignored": false,
        "lines": "    } while (i < 1 + eval(2));",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dynamic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing",
            "section": "V5 Validation, Sanitization and Encoding",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "GdU7dw",
              "url": "https://semgrep.dev/playground/r/xyTKZ6r/javascript.browser.security.eval-detected.eval-detected",
              "version_id": "xyTKZ6r"
            }
          },
          "shortlink": "https://sg.run/7ope",
          "source": "https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/misc/il/dowhile.js",
      "start": { "col": 22, "line": 5, "offset": 75 }
    },
    {
      "check_id": "python.lang.security.audit.eval-detected.eval-detected",
      "end": { "col": 12, "line": 3, "offset": 45 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6ad3de49de36fc1092e709dec26cf472e488473746b3be1f4746e5a87a599a8e334d08e16a329311da83f262b2e10b773ce7df4bb4ca7e199b7e06846127b1d2_0",
        "is_ignored": false,
        "lines": "    eval(i)",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "gxU149",
              "url": "https://semgrep.dev/playground/r/DkT6Yd0/python.lang.security.audit.eval-detected.eval-detected",
              "version_id": "DkT6Yd0"
            }
          },
          "shortlink": "https://sg.run/ZvrD",
          "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/misc/il/foreach.py",
      "start": { "col": 5, "line": 3, "offset": 38 }
    },
    {
      "check_id": "python.lang.security.audit.eval-detected.eval-detected",
      "end": { "col": 24, "line": 2, "offset": 34 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6708ed3c9446133b59cbe2a054af20c2adc21a55a8271a995fc7f15f915947427a1c148c5b5d83769fd79bdd7715ce8f6bb6a986bdb5bf81754aa509e1cb1876_0",
        "is_ignored": false,
        "lines": "  while i < 1 + eval(2):",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "gxU149",
              "url": "https://semgrep.dev/playground/r/DkT6Yd0/python.lang.security.audit.eval-detected.eval-detected",
              "version_id": "DkT6Yd0"
            }
          },
          "shortlink": "https://sg.run/ZvrD",
          "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/misc/il/while.py",
      "start": { "col": 17, "line": 2, "offset": 27 }
    },
    {
      "check_id": "python.django.security.injection.path-traversal.path-traversal-open.path-traversal-open",
      "end": { "col": 15, "line": 4, "offset": 96 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "b3c0ed402897bb61f40022449e90532156e30ac74900b2153b59189da99ec863ad666819b8f9567e314cde416e522d3c6f410cf7016abeb03a9227004d2687be_0",
        "is_ignored": false,
        "lines": "    path = request.get(\"unsafe\")\n    open(path)",
        "message": "Found request data in a call to 'open'. Ensure the request data is validated or sanitized, otherwise it could result in path traversal attacks and therefore sensitive data being leaked. To mitigate, consider using os.path.abspath or os.path.realpath or the pathlib library.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "oqUe7z",
              "url": "https://semgrep.dev/playground/r/d6TrADQ/python.django.security.injection.path-traversal.path-traversal-open.path-traversal-open",
              "version_id": "d6TrADQ"
            }
          },
          "shortlink": "https://sg.run/W8qg",
          "source": "https://semgrep.dev/r/python.django.security.injection.path-traversal.path-traversal-open.path-traversal-open",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "path",
            "end": { "col": 9, "line": 3, "offset": 57 },
            "start": { "col": 5, "line": 3, "offset": 53 }
          },
          "$FUNC": {
            "abstract_content": "foo",
            "end": { "col": 8, "line": 1, "offset": 7 },
            "start": { "col": 5, "line": 1, "offset": 4 }
          },
          "$W": {
            "abstract_content": "get",
            "end": { "col": 23, "line": 3, "offset": 71 },
            "start": { "col": 20, "line": 3, "offset": 68 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/misc/naming/inside.py",
      "start": { "col": 5, "line": 3, "offset": 53 }
    },
    {
      "check_id": "python.lang.security.audit.eval-detected.eval-detected",
      "end": { "col": 10, "line": 12, "offset": 178 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "3f89ce2f2a931261b69d6d05e7e516daa3e638d482dbe4692a6eb83174256802552fb649507120a520ad8ee6ae2a7ee7919fdbd6697ab89d79951ab4b8efe308_0",
        "is_ignored": false,
        "lines": "  eval(a)",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "gxU149",
              "url": "https://semgrep.dev/playground/r/DkT6Yd0/python.lang.security.audit.eval-detected.eval-detected",
              "version_id": "DkT6Yd0"
            }
          },
          "shortlink": "https://sg.run/ZvrD",
          "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/misc/tainting/tainting2.py",
      "start": { "col": 3, "line": 12, "offset": 171 }
    },
    {
      "check_id": "python.lang.security.audit.eval-detected.eval-detected",
      "end": { "col": 10, "line": 19, "offset": 265 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "3f89ce2f2a931261b69d6d05e7e516daa3e638d482dbe4692a6eb83174256802552fb649507120a520ad8ee6ae2a7ee7919fdbd6697ab89d79951ab4b8efe308_1",
        "is_ignored": false,
        "lines": "  eval(b)",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "gxU149",
              "url": "https://semgrep.dev/playground/r/DkT6Yd0/python.lang.security.audit.eval-detected.eval-detected",
              "version_id": "DkT6Yd0"
            }
          },
          "shortlink": "https://sg.run/ZvrD",
          "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/misc/tainting/tainting2.py",
      "start": { "col": 3, "line": 19, "offset": 258 }
    },
    {
      "check_id": "python.django.security.audit.extends-custom-expression.extends-custom-expression",
      "end": { "col": 58, "line": 8, "offset": 266 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "812333cebdef4bec8e858b8eeaedf765474c3c4d09cfa2bfd0c5751730eea02e3c1fb0451cad7977f02db149a312ef003d8d7b704232b58d45499f42e8d7a28c_0",
        "is_ignored": false,
        "lines": "class Position(Func):\n    function = 'POSITION'\n    template = \"%(function)s('%(substring)s' in %(expressions)s)\"\n\n    def __init__(self, expression, substring):\n        super().__init__(expression, substring=substring)",
        "message": "Found extension of custom expression: Position. Extending expressions in this way could inadvertently lead to a SQL injection vulnerability, which can result in attackers exfiltrating sensitive data. Instead, ensure no user input enters this function or that user input is properly sanitized.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.djangoproject.com/en/3.0/ref/models/expressions/#avoiding-sql-injection",
            "https://semgrep.dev/blog/2020/preventing-sql-injection-a-django-authors-perspective/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "ZqU5z3",
              "url": "https://semgrep.dev/playground/r/0bTLl4p/python.django.security.audit.extends-custom-expression.extends-custom-expression",
              "version_id": "0bTLl4p"
            }
          },
          "shortlink": "https://sg.run/N4Ay",
          "source": "https://semgrep.dev/r/python.django.security.audit.extends-custom-expression.extends-custom-expression",
          "subcategory": ["audit"],
          "technology": ["django"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CLASS": {
            "abstract_content": "Position",
            "end": { "col": 15, "line": 3, "offset": 61 },
            "start": { "col": 7, "line": 3, "offset": 53 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/naming/python/regression1.py",
      "start": { "col": 1, "line": 3, "offset": 47 }
    },
    {
      "check_id": "terraform.lang.security.s3-public-read-bucket.s3-public-read-bucket",
      "end": { "col": 25, "line": 3, "offset": 98 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "e345c508a79b67e5b1cbeac2b7f397f9749244c235c55a89d669042076593378b11ee4db6d9e8ed4082541da6bbe76405d1ff08a277373732f101e3547a81d9e_0",
        "is_ignored": false,
        "lines": "  acl    = \"public-read\"",
        "message": "S3 bucket with public read access detected.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor"
          ],
          "cwe2021-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#acl",
            "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUrp5",
              "url": "https://semgrep.dev/playground/r/yeTRZqN/terraform.lang.security.s3-public-read-bucket.s3-public-read-bucket",
              "version_id": "yeTRZqN"
            }
          },
          "shortlink": "https://sg.run/WgAy",
          "source": "https://semgrep.dev/r/terraform.lang.security.s3-public-read-bucket.s3-public-read-bucket",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Mishandled Sensitive Information"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/parsing/terraform/simple.tf",
      "start": { "col": 3, "line": 3, "offset": 76 }
    },
    {
      "check_id": "terraform.lang.security.s3-cors-all-origins.all-origins-allowed",
      "end": { "col": 28, "line": 9, "offset": 241 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "d639d15c35dcd3ab9ae356125b478a74510cbc882edcf0d6b62a8af15c4355f29e14ea12aa909c1c1dc49e70a0cae3d5246dc4db2130e788e18f3618d37cf3ec_0",
        "is_ignored": false,
        "lines": "    allowed_origins = [\"*\"]",
        "message": "CORS rule on bucket permits any origin",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-942: Permissive Cross-domain Policy with Untrusted Domains"
          ],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A05:2021 - Security Misconfiguration"],
          "references": [
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#using-cors"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "lBUd4g",
              "url": "https://semgrep.dev/playground/r/9lTd53Z/terraform.lang.security.s3-cors-all-origins.all-origins-allowed",
              "version_id": "9lTd53Z"
            }
          },
          "shortlink": "https://sg.run/DJb2",
          "source": "https://semgrep.dev/r/terraform.lang.security.s3-cors-all-origins.all-origins-allowed",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Improper Validation"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/parsing/terraform/simple.tf",
      "start": { "col": 5, "line": 9, "offset": 218 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 15, "line": 4, "offset": 36 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "75a0cca2eca7e5e36d865be769f8ac1c4841ff67dd487ad8e137ed194f5425a58e86675cbe94be7571b4e224debbd095643f62eaf785e204b0e57835d124713e_0",
        "fix": "USER non-root\nCMD echo hello",
        "is_ignored": false,
        "lines": "CMD echo hello",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "echo echo echo echo hello hello",
            "end": { "col": 15, "line": 4, "offset": 36 },
            "start": { "col": 5, "line": 4, "offset": 26 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/cmd-shell.dockerfile",
      "start": { "col": 1, "line": 4, "offset": 22 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 6, "line": 8, "offset": 61 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "4789914a8c00fb58c304cbc83fa4ea2a80b021c25d664a7ac958e110496c63f12d5d21da6add0193cb048f7e5cea35bbc4501b3108a7949d0c39aa92ee825b60_0",
        "fix": "USER non-root\nCMD ls \\\n  | t",
        "is_ignored": false,
        "lines": "CMD ls \\\n  | tac",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "ls ls ls ls ls|tac tac tac tac",
            "end": { "col": 6, "line": 8, "offset": 61 },
            "start": { "col": 5, "line": 7, "offset": 51 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/cmd-shell.dockerfile",
      "start": { "col": 1, "line": 7, "offset": 47 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 3, "line": 12, "offset": 85 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6f1b2fb66be1bb19f98889a43b20590c3908382b7d162e2998dc76dd3f199082d3c0460b4991ef2acf92c75d62a3a9a366d1ac51108fa01821f94a51e7f5a74d_0",
        "fix": "USER non-root\nCMD ls \\",
        "is_ignored": false,
        "lines": "CMD ls \\\n  -l",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "ls ls ls ls-l-l",
            "end": { "col": 3, "line": 12, "offset": 85 },
            "start": { "col": 5, "line": 11, "offset": 78 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/cmd-shell.dockerfile",
      "start": { "col": 1, "line": 11, "offset": 74 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 9, "line": 17, "offset": 130 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "19ae9ea09574100c32c72c5b97b44359f3a3f6ff02a3c27c92d1de59cf10e1271a6a60f3b5d6d45f30d2dea1b88476cb3e72b7b121ba648e88e780abf644b955_0",
        "fix": "USER non-root\nCMD ls \\\n  -l; # blah \\\n  echo y",
        "is_ignored": false,
        "lines": "CMD ls \\\n  -l; # blah \\\n  echo yay",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "ls ls ls ls-l-l echo echo echo echo yay yay",
            "end": { "col": 9, "line": 17, "offset": 130 },
            "start": { "col": 5, "line": 15, "offset": 102 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/cmd-shell.dockerfile",
      "start": { "col": 1, "line": 15, "offset": 98 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 29, "line": 20, "offset": 171 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "d13191f10628afbf97d6a527bb8f2ecba07eb4feec7f383c1cee1c51df0d24f1721757a6dd53d6a8e6d6c9edbedb3a24c665e12769cd6f558c7bad1a603a41ab_0",
        "fix": "USER non-root\nCMD f() { echo hello; }; f &",
        "is_ignored": false,
        "lines": "CMD f() { echo hello; }; f &",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "f f{echo echo echo echo hello hello}f f f f f&",
            "end": { "col": 29, "line": 20, "offset": 171 },
            "start": { "col": 5, "line": 20, "offset": 147 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/cmd-shell.dockerfile",
      "start": { "col": 1, "line": 20, "offset": 143 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 15, "line": 4, "offset": 36 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "3d3d9e2d6e6431891d62b2606615f64df047ea1e4ed4e32eda2f93b264ec106399899c41b1ac4be9fa3d7a788cd91560c9ed5f490a1a72290dd981d312d99d44_0",
        "fix": "USER non-root\nCMD echo hello",
        "is_ignored": false,
        "lines": "CMD echo hello",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "echo echo echo echo hello hello",
            "end": { "col": 15, "line": 4, "offset": 36 },
            "start": { "col": 5, "line": 4, "offset": 26 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/cmd.dockerfile",
      "start": { "col": 1, "line": 4, "offset": 22 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 6, "line": 8, "offset": 61 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "bd78f615d4b9293220bf071acaf54b5f99ec6b298554d346f7cab0c12e341c2c091b95e567a90ed814f9d6db349762c31d213163e68712d683e0065689f6ae89_0",
        "fix": "USER non-root\nCMD ls \\\n  | t",
        "is_ignored": false,
        "lines": "CMD ls \\\n  | tac",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "ls ls ls ls ls|tac tac tac tac",
            "end": { "col": 6, "line": 8, "offset": 61 },
            "start": { "col": 5, "line": 7, "offset": 51 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/cmd.dockerfile",
      "start": { "col": 1, "line": 7, "offset": 47 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 3, "line": 12, "offset": 85 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "08eecc02b91f1c2a9f1f8acc3c6d50f7adec41e27daf37904c3de77e49af2ae2c5fac389f5772dc7ac3b24f8b43e28052a73398f9cdbd8d51cc59b2c622b06bb_0",
        "fix": "USER non-root\nCMD ls \\",
        "is_ignored": false,
        "lines": "CMD ls \\\n  -l",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "ls ls ls ls-l-l",
            "end": { "col": 3, "line": 12, "offset": 85 },
            "start": { "col": 5, "line": 11, "offset": 78 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/cmd.dockerfile",
      "start": { "col": 1, "line": 11, "offset": 74 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 9, "line": 17, "offset": 130 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "a6403e68b69379c4eba89b81368982dca09998f9e1b25a2c1b342f7d91fe01fea1e92db3f0cf259d3ae8afb9d37f4c2219f001d2f7f890a0be1a57ae2aedc03f_0",
        "fix": "USER non-root\nCMD ls \\\n  -l; # blah \\\n  echo y",
        "is_ignored": false,
        "lines": "CMD ls \\\n  -l; # blah \\\n  echo yay",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "ls ls ls ls-l-l echo echo echo echo yay yay",
            "end": { "col": 9, "line": 17, "offset": 130 },
            "start": { "col": 5, "line": 15, "offset": 102 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/cmd.dockerfile",
      "start": { "col": 1, "line": 15, "offset": 98 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 48, "line": 2, "offset": 56 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "3b5f77759add68cb7ff99fa44da6bc15cf4f980240612f410975219c2c894bcdd1eb634874180a28332032fd21019499c7c685614b0fd8c80be2eb383ea9d517_0",
        "fix": "USER non-root\nCMD echo",
        "is_ignored": false,
        "lines": "HEALTHCHECK --interval=5m --timeout=3s CMD echo",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "echo echo echo echo echo",
            "end": { "col": 48, "line": 2, "offset": 56 },
            "start": { "col": 44, "line": 2, "offset": 52 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/healthcheck-metavar.dockerfile",
      "start": { "col": 1, "line": 2, "offset": 9 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 27, "line": 7, "offset": 80 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "afaad9cc13b1ae25addc3abcf5bc28354b026f1483a4d882b3e9f2cec259ce38be16ea5a67cb4df3aa29e4b284edebdb27802a9acd57554fb6b11457f89a3e41_0",
        "fix": "USER non-root\nCMD echo hello",
        "is_ignored": false,
        "lines": "HEALTHCHECK CMD echo hello",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "echo echo echo echo hello hello",
            "end": { "col": 27, "line": 7, "offset": 80 },
            "start": { "col": 17, "line": 7, "offset": 70 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/healthcheck-none.dockerfile",
      "start": { "col": 1, "line": 7, "offset": 54 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 53, "line": 9, "offset": 134 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "afaad9cc13b1ae25addc3abcf5bc28354b026f1483a4d882b3e9f2cec259ce38be16ea5a67cb4df3aa29e4b284edebdb27802a9acd57554fb6b11457f89a3e41_1",
        "fix": "USER non-root\nCMD echo hello",
        "is_ignored": false,
        "lines": "HEALTHCHECK --timeout=60s --retries=2 CMD echo hello",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "echo echo echo echo hello hello",
            "end": { "col": 53, "line": 9, "offset": 134 },
            "start": { "col": 43, "line": 9, "offset": 124 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/healthcheck-none.dockerfile",
      "start": { "col": 1, "line": 9, "offset": 82 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 27, "line": 3, "offset": 44 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "ba5c0ce98e430fa4c2ec99a5be88502d1e3e85af2cd4a128da10db89ab89f7b97b93f9d79b1de5e0b96ab57772c01a419c3107ccbe24a3094e7518014cf42110_0",
        "fix": "USER non-root\nCMD echo hello",
        "is_ignored": false,
        "lines": "HEALTHCHECK CMD echo hello",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "echo echo echo echo hello hello",
            "end": { "col": 27, "line": 3, "offset": 44 },
            "start": { "col": 17, "line": 3, "offset": 34 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/healthcheck-options.dockerfile",
      "start": { "col": 1, "line": 3, "offset": 18 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 53, "line": 6, "offset": 107 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "ba5c0ce98e430fa4c2ec99a5be88502d1e3e85af2cd4a128da10db89ab89f7b97b93f9d79b1de5e0b96ab57772c01a419c3107ccbe24a3094e7518014cf42110_1",
        "fix": "USER non-root\nCMD echo hello",
        "is_ignored": false,
        "lines": "HEALTHCHECK --timeout=60s --retries=2 CMD echo hello",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "echo echo echo echo hello hello",
            "end": { "col": 53, "line": 6, "offset": 107 },
            "start": { "col": 43, "line": 6, "offset": 97 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/healthcheck-options.dockerfile",
      "start": { "col": 1, "line": 6, "offset": 55 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 27, "line": 4, "offset": 53 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "9f63229aa81bc608c2f2c77d447881de63e8239c38fd2bdc5981b7727d3ddfaa57e8f485c86a9b2c89fa5a823b1e81e54d7b520e11c91a7cd7be59e381fccfb8_0",
        "fix": "USER non-root\nCMD echo hello",
        "is_ignored": false,
        "lines": "HEALTHCHECK CMD echo hello",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "echo echo echo echo hello hello",
            "end": { "col": 27, "line": 4, "offset": 53 },
            "start": { "col": 17, "line": 4, "offset": 43 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/healthcheck.dockerfile",
      "start": { "col": 1, "line": 4, "offset": 27 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 53, "line": 7, "offset": 116 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "9f63229aa81bc608c2f2c77d447881de63e8239c38fd2bdc5981b7727d3ddfaa57e8f485c86a9b2c89fa5a823b1e81e54d7b520e11c91a7cd7be59e381fccfb8_1",
        "fix": "USER non-root\nCMD echo hello",
        "is_ignored": false,
        "lines": "HEALTHCHECK --timeout=60s --retries=2 CMD echo hello",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "echo echo echo echo hello hello",
            "end": { "col": 53, "line": 7, "offset": 116 },
            "start": { "col": 43, "line": 7, "offset": 106 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/healthcheck.dockerfile",
      "start": { "col": 1, "line": 7, "offset": 64 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 21, "line": 5, "offset": 61 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2a7d1f0450da8ce57ee421863976ab33cf790f3de7f5235d06d75f90be0506a1c14177766ba937e57e101ae1a68db37590e2ffc0040395882e44259919fac97c_0",
        "fix": "USER non-root\nCMD \"$thing\" foo bar",
        "is_ignored": false,
        "lines": "CMD \"$thing\" foo bar",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "\"\"\"\"\"$$thing thing\"foo bar bar",
            "end": { "col": 21, "line": 5, "offset": 61 },
            "start": { "col": 5, "line": 5, "offset": 45 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/metavar_call.dockerfile",
      "start": { "col": 1, "line": 5, "offset": 41 }
    },
    {
      "check_id": "dockerfile.security.missing-user.missing-user",
      "end": { "col": 10, "line": 2, "offset": 23 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2029d3ecdc48b77504bec2d858542335af718419f5fc6d42a4da9f0d2568ad6fd259b1a8e86817ad77d56d02c56c62081ff8d384dc033058698e5492ff45ac74_0",
        "fix": "USER non-root\nCMD hello",
        "is_ignored": false,
        "lines": "CMD hello",
        "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUN06",
              "url": "https://semgrep.dev/playground/r/d6TrApz/dockerfile.security.missing-user.missing-user",
              "version_id": "d6TrApz"
            }
          },
          "shortlink": "https://sg.run/Gbvn",
          "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
          "subcategory": ["audit"],
          "technology": ["dockerfile"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$...VARS": {
            "abstract_content": "hello hello hello hello hello",
            "end": { "col": 10, "line": 2, "offset": 23 },
            "start": { "col": 5, "line": 2, "offset": 18 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/dockerfile/no-trailing-newline.dockerfile",
      "start": { "col": 1, "line": 2, "offset": 14 }
    },
    {
      "check_id": "go.lang.security.audit.net.formatted-template-string.formatted-template-string",
      "end": { "col": 82, "line": 8, "offset": 204 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5e2e2e47de26169e09af6c792e1d174d1410ffd94c236bc455e948366b37e946a42cb09d6a40fe99e187066e9f19a97c4d39c9a526d3b47604b3f87e76ea8927_0",
        "is_ignored": false,
        "lines": "    return template.HTML(\"<html><body><h1>\" + customerId + \"</h1></body></html>\")",
        "message": "Found a formatted template string passed to 'template.HTML()'. 'template.HTML()' does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": ["https://golang.org/pkg/html/template/#HTML"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUjDW",
              "url": "https://semgrep.dev/playground/r/d6TrA0v/go.lang.security.audit.net.formatted-template-string.formatted-template-string",
              "version_id": "d6TrA0v"
            }
          },
          "shortlink": "https://sg.run/weE0",
          "source": "https://semgrep.dev/r/go.lang.security.audit.net.formatted-template-string.formatted-template-string",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$T": {
            "abstract_content": "\"<html><body><h1>\"+customerId",
            "end": { "col": 57, "line": 8, "offset": 179 },
            "start": { "col": 26, "line": 8, "offset": 148 }
          },
          "$X": {
            "abstract_content": "\"</h1></body></html>\"",
            "end": { "col": 81, "line": 8, "offset": 203 },
            "start": { "col": 60, "line": 8, "offset": 182 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/go/equivalence_interpolated_str.go",
      "start": { "col": 12, "line": 8, "offset": 134 }
    },
    {
      "check_id": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type",
      "end": { "col": 82, "line": 8, "offset": 204 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "d57fedce7fa8ad0eac2ddef07daae024a7bab41de50adfab7b96194ad0c307bae1462cea9b8eba9d5cdfbe88d1743873475b40f61f13c1676399efbbd52cf9b4_0",
        "is_ignored": false,
        "lines": "    return template.HTML(\"<html><body><h1>\" + customerId + \"</h1></body></html>\")",
        "message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://golang.org/pkg/html/template/#HTML",
            "https://github.com/0c34/govwa/blob/139693e56406b5684d2a6ae22c0af90717e149b8/vulnerability/xss/xss.go#L33"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "0oU5n3",
              "url": "https://semgrep.dev/playground/r/qkT2xdw/go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type",
              "version_id": "qkT2xdw"
            }
          },
          "shortlink": "https://sg.run/3xDb",
          "source": "https://semgrep.dev/r/go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/go/equivalence_interpolated_str.go",
      "start": { "col": 12, "line": 8, "offset": 134 }
    },
    {
      "check_id": "go.lang.security.injection.raw-html-format.raw-html-format",
      "end": { "col": 81, "line": 8, "offset": 203 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "customerId",
              "location": {
                "end": { "col": 13, "line": 5, "offset": 78 },
                "path": "tests/patterns/go/equivalence_interpolated_str.go",
                "start": { "col": 3, "line": 5, "offset": 68 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 81, "line": 8, "offset": 203 },
                "path": "tests/patterns/go/equivalence_interpolated_str.go",
                "start": { "col": 26, "line": 8, "offset": 148 }
              },
              "\"<html><body><h1>\" + customerId + \"</h1></body></html>\""
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 22, "line": 5, "offset": 87 },
                "path": "tests/patterns/go/equivalence_interpolated_str.go",
                "start": { "col": 17, "line": 5, "offset": 82 }
              },
              "r.URL"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "b4abddf1b02edcd96e0f183dd2960b259463e88c9be2a5c22b151d71e47b7b94d0f62241bd89210a2ad59db4f573ae3c0f4e0648a792adb41209839f4a0ae00f_0",
        "is_ignored": false,
        "lines": "    return template.HTML(\"<html><body><h1>\" + customerId + \"</h1></body></html>\")",
        "message": "Detected user input flowing into a manually constructed HTML string. You may be accidentally bypassing secure methods of rendering HTML by manually constructing HTML and this could create a cross-site scripting vulnerability, which could let attackers steal sensitive user data. Use the `html/template` package which will safely render HTML instead, or inspect that the HTML is rendered safely.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://blogtitle.github.io/robn-go-security-pearls-cross-site-scripting-xss/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUonQ",
              "url": "https://semgrep.dev/playground/r/zyTK8wx/go.lang.security.injection.raw-html-format.raw-html-format",
              "version_id": "zyTK8wx"
            }
          },
          "shortlink": "https://sg.run/3r1G",
          "source": "https://semgrep.dev/r/go.lang.security.injection.raw-html-format.raw-html-format",
          "subcategory": ["vuln"],
          "technology": ["go"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "URL",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$ANYTHING": {
            "abstract_content": "URL",
            "end": { "col": 22, "line": 5, "offset": 87 },
            "start": { "col": 19, "line": 5, "offset": 84 }
          },
          "$HTMLSTR": {
            "abstract_content": "<html><body><h1>",
            "end": { "col": 43, "line": 8, "offset": 165 },
            "start": { "col": 27, "line": 8, "offset": 149 }
          },
          "$REQUEST": {
            "abstract_content": "r",
            "end": { "col": 18, "line": 5, "offset": 83 },
            "start": { "col": 17, "line": 5, "offset": 82 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/go/equivalence_interpolated_str.go",
      "start": { "col": 26, "line": 8, "offset": 148 }
    },
    {
      "check_id": "problem-based-packs.insecure-transport.go-stdlib.http-request.http-request",
      "end": { "col": 44, "line": 10, "offset": 162 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5b2372aea56e9d1727df708b867e1eaadc0903a28515d4d81957de77ff56a6fd2e771635c817ba3259c3a65d9992e2b393b8db4c2817a6b5ff2c63d364358f9c_0",
        "fix": "client.Get(\"https://example.com\")",
        "is_ignored": false,
        "lines": "    res := client.Get(\"http://example.com\")",
        "message": "Checks for requests sent via http.Get to http:// URLS. This is dangerous because the server is attempting to connect to a website that does not encrypt traffic with TLS. Instead, send requests only to https:// URLS.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": "CWE-319: Cleartext Transmission of Sensitive Information",
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": "A03:2017 - Sensitive Data Exposure",
          "references": ["https://golang.org/pkg/net/http/#Get"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUR70",
              "url": "https://semgrep.dev/playground/r/RGTDkzP/problem-based-packs.insecure-transport.go-stdlib.http-request.http-request",
              "version_id": "RGTDkzP"
            }
          },
          "shortlink": "https://sg.run/Avd2",
          "source": "https://semgrep.dev/r/problem-based-packs.insecure-transport.go-stdlib.http-request.http-request",
          "subcategory": ["vuln"],
          "technology": ["go"],
          "vulnerability": "Insecure Transport",
          "vulnerability_class": ["Mishandled Sensitive Information"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "Get",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$CLIENT": {
            "abstract_content": "client",
            "end": { "col": 11, "line": 8, "offset": 87 },
            "start": { "col": 5, "line": 8, "offset": 81 }
          },
          "$FUNC": {
            "abstract_content": "Get",
            "end": { "col": 22, "line": 10, "offset": 140 },
            "start": { "col": 19, "line": 10, "offset": 137 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/go/metavar-typing-structs-and-new.go",
      "start": { "col": 12, "line": 10, "offset": 130 }
    },
    {
      "check_id": "problem-based-packs.insecure-transport.go-stdlib.http-request.http-request",
      "end": { "col": 44, "line": 17, "offset": 289 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5b2372aea56e9d1727df708b867e1eaadc0903a28515d4d81957de77ff56a6fd2e771635c817ba3259c3a65d9992e2b393b8db4c2817a6b5ff2c63d364358f9c_1",
        "fix": "client.Get(\"https://example.com\")",
        "is_ignored": false,
        "lines": "    res := client.Get(\"http://example.com\")",
        "message": "Checks for requests sent via http.Get to http:// URLS. This is dangerous because the server is attempting to connect to a website that does not encrypt traffic with TLS. Instead, send requests only to https:// URLS.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": "CWE-319: Cleartext Transmission of Sensitive Information",
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": "A03:2017 - Sensitive Data Exposure",
          "references": ["https://golang.org/pkg/net/http/#Get"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUR70",
              "url": "https://semgrep.dev/playground/r/RGTDkzP/problem-based-packs.insecure-transport.go-stdlib.http-request.http-request",
              "version_id": "RGTDkzP"
            }
          },
          "shortlink": "https://sg.run/Avd2",
          "source": "https://semgrep.dev/r/problem-based-packs.insecure-transport.go-stdlib.http-request.http-request",
          "subcategory": ["vuln"],
          "technology": ["go"],
          "vulnerability": "Insecure Transport",
          "vulnerability_class": ["Mishandled Sensitive Information"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "Get",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$CLIENT": {
            "abstract_content": "client",
            "end": { "col": 11, "line": 15, "offset": 212 },
            "start": { "col": 5, "line": 15, "offset": 206 }
          },
          "$FUNC": {
            "abstract_content": "Get",
            "end": { "col": 22, "line": 17, "offset": 267 },
            "start": { "col": 19, "line": 17, "offset": 264 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/go/metavar-typing-structs-and-new.go",
      "start": { "col": 12, "line": 17, "offset": 257 }
    },
    {
      "check_id": "go.lang.security.audit.xss.import-text-template.import-text-template",
      "end": { "col": 29, "line": 6, "offset": 96 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "d79b7c050196d928ab006a3706e12dfc1c96bb6ab413239ab8bc7b2caaead979a9b6b868fe75905e3cf6b79be9fab986182c537142e1b771d94fc8483de592f9_0",
        "fix": "html/template",
        "is_ignored": false,
        "lines": "    ttemplate \"text/template\"",
        "message": "When working with web applications that involve rendering user-generated  content, it's important to properly escape any HTML content to prevent  Cross-Site Scripting (XSS) attacks. In Go, the `text/template` package does  not automatically escape HTML content, which can leave your application  vulnerable to these types of attacks. To mitigate this risk, it's  recommended to use the `html/template` package instead, which provides  built-in functionality for HTML escaping. By using `html/template` to render  your HTML content, you can help to ensure that your web application is more  secure and less susceptible to XSS vulnerabilities.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://www.veracode.com/blog/secure-development/use-golang-these-mistakes-could-compromise-your-apps-security"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "5rUOZQ",
              "url": "https://semgrep.dev/playground/r/RGTDk68/go.lang.security.audit.xss.import-text-template.import-text-template",
              "version_id": "RGTDk68"
            }
          },
          "shortlink": "https://sg.run/ndEO",
          "source": "https://semgrep.dev/r/go.lang.security.audit.xss.import-text-template.import-text-template",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "text/template",
            "end": { "col": 14, "line": 1, "offset": 13 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$IMPORT": {
            "abstract_content": "text/template",
            "end": { "col": 29, "line": 6, "offset": 96 },
            "start": { "col": 16, "line": 6, "offset": 83 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/go/misc_import_order.go",
      "start": { "col": 16, "line": 6, "offset": 83 }
    },
    {
      "check_id": "go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
      "end": { "col": 6, "line": 17, "offset": 304 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "dbf23c990137512e6befd9147047522b96b2cacd9d8f560dd4baba33303dd28c88efd5f2c636bfca4fba5d7ea720b1c3ee668b4614476267a480702707604f72_0",
        "fix": "tls.Config{ ServerName: getServerName(),\n\n        //ERROR: match\n        InsecureSkipVerify: true, MinVersion: tls.VersionTLS13 }",
        "is_ignored": false,
        "lines": "    Conn.TLSConfig = &tls.Config {\n        ServerName: getServerName(),\n\n        //ERROR: match\n        InsecureSkipVerify: true,\n    }",
        "message": "`MinVersion` is missing from this TLS configuration.  By default, TLS 1.2 is currently used as the minimum when acting as a client, and TLS 1.0 when acting as a server. General purpose web applications should default to TLS 1.3 with all other protocols disabled.  Only where it is known that a web server must support legacy clients with unsupported an insecure browsers (such as Internet Explorer 10), it may be necessary to enable TLS 1.0 to provide support. Add `MinVersion: tls.VersionTLS13' to the TLS configuration to bump the minimum version to TLS 1.3.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": ["CWE-327: Use of a Broken or Risky Cryptographic Algorithm"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://golang.org/doc/go1.14#crypto/tls",
            "https://golang.org/pkg/crypto/tls/#:~:text=MinVersion",
            "https://www.us-cert.gov/ncas/alerts/TA14-290A"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUk4X",
              "url": "https://semgrep.dev/playground/r/o5Tglp0/go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
              "version_id": "o5Tglp0"
            }
          },
          "shortlink": "https://sg.run/oxEN",
          "source": "https://semgrep.dev/r/go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
          "source-rule-url": "https://github.com/securego/gosec/blob/master/rules/tls_config.go",
          "subcategory": ["guardrail"],
          "technology": ["go"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$...CONF": {
            "abstract_content": "ServerName getServerName()InsecureSkipVerify true",
            "end": { "col": 33, "line": 16, "offset": 297 },
            "start": { "col": 9, "line": 13, "offset": 212 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/go/partial_single_field2.go",
      "start": { "col": 23, "line": 12, "offset": 191 }
    },
    {
      "check_id": "problem-based-packs.insecure-transport.go-stdlib.bypass-tls-verification.bypass-tls-verification",
      "end": { "col": 6, "line": 17, "offset": 304 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c1e094815c8cc0086ca5183e887cfa3cc77882cb024beee1ec40ef3321b77ebe88623060ad3a337c831401a21ef1d3e3ac95754bd574a84ac70308d3ba259089_0",
        "is_ignored": false,
        "lines": "    Conn.TLSConfig = &tls.Config {\n        ServerName: getServerName(),\n\n        //ERROR: match\n        InsecureSkipVerify: true,\n    }",
        "message": "Checks for disabling of TLS/SSL certificate verification. This should only be used for debugging purposes because it leads to vulnerability to MTM attacks.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": "CWE-319: Cleartext Transmission of Sensitive Information",
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": "A03:2017 - Sensitive Data Exposure",
          "references": [
            "https://stackoverflow.com/questions/12122159/how-to-do-a-https-request-with-bad-certificate"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "DbUpjg",
              "url": "https://semgrep.dev/playground/r/qkT2xyl/problem-based-packs.insecure-transport.go-stdlib.bypass-tls-verification.bypass-tls-verification",
              "version_id": "qkT2xyl"
            }
          },
          "shortlink": "https://sg.run/4xj5",
          "source": "https://semgrep.dev/r/problem-based-packs.insecure-transport.go-stdlib.bypass-tls-verification.bypass-tls-verification",
          "subcategory": ["vuln"],
          "technology": ["go"],
          "vulnerability": "Insecure Transport",
          "vulnerability_class": ["Mishandled Sensitive Information"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/go/partial_single_field2.go",
      "start": { "col": 23, "line": 12, "offset": 191 }
    },
    {
      "check_id": "html.security.audit.missing-integrity.missing-integrity",
      "end": { "col": 54, "line": 2, "offset": 75 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "a36111ee25e51181d4a338e227fc1734dcc9efacb67da11f844d82ad9ee4ccc8099655ed55ed3f8d4af030624eb81145fa3e5c341a280cd7d98b830d86b6494e_0",
        "is_ignored": false,
        "lines": "<script src=\"https://example.com/no-sri.js\"></script>",
        "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-353: Missing Support for Integrity Check"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUQzj",
              "url": "https://semgrep.dev/playground/r/rxTyLEr/html.security.audit.missing-integrity.missing-integrity",
              "version_id": "rxTyLEr"
            }
          },
          "shortlink": "https://sg.run/krXA",
          "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
          "subcategory": ["audit"],
          "technology": ["html"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$...A": {
            "abstract_content": " src=\"https://example.com/no-sri.js\"",
            "end": { "col": 44, "line": 2, "offset": 65 },
            "start": { "col": 8, "line": 2, "offset": 29 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/html/metavar_attr_value.html",
      "start": { "col": 1, "line": 2, "offset": 22 }
    },
    {
      "check_id": "java.lang.security.audit.crypto.ecb-cipher.ecb-cipher",
      "end": { "col": 58, "line": 7, "offset": 137 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "8e673212ea336434414055d629d105d24a8e1d7d5745bc4c7fc29d1349f35fa937ea2e8238a3b415ca1e2dd928e6ce5f2e0197db2de6087a7cccda71976efffd_0",
        "is_ignored": false,
        "lines": "    Cipher c = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");",
        "message": "Cipher in ECB mode is detected. ECB mode produces the same output for the same input each time which allows an attacker to intercept and replay the data. Further, ECB mode does not provide any integrity checking. See https://find-sec-bugs.github.io/bugs.htm#CIPHER_INTEGRITY.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": ["CWE-327: Use of a Broken or Risky Cryptographic Algorithm"],
          "functional-categories": ["crypto::search::mode::javax.crypto"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "5rUOb6",
              "url": "https://semgrep.dev/playground/r/DkT6nJd/java.lang.security.audit.crypto.ecb-cipher.ecb-cipher",
              "version_id": "DkT6nJd"
            }
          },
          "shortlink": "https://sg.run/Ro9K",
          "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.ecb-cipher.ecb-cipher",
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#ECB_MODE",
          "subcategory": ["vuln"],
          "technology": ["java"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$CIPHER": {
            "abstract_content": "Cipher Cipher Cipher",
            "end": { "col": 22, "line": 7, "offset": 101 },
            "start": { "col": 16, "line": 7, "offset": 95 }
          },
          "$MODE": {
            "abstract_content": "\"DES/ECB/PKCS5Padding\"",
            "end": { "col": 57, "line": 7, "offset": 136 },
            "start": { "col": 35, "line": 7, "offset": 114 }
          },
          "$VAR": {
            "abstract_content": "c",
            "end": { "col": 13, "line": 7, "offset": 92 },
            "start": { "col": 12, "line": 7, "offset": 91 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/java/aliasing_qualified.java",
      "start": { "col": 5, "line": 7, "offset": 84 }
    },
    {
      "check_id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
      "end": { "col": 57, "line": 7, "offset": 136 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "7fc6c961d349361ba50fb781d19f32dd0f52b41b46127f7ad799b4eea72f96c228c6bb698d9538cdeaf2dc45f85cc03dd18628cf6a680f4a3efd7afa6b4b946f_0",
        "fix": "\"AES/GCM/NoPadding\"",
        "is_ignored": false,
        "lines": "    Cipher c = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");",
        "message": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information.",
        "metadata": {
          "asvs": {
            "control_id": "6.2.5 Insecure Algorithm",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
            "section": "V6 Stored Cryptography Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "HIGH",
          "cwe": ["CWE-326: Inadequate Encryption Strength"],
          "functional-categories": [
            "crypto::search::symmetric-algorithm::javax.crypto"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard",
            "https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html#algorithms"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZNg",
              "url": "https://semgrep.dev/playground/r/A8T95KY/java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
              "version_id": "A8T95KY"
            }
          },
          "shortlink": "https://sg.run/5Q73",
          "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#DES_USAGE",
          "subcategory": ["vuln"],
          "technology": ["java"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$CIPHER": {
            "abstract_content": "Cipher Cipher Cipher",
            "end": { "col": 22, "line": 7, "offset": 101 },
            "start": { "col": 16, "line": 7, "offset": 95 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/java/aliasing_qualified.java",
      "start": { "col": 35, "line": 7, "offset": 114 }
    },
    {
      "check_id": "java.rmi.security.server-dangerous-class-deserialization.server-dangerous-class-deserialization",
      "end": { "col": 2, "line": 16, "offset": 495 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "376ebe5f071356ab49944719ebe1adf7900acb758cc0f55d961b3f89fb2621b9b33f7b0cc7a640e4b07cdbe043fe32e56c09d96279f2c4000d007231bc87d739_0",
        "is_ignored": false,
        "lines": "public interface IBSidesService extends Remote {\n   boolean registerTicket(String ticketID) throws RemoteException;\n   void vistTalk(String talkname) throws RemoteException;\n   void poke(Object attende) throws RemoteException;\n}",
        "message": "Using a non-primitive class with Java RMI may be an insecure deserialization vulnerability. Depending on the underlying implementation. This object could be manipulated by a malicious actor allowing them to execute code on your system. Instead, use an integer ID to look up your object, or consider alternative serialization schemes such as JSON.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-502: Deserialization of Untrusted Data"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A08:2017 - Insecure Deserialization",
            "A08:2021 - Software and Data Integrity Failures"
          ],
          "references": [
            "https://mogwailabs.de/blog/2019/03/attacking-java-rmi-services-after-jep-290/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "bwUwj4",
              "url": "https://semgrep.dev/playground/r/LjTqQZj/java.rmi.security.server-dangerous-class-deserialization.server-dangerous-class-deserialization",
              "version_id": "LjTqQZj"
            }
          },
          "shortlink": "https://sg.run/oxg6",
          "source": "https://semgrep.dev/r/java.rmi.security.server-dangerous-class-deserialization.server-dangerous-class-deserialization",
          "subcategory": ["audit"],
          "technology": ["rmi"],
          "vulnerability_class": ["Insecure Deserialization "]
        },
        "metavars": {
          "$CLASS": {
            "abstract_content": "String",
            "end": { "col": 33, "line": 13, "offset": 348 },
            "start": { "col": 27, "line": 13, "offset": 342 }
          },
          "$INTERFACE": {
            "abstract_content": "IBSidesService",
            "end": { "col": 32, "line": 12, "offset": 298 },
            "start": { "col": 18, "line": 12, "offset": 284 }
          },
          "$METHOD": {
            "abstract_content": "registerTicket",
            "end": { "col": 26, "line": 13, "offset": 341 },
            "start": { "col": 12, "line": 13, "offset": 327 }
          },
          "$PARAM": {
            "abstract_content": "ticketID",
            "end": { "col": 42, "line": 13, "offset": 357 },
            "start": { "col": 34, "line": 13, "offset": 349 }
          },
          "$RETURNTYPE": {
            "abstract_content": "boolean",
            "end": { "col": 11, "line": 13, "offset": 326 },
            "start": { "col": 4, "line": 13, "offset": 319 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/java/dots_interface.java",
      "start": { "col": 1, "line": 12, "offset": 267 }
    },
    {
      "check_id": "java.rmi.security.server-dangerous-object-deserialization.server-dangerous-object-deserialization",
      "end": { "col": 2, "line": 16, "offset": 495 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "70bdc0ffaeb705063209086b4c132e14045e890939b09d986f438cf2e1c5554cd6bb27bd547c3d5daf0738803b6f5d0892d19c4471ee6bed569172469afebb43_0",
        "is_ignored": false,
        "lines": "public interface IBSidesService extends Remote {\n   boolean registerTicket(String ticketID) throws RemoteException;\n   void vistTalk(String talkname) throws RemoteException;\n   void poke(Object attende) throws RemoteException;\n}",
        "message": "Using an arbitrary object ('Object attende') with Java RMI is an insecure deserialization vulnerability. This object can be manipulated by a malicious actor allowing them to execute code on your system. Instead, use an integer ID to look up your object, or consider alternative serialization schemes such as JSON.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-502: Deserialization of Untrusted Data"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A08:2017 - Insecure Deserialization",
            "A08:2021 - Software and Data Integrity Failures"
          ],
          "references": [
            "https://frohoff.github.io/appseccali-marshalling-pickles/",
            "https://book.hacktricks.xyz/network-services-pentesting/1099-pentesting-java-rmi",
            "https://youtu.be/t_aw1mDNhzI",
            "https://github.com/qtc-de/remote-method-guesser",
            "https://github.com/openjdk/jdk/blob/master/src/java.rmi/share/classes/sun/rmi/server/UnicastRef.java#L303C4-L331"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUkw5",
              "url": "https://semgrep.dev/playground/r/8KTQ9Rw/java.rmi.security.server-dangerous-object-deserialization.server-dangerous-object-deserialization",
              "version_id": "8KTQ9Rw"
            }
          },
          "shortlink": "https://sg.run/zvnl",
          "source": "https://semgrep.dev/r/java.rmi.security.server-dangerous-object-deserialization.server-dangerous-object-deserialization",
          "subcategory": ["audit"],
          "technology": ["rmi"],
          "vulnerability_class": ["Insecure Deserialization "]
        },
        "metavars": {
          "$INTERFACE": {
            "abstract_content": "IBSidesService",
            "end": { "col": 32, "line": 12, "offset": 298 },
            "start": { "col": 18, "line": 12, "offset": 284 }
          },
          "$METHOD": {
            "abstract_content": "poke",
            "end": { "col": 13, "line": 15, "offset": 453 },
            "start": { "col": 9, "line": 15, "offset": 449 }
          },
          "$PARAM": {
            "abstract_content": "attende",
            "end": { "col": 28, "line": 15, "offset": 468 },
            "start": { "col": 21, "line": 15, "offset": 461 }
          },
          "$PARAMTYPE": {
            "abstract_content": "Object",
            "end": { "col": 20, "line": 15, "offset": 460 },
            "start": { "col": 14, "line": 15, "offset": 454 }
          },
          "$RETURNTYPE": {
            "abstract_content": "void",
            "end": { "col": 8, "line": 15, "offset": 448 },
            "start": { "col": 4, "line": 15, "offset": 444 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/java/dots_interface.java",
      "start": { "col": 1, "line": 12, "offset": 267 }
    },
    {
      "check_id": "javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret",
      "end": { "col": 29, "line": 5, "offset": 136 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "secret",
              "location": {
                "end": { "col": 13, "line": 3, "offset": 64 },
                "path": "tests/patterns/js/deep_deep_stmt2.js",
                "start": { "col": 7, "line": 3, "offset": 58 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 29, "line": 5, "offset": 136 },
                "path": "tests/patterns/js/deep_deep_stmt2.js",
                "start": { "col": 23, "line": 5, "offset": 130 }
              },
              "secret"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 13, "line": 3, "offset": 64 },
                "path": "tests/patterns/js/deep_deep_stmt2.js",
                "start": { "col": 7, "line": 3, "offset": 58 }
              },
              "secret"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "55dbf83c6eb559cb537eb65221fff2068636758478cb707842a35f35cd958439cdf1313650061cca37196683f7878c71fdf7195a2d9e5f110fc12b62990f1fc2_0",
        "is_ignored": false,
        "lines": "    jwt.verify(token, secret, function (err, decoded) {",
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "asvs": {
            "control_id": "3.5.2 Static API keys or secret",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v35-token-based-session-management",
            "section": "V3: Session Management Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "HIGH",
          "cwe": ["CWE-798: Use of Hard-coded Credentials"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A07:2021 - Identification and Authentication Failures"],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUon7",
              "url": "https://semgrep.dev/playground/r/K3TvjWe/javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret",
              "version_id": "K3TvjWe"
            }
          },
          "shortlink": "https://sg.run/4xN9",
          "source": "https://semgrep.dev/r/javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret",
          "subcategory": ["vuln"],
          "technology": ["jwt", "javascript", "secrets"],
          "vulnerability_class": ["Hard-coded Secrets"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "token",
            "end": { "col": 21, "line": 5, "offset": 128 },
            "start": { "col": 16, "line": 5, "offset": 123 }
          },
          "$JWT": {
            "abstract_content": "jwt",
            "end": { "col": 8, "line": 5, "offset": 115 },
            "start": { "col": 5, "line": 5, "offset": 112 }
          },
          "$VALUE": {
            "abstract_content": "secret",
            "end": { "col": 13, "line": 3, "offset": 64 },
            "start": { "col": 7, "line": 3, "offset": 58 }
          },
          "$Y": {
            "abstract_content": "hardcoded-secret",
            "end": { "col": 33, "line": 3, "offset": 84 },
            "start": { "col": 17, "line": 3, "offset": 68 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/js/deep_deep_stmt2.js",
      "start": { "col": 23, "line": 5, "offset": 130 }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "end": { "col": 77, "line": 4, "offset": 153 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "b3e319f5c0685f04158b1dde529af1ad7293dd8ebee1a1259547e8d12b14a726de6341a327f17334f53f963301b002a7853bb8ef18414af4fff7bdac66c0e034_0",
        "is_ignored": false,
        "lines": "    bodyText.current.innerHTML = marked(DOMPurify.sanitize(data.body_text));",
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "ReUg41",
              "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method",
              "version_id": "O9TNO1x"
            }
          },
          "shortlink": "https://sg.run/LwA9",
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$EL": {
            "abstract_content": "bodyText.current",
            "end": { "col": 21, "line": 4, "offset": 97 },
            "start": { "col": 5, "line": 4, "offset": 81 }
          },
          "$HTML": {
            "abstract_content": "marked(DOMPurify.sanitize(data.body_text))",
            "end": { "col": 76, "line": 4, "offset": 152 },
            "start": { "col": 34, "line": 4, "offset": 110 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/js/dots_pattern_record.js",
      "start": { "col": 5, "line": 4, "offset": 81 }
    },
    {
      "check_id": "javascript.browser.security.eval-detected.eval-detected",
      "end": { "col": 20, "line": 7, "offset": 110 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6871dc8d996be29d0a2b4f8e09f395bb901fc404c41bd1df98feb6a1f01ec7fa502334536e6d8d8714e9fdf71aeda03111b84e124636c0d0eeefb050d6a6b900_0",
        "is_ignored": false,
        "lines": "    eval(user_data);",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dynamic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing",
            "section": "V5 Validation, Sanitization and Encoding",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "GdU7dw",
              "url": "https://semgrep.dev/playground/r/xyTKZ6r/javascript.browser.security.eval-detected.eval-detected",
              "version_id": "xyTKZ6r"
            }
          },
          "shortlink": "https://sg.run/7ope",
          "source": "https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/js/dots_stmts.js",
      "start": { "col": 5, "line": 7, "offset": 95 }
    },
    {
      "check_id": "javascript.browser.security.eval-detected.eval-detected",
      "end": { "col": 8, "line": 2, "offset": 17 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "8dc9dea476cce3e7ff3e100ba3e6f366ed9ebb83c7a370ecf97b6afe2d585a15c8d3460a9d0c8a08a58f51777fafacf8be18a68c252396647df296249af9a613_0",
        "is_ignored": false,
        "lines": "eval(x);",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dynamic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing",
            "section": "V5 Validation, Sanitization and Encoding",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "GdU7dw",
              "url": "https://semgrep.dev/playground/r/xyTKZ6r/javascript.browser.security.eval-detected.eval-detected",
              "version_id": "xyTKZ6r"
            }
          },
          "shortlink": "https://sg.run/7ope",
          "source": "https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/js/eval_call.js",
      "start": { "col": 1, "line": 2, "offset": 10 }
    },
    {
      "check_id": "javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage",
      "end": { "col": 20, "line": 6, "offset": 142 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "fc27cfa13ca6840f14a46bd7f0e3fad9c0b6161272083e89329064acc74ff21fa72df1cd21479b8557ace9d8aa02a7a9a69150d35a8070e893780de1dce4377e_0",
        "is_ignored": false,
        "lines": "var app = express();",
        "message": "A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.npmjs.com/package/csurf",
            "https://www.npmjs.com/package/csrf",
            "https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "wdUKEq",
              "url": "https://semgrep.dev/playground/r/5PTdAbp/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage",
              "version_id": "5PTdAbp"
            }
          },
          "shortlink": "https://sg.run/BxzR",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage",
          "subcategory": ["audit"],
          "technology": ["javascript", "typescript", "express"],
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]
        },
        "metavars": {
          "$APP": {
            "abstract_content": "app",
            "end": { "col": 8, "line": 6, "offset": 130 },
            "start": { "col": 5, "line": 6, "offset": 127 }
          },
          "$EXPRESS": {
            "abstract_content": "express",
            "end": { "col": 18, "line": 6, "offset": 140 },
            "start": { "col": 11, "line": 6, "offset": 133 }
          }
        },
        "severity": "INFO",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/js/misc_method_chain_vs_stmt.js",
      "start": { "col": 5, "line": 6, "offset": 127 }
    },
    {
      "check_id": "json.aws.security.public-s3-policy-statement.public-s3-policy-statement",
      "end": { "col": 10, "line": 15, "offset": 378 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "e7ae352bea616f76644a6e785f5d47cc862c5dcb76814ef2bc97080adc30907f0259bed9308e08f5be29093c73a6aa2bf1d6c96d42ab4bf25dde1c21a71d3185_0",
        "is_ignored": false,
        "lines": "        {\n            \"Sid\": \"PublicReadGetObject\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": [\n                \"s3:GetObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::example.com/*\"\n            ]\n        },",
        "message": "Detected public S3 bucket policy. This policy allows anyone to access certain properties of or items in the bucket. Do not do this unless you will never have sensitive data inside the bucket.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-264: CWE CATEGORY: Permissions, Privileges, and Access Controls"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteAccessPermissionsReqd.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "9AU1br",
              "url": "https://semgrep.dev/playground/r/l4T4vDE/json.aws.security.public-s3-policy-statement.public-s3-policy-statement",
              "version_id": "l4T4vDE"
            }
          },
          "shortlink": "https://sg.run/Yv1d",
          "source": "https://semgrep.dev/r/json.aws.security.public-s3-policy-statement.public-s3-policy-statement",
          "subcategory": ["vuln"],
          "technology": ["aws"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/json/dots_dict.json",
      "start": { "col": 9, "line": 5, "offset": 109 }
    },
    {
      "check_id": "ocaml.lang.compatibility.deprecated.deprecated-pervasives",
      "end": { "col": 21, "line": 3, "offset": 54 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "0ca50e1b66b1da9581397bdd42715c2a8c4cfff2a1252c9106047d96f4070c914e255346e0ac9fd74d6b0db2317380606ff3461a268751a94761828887de9787_0",
        "is_ignored": false,
        "lines": "  Pervasives.compare a b",
        "message": "Pervasives is deprecated and will not be available after 4.10. Use Stdlib.",
        "metadata": {
          "category": "compatibility",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "3qUP1E",
              "url": "https://semgrep.dev/playground/r/w8T9noW/ocaml.lang.compatibility.deprecated.deprecated-pervasives",
              "version_id": "w8T9noW"
            }
          },
          "shortlink": "https://sg.run/dKe0",
          "source": "https://semgrep.dev/r/ocaml.lang.compatibility.deprecated.deprecated-pervasives",
          "technology": ["ocaml"]
        },
        "metavars": {
          "$X": {
            "abstract_content": "compare",
            "end": { "col": 21, "line": 3, "offset": 54 },
            "start": { "col": 14, "line": 3, "offset": 47 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ocaml/foo.ml",
      "start": { "col": 3, "line": 3, "offset": 36 }
    },
    {
      "check_id": "ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
      "end": { "col": 19, "line": 2, "offset": 37 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "a5ec8f0a66e0649e8cc7afc12f4c9f4898b8d8c40401f6e7b9af77c3daf2e913af4632fe12f4375a8f9ab1eb8bf66a2fc26467e3104b237f65c0e4e823c9bebc_0",
        "is_ignored": false,
        "lines": "let x = \"/tmp/foo\"",
        "message": "You should probably use Filename.get_temp_dirname().",
        "metadata": {
          "category": "portability",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU100",
              "url": "https://semgrep.dev/playground/r/gET3x7z/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
              "version_id": "gET3x7z"
            }
          },
          "shortlink": "https://sg.run/Q4ZZ",
          "source": "https://semgrep.dev/r/ocaml.lang.portability.slash-tmp.not-portable-tmp-string",
          "technology": ["ocaml"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ocaml/regexp.ml",
      "start": { "col": 9, "line": 2, "offset": 27 }
    },
    {
      "check_id": "php.lang.security.backticks-use.backticks-use",
      "end": { "col": 32, "line": 6, "offset": 107 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "1cc1b717de8ee4f225683dfe0eee4ec75adb3c85726f3f448aa87f6d0ca429605e12ee719a0c301aa94ebb9c28dabe2cf61ea054db55a88da7a5900bb6f8cf06_0",
        "is_ignored": false,
        "lines": "echo `ping -n 3 {$user_input}`;",
        "message": "Backticks use may lead to command injection vulnerabilities.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": [
            "https://www.php.net/manual/en/language.operators.execution.php",
            "https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/BackticksSniff.php"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUow7",
              "url": "https://semgrep.dev/playground/r/5PTdA1D/php.lang.security.backticks-use.backticks-use",
              "version_id": "5PTdA1D"
            }
          },
          "shortlink": "https://sg.run/4xj9",
          "source": "https://semgrep.dev/r/php.lang.security.backticks-use.backticks-use",
          "subcategory": ["audit"],
          "technology": ["php"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/php/dots_backquote.php",
      "start": { "col": 1, "line": 6, "offset": 76 }
    },
    {
      "check_id": "php.lang.security.eval-use.eval-use",
      "end": { "col": 22, "line": 7, "offset": 118 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "52ed2830a13b6ed2e9e74b9262d74e3c2a5ac6ba51919ceee929cb33629482a9864902e675eec83edfef83db9ff55ddf4851f1d9945eff4036b920f6d16434d4_0",
        "is_ignored": false,
        "lines": "    eval($user_data);",
        "message": "Evaluating non-constant commands. This can lead to command injection.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://www.php.net/manual/en/function.eval",
            "https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUbX3",
              "url": "https://semgrep.dev/playground/r/A8T95d2/php.lang.security.eval-use.eval-use",
              "version_id": "A8T95d2"
            }
          },
          "shortlink": "https://sg.run/J9AP",
          "source": "https://semgrep.dev/r/php.lang.security.eval-use.eval-use",
          "subcategory": ["audit"],
          "technology": ["php"],
          "vulnerability_class": ["Command Injection"]
        },
        "metavars": {},
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/php/dots_stmts.php",
      "start": { "col": 5, "line": 7, "offset": 101 }
    },
    {
      "check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 69, "line": 4, "offset": 85 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 69, "line": 4, "offset": 85 },
                "path": "tests/patterns/php/metavar_method.php",
                "start": { "col": 17, "line": 4, "offset": 33 }
              },
              "\"SELECT * FROM wp_users WHERE email = $_POST[email]\""
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 61, "line": 4, "offset": 77 },
                "path": "tests/patterns/php/metavar_method.php",
                "start": { "col": 55, "line": 4, "offset": 71 }
              },
              "$_POST"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "b9a8b71069837525c5ddf57959676b314075cc8647b379ce30376c37581cbad11a7523382b89b28b8d2a218854e56ae69c1b8aa4d8a05827af7a48b5be0993b0_0",
        "is_ignored": false,
        "lines": "$wpdb->$get_var(\"SELECT * FROM wp_users WHERE email = $_POST[email]\");",
        "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://owasp.org/www-community/attacks/SQL_Injection"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "qNUXdL",
              "url": "https://semgrep.dev/playground/r/l4T4v0Q/php.lang.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "l4T4v0Q"
            }
          },
          "shortlink": "https://sg.run/lZYG",
          "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["php"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "SELECT",
            "end": { "col": 24, "line": 4, "offset": 40 },
            "start": { "col": 18, "line": 4, "offset": 34 }
          },
          "$EXPR": {
            "abstract_content": "SELECT * FROM wp_users WHERE email = ",
            "end": { "col": 55, "line": 4, "offset": 71 },
            "start": { "col": 18, "line": 4, "offset": 34 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/php/metavar_method.php",
      "start": { "col": 17, "line": 4, "offset": 33 }
    },
    {
      "check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 68, "line": 7, "offset": 166 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 68, "line": 7, "offset": 166 },
                "path": "tests/patterns/php/metavar_method.php",
                "start": { "col": 16, "line": 7, "offset": 114 }
              },
              "\"SELECT * FROM wp_users WHERE email = $_POST[email]\""
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 60, "line": 7, "offset": 158 },
                "path": "tests/patterns/php/metavar_method.php",
                "start": { "col": 54, "line": 7, "offset": 152 }
              },
              "$_POST"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "b9a8b71069837525c5ddf57959676b314075cc8647b379ce30376c37581cbad11a7523382b89b28b8d2a218854e56ae69c1b8aa4d8a05827af7a48b5be0993b0_1",
        "is_ignored": false,
        "lines": "$wpdb->get_var(\"SELECT * FROM wp_users WHERE email = $_POST[email]\");",
        "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://owasp.org/www-community/attacks/SQL_Injection"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "qNUXdL",
              "url": "https://semgrep.dev/playground/r/l4T4v0Q/php.lang.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "l4T4v0Q"
            }
          },
          "shortlink": "https://sg.run/lZYG",
          "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["php"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "SELECT",
            "end": { "col": 23, "line": 7, "offset": 121 },
            "start": { "col": 17, "line": 7, "offset": 115 }
          },
          "$EXPR": {
            "abstract_content": "SELECT * FROM wp_users WHERE email = ",
            "end": { "col": 54, "line": 7, "offset": 152 },
            "start": { "col": 17, "line": 7, "offset": 115 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/php/metavar_method.php",
      "start": { "col": 16, "line": 7, "offset": 114 }
    },
    {
      "check_id": "php.lang.security.backticks-use.backticks-use",
      "end": { "col": 23, "line": 9, "offset": 157 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "1fb336e0df0454858c94b5e3565e7c288e6dd6e6f455914454d6946bb3aee6ea5d4e888f5d65db66a61c8b4f5bbe7dee2c615c757f26f647a57aafad33a44a3e_0",
        "is_ignored": false,
        "lines": "  foo(`a string too`);",
        "message": "Backticks use may lead to command injection vulnerabilities.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": [
            "https://www.php.net/manual/en/language.operators.execution.php",
            "https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/BackticksSniff.php"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUow7",
              "url": "https://semgrep.dev/playground/r/5PTdA1D/php.lang.security.backticks-use.backticks-use",
              "version_id": "5PTdA1D"
            }
          },
          "shortlink": "https://sg.run/4xj9",
          "source": "https://semgrep.dev/r/php.lang.security.backticks-use.backticks-use",
          "subcategory": ["audit"],
          "technology": ["php"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/php/metavar_string.php",
      "start": { "col": 3, "line": 9, "offset": 137 }
    },
    {
      "check_id": "php.lang.security.curl-ssl-verifypeer-off.curl-ssl-verifypeer-off",
      "end": { "col": 51, "line": 14, "offset": 303 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "bd05cfad176f6f34337d0c150f083a724549cbfab87cef28024fd9e95975e757425cf5c704f1aed1367e28487906daab7334de09941711cbe2c167de329f1e9a_0",
        "is_ignored": false,
        "lines": "$verify = false;\ncurl_setopt($ch, CURLOPT_URL, \"http://www.example.com/\");\ncurl_setopt($ch, CURLOPT_HEADER, 0);\n\n// This is caught \ncurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n\n// ... but can I catch this?\ncurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, $verify);",
        "message": "SSL verification is disabled but should not be (currently CURLOPT_SSL_VERIFYPEER= false)",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://www.saotn.org/dont-turn-off-curlopt_ssl_verifypeer-fix-php-configuration/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "0oU5Xg",
              "url": "https://semgrep.dev/playground/r/GxTv6eX/php.lang.security.curl-ssl-verifypeer-off.curl-ssl-verifypeer-off",
              "version_id": "GxTv6eX"
            }
          },
          "shortlink": "https://sg.run/PJqv",
          "source": "https://semgrep.dev/r/php.lang.security.curl-ssl-verifypeer-off.curl-ssl-verifypeer-off",
          "subcategory": ["vuln"],
          "technology": ["php"],
          "vulnerability_class": ["Mishandled Sensitive Information"]
        },
        "metavars": {
          "$ARG": {
            "abstract_content": "$verify",
            "end": { "col": 8, "line": 6, "offset": 49 },
            "start": { "col": 1, "line": 6, "offset": 42 }
          },
          "$IS_VERIFIED": {
            "abstract_content": "false",
            "end": { "col": 16, "line": 6, "offset": 57 },
            "start": { "col": 11, "line": 6, "offset": 52 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/php/misc_dots.php",
      "start": { "col": 1, "line": 6, "offset": 42 }
    },
    {
      "check_id": "php.lang.security.curl-ssl-verifypeer-off.curl-ssl-verifypeer-off",
      "end": { "col": 48, "line": 11, "offset": 221 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "9313e47bee4722f8adca9f8559104d4956fc30a09fa1b89f264aa50944ebdc7020923cdc6f6c3ab1e759ada833969b87486f626849946889e45f779513b4fe17_0",
        "is_ignored": false,
        "lines": "curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);",
        "message": "SSL verification is disabled but should not be (currently CURLOPT_SSL_VERIFYPEER= false)",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://www.saotn.org/dont-turn-off-curlopt_ssl_verifypeer-fix-php-configuration/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "0oU5Xg",
              "url": "https://semgrep.dev/playground/r/GxTv6eX/php.lang.security.curl-ssl-verifypeer-off.curl-ssl-verifypeer-off",
              "version_id": "GxTv6eX"
            }
          },
          "shortlink": "https://sg.run/PJqv",
          "source": "https://semgrep.dev/r/php.lang.security.curl-ssl-verifypeer-off.curl-ssl-verifypeer-off",
          "subcategory": ["vuln"],
          "technology": ["php"],
          "vulnerability_class": ["Mishandled Sensitive Information"]
        },
        "metavars": {
          "$IS_VERIFIED": {
            "abstract_content": "false",
            "end": { "col": 47, "line": 11, "offset": 220 },
            "start": { "col": 42, "line": 11, "offset": 215 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/php/misc_dots.php",
      "start": { "col": 1, "line": 11, "offset": 174 }
    },
    {
      "check_id": "php.lang.security.tainted-exec.tainted-exec",
      "end": { "col": 17, "line": 8, "offset": 131 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "$cmd",
              "location": {
                "end": { "col": 5, "line": 7, "offset": 64 },
                "path": "tests/patterns/php/sgrep/string_args.php",
                "start": { "col": 1, "line": 7, "offset": 60 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 17, "line": 8, "offset": 131 },
                "path": "tests/patterns/php/sgrep/string_args.php",
                "start": { "col": 1, "line": 8, "offset": 115 }
              },
              "popen($cmd, 'r')"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 35, "line": 7, "offset": 94 },
                "path": "tests/patterns/php/sgrep/string_args.php",
                "start": { "col": 30, "line": 7, "offset": 89 }
              },
              "$_GET"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "0707a8bab7a1c214a138ef42c4bcd5fb56742a8ed405c2152919d39ff9ec1f6177d7d057581b4de044727780d9622b77a23e3bb36318559399deabe43f7ad3e5_0",
        "is_ignored": false,
        "lines": "popen($cmd, 'r');",
        "message": "Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A03:2021 - Injection"],
          "references": [
            "https://www.stackhawk.com/blog/php-command-injection/",
            "https://brightsec.com/blog/code-injection-php/",
            "https://www.acunetix.com/websitesecurity/php-security-2/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "9AUw06",
              "url": "https://semgrep.dev/playground/r/NdT3djz/php.lang.security.tainted-exec.tainted-exec",
              "version_id": "NdT3djz"
            }
          },
          "shortlink": "https://sg.run/JAkP",
          "source": "https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec",
          "subcategory": ["vuln"],
          "technology": ["php"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/php/sgrep/string_args.php",
      "start": { "col": 1, "line": 8, "offset": 115 }
    },
    {
      "check_id": "php.lang.security.exec-use.exec-use",
      "end": { "col": 18, "line": 8, "offset": 132 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "a3299e629a6a1580c674454d81e635691e013ffbc576544cd627251824cdceb6ee9f88635c37891d0eaa7fc57d53cc8584dc681d9a592938afd3b784677cce86_0",
        "is_ignored": false,
        "lines": "popen($cmd, 'r');",
        "message": "Executing non-constant commands. This can lead to command injection.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": [
            "https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "qNUjye",
              "url": "https://semgrep.dev/playground/r/BjTXrZP/php.lang.security.exec-use.exec-use",
              "version_id": "BjTXrZP"
            }
          },
          "shortlink": "https://sg.run/5Q1j",
          "source": "https://semgrep.dev/r/php.lang.security.exec-use.exec-use",
          "subcategory": ["audit"],
          "technology": ["php"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "popen",
            "end": { "col": 6, "line": 8, "offset": 120 },
            "start": { "col": 1, "line": 8, "offset": 115 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/php/sgrep/string_args.php",
      "start": { "col": 1, "line": 8, "offset": 115 }
    },
    {
      "check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
      "end": { "col": 11, "line": 8, "offset": 151 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "3533dddf79e381b63b1a064e50e6178bf01670a7a1194bdb15814f059749154af3742d83ceb36394b5ebd3a0a6aafe8b2722fb9c8e0fcb614a31d73ca2427e83_0",
        "is_ignored": false,
        "lines": "@csrf_exempt\ndef foo():\n  return 1",
        "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "v8UnqO",
              "url": "https://semgrep.dev/playground/r/A8T956G/python.django.security.audit.csrf-exempt.no-csrf-exempt",
              "version_id": "A8T956G"
            }
          },
          "shortlink": "https://sg.run/rd5e",
          "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]
        },
        "metavars": {
          "$R": {
            "abstract_content": "foo",
            "end": { "col": 8, "line": 7, "offset": 137 },
            "start": { "col": 5, "line": 7, "offset": 134 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/aliasing_attribute.py",
      "start": { "col": 1, "line": 6, "offset": 117 }
    },
    {
      "check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
      "end": { "col": 11, "line": 13, "offset": 230 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "3533dddf79e381b63b1a064e50e6178bf01670a7a1194bdb15814f059749154af3742d83ceb36394b5ebd3a0a6aafe8b2722fb9c8e0fcb614a31d73ca2427e83_1",
        "is_ignored": false,
        "lines": "@django.views.decorators.csrf.csrf_exempt\ndef foo():\n  return 1",
        "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "v8UnqO",
              "url": "https://semgrep.dev/playground/r/A8T956G/python.django.security.audit.csrf-exempt.no-csrf-exempt",
              "version_id": "A8T956G"
            }
          },
          "shortlink": "https://sg.run/rd5e",
          "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]
        },
        "metavars": {
          "$R": {
            "abstract_content": "foo",
            "end": { "col": 8, "line": 12, "offset": 216 },
            "start": { "col": 5, "line": 12, "offset": 213 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/aliasing_attribute.py",
      "start": { "col": 1, "line": 11, "offset": 167 }
    },
    {
      "check_id": "python.lang.security.audit.eval-detected.eval-detected",
      "end": { "col": 8, "line": 5, "offset": 118 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "f8ef1e26c31cf1f671199da109abffce082ef5add741312ad2b0eb92b28d7c505458ab1aca5ff756a0ffba9049fd1d7e123c8554bc0dd79c061533a534f75738_0",
        "is_ignored": false,
        "lines": "eval(s)",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "gxU149",
              "url": "https://semgrep.dev/playground/r/DkT6Yd0/python.lang.security.audit.eval-detected.eval-detected",
              "version_id": "DkT6Yd0"
            }
          },
          "shortlink": "https://sg.run/ZvrD",
          "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/cp_eval1.py",
      "start": { "col": 1, "line": 5, "offset": 111 }
    },
    {
      "check_id": "python.lang.security.audit.eval-detected.eval-detected",
      "end": { "col": 8, "line": 5, "offset": 115 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "7a31e48b95bc634854177c0fadab9b8009e36149b9e7053a2b07a9d516ae79adf7aade4d147008907739bc7129496971d9228c8c595f1092c0e2c2927fffa8e3_0",
        "is_ignored": false,
        "lines": "eval(s)",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "gxU149",
              "url": "https://semgrep.dev/playground/r/DkT6Yd0/python.lang.security.audit.eval-detected.eval-detected",
              "version_id": "DkT6Yd0"
            }
          },
          "shortlink": "https://sg.run/ZvrD",
          "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/cp_eval2.py",
      "start": { "col": 1, "line": 5, "offset": 108 }
    },
    {
      "check_id": "python.lang.security.audit.eval-detected.eval-detected",
      "end": { "col": 20, "line": 7, "offset": 101 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "4e8b2255ba9c87fdbf51e1980068be1858bd4934793f613e889b7b5ba1a7c7ed0c1af72e06ab9cbec2119a12a88afb9e467fb0509f6a28d9668224c0cdf3d03b_0",
        "is_ignored": false,
        "lines": "    eval(user_data)",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "gxU149",
              "url": "https://semgrep.dev/playground/r/DkT6Yd0/python.lang.security.audit.eval-detected.eval-detected",
              "version_id": "DkT6Yd0"
            }
          },
          "shortlink": "https://sg.run/ZvrD",
          "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/dots_stmts.py",
      "start": { "col": 5, "line": 7, "offset": 86 }
    },
    {
      "check_id": "python.flask.security.secure-static-file-serve.avoid_send_file_without_path_sanitization",
      "end": { "col": 29, "line": 12, "offset": 243 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2ad3c3be9373387185712ca36bd2cab17f08eae154df52aa74b4f1eb4bfdaf73af0cb5d9f8f614e8fe31f5bbe6be2c4a8039e40a88b2b5b79b9e3ccbb1a9a4b4_0",
        "is_ignored": false,
        "lines": "  return send_file(filename)",
        "message": "Detected a user-controlled `filename` that could flow to `flask.send_file()` function. This could lead to an attacker reading arbitrary file from the system, leaking private information. Make sure to properly sanitize filename or use `flask.send_from_directory`",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-73: External Control of File Name or Path"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "nJUz6A",
              "url": "https://semgrep.dev/playground/r/44TRl36/python.flask.security.secure-static-file-serve.avoid_send_file_without_path_sanitization",
              "version_id": "44TRl36"
            }
          },
          "shortlink": "https://sg.run/weGP",
          "source": "https://semgrep.dev/r/python.flask.security.secure-static-file-serve.avoid_send_file_without_path_sanitization",
          "subcategory": ["audit"],
          "technology": ["flask"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$X": {
            "abstract_content": "download_file",
            "end": { "col": 18, "line": 11, "offset": 198 },
            "start": { "col": 5, "line": 11, "offset": 185 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/less_typehint.py",
      "start": { "col": 10, "line": 12, "offset": 224 }
    },
    {
      "check_id": "python.lang.security.audit.formatted-sql-query.formatted-sql-query",
      "end": { "col": 22, "line": 4, "offset": 158 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "f85ab23be65e3c2f70d76b8643943d3440874e95ffabd07d70285a040444a4dd017c8647604e4a3324115625a289cb6a914b6204aeafa303aa49bbab14aba244_0",
        "is_ignored": false,
        "lines": "engine.execute(query)",
        "message": "Detected possible formatted SQL query. Use parameterized queries instead.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://stackoverflow.com/questions/775296/mysql-parameterized-queries"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "3qUP9k",
              "url": "https://semgrep.dev/playground/r/0bTLexz/python.lang.security.audit.formatted-sql-query.formatted-sql-query",
              "version_id": "0bTLexz"
            }
          },
          "shortlink": "https://sg.run/EkWw",
          "source": "https://semgrep.dev/r/python.lang.security.audit.formatted-sql-query.formatted-sql-query",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$DB": {
            "abstract_content": "engine",
            "end": { "col": 7, "line": 4, "offset": 143 },
            "propagated_value": {
              "svalue_abstract_content": "create_engine('postgresql://user@localhost/database')",
              "svalue_end": { "col": 63, "line": 2, "offset": 76 },
              "svalue_start": { "col": 10, "line": 2, "offset": 23 }
            },
            "start": { "col": 1, "line": 4, "offset": 137 }
          },
          "$SQL": {
            "abstract_content": "query",
            "end": { "col": 21, "line": 4, "offset": 157 },
            "propagated_value": {
              "svalue_abstract_content": "f\"INSERT INTO person (name) VALUES ('{name}')\"",
              "svalue_end": { "col": 60, "line": 3, "offset": 136 },
              "svalue_start": { "col": 14, "line": 3, "offset": 90 }
            },
            "start": { "col": 16, "line": 4, "offset": 152 }
          },
          "$X": {
            "abstract_content": "name",
            "end": { "col": 56, "line": 3, "offset": 132 },
            "start": { "col": 52, "line": 3, "offset": 128 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/less_typehint2.py",
      "start": { "col": 1, "line": 4, "offset": 137 }
    },
    {
      "check_id": "python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query",
      "end": { "col": 22, "line": 4, "offset": 158 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "b1e2ec1b420a38e61be65840276ea1f9c9c62595ab8a9f977777f2115b5116d4879f78cddf04086b06e7ca5b818bff4a7da97cb94c53903a09635cfa2dd5c264_0",
        "is_ignored": false,
        "lines": "engine.execute(query)",
        "message": "Avoiding SQL string concatenation: untrusted input concatenated with raw SQL query can result in SQL Injection. In order to execute raw query safely, prepared statement should be used. SQLAlchemy provides TextualSQL to easily used prepared statement with named parameters. For complex SQL composition, use SQL Expression Language or Schema Definition Language. In most cases, SQLAlchemy ORM will be a better option.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-textual-sql",
            "https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_quick_guide.htm",
            "https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-more-specific-text-with-table-expression-literal-column-and-expression-column"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "oqUz5y",
              "url": "https://semgrep.dev/playground/r/A8T9Xrg/python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query",
              "version_id": "A8T9Xrg"
            }
          },
          "shortlink": "https://sg.run/2b1L",
          "source": "https://semgrep.dev/r/python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query",
          "subcategory": ["audit"],
          "technology": ["sqlalchemy"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CONNECTION": {
            "abstract_content": "engine",
            "end": { "col": 7, "line": 4, "offset": 143 },
            "propagated_value": {
              "svalue_abstract_content": "create_engine('postgresql://user@localhost/database')",
              "svalue_end": { "col": 63, "line": 2, "offset": 76 },
              "svalue_start": { "col": 10, "line": 2, "offset": 23 }
            },
            "start": { "col": 1, "line": 4, "offset": 137 }
          },
          "$QUERY": {
            "abstract_content": "query",
            "end": { "col": 21, "line": 4, "offset": 157 },
            "propagated_value": {
              "svalue_abstract_content": "f\"INSERT INTO person (name) VALUES ('{name}')\"",
              "svalue_end": { "col": 60, "line": 3, "offset": 136 },
              "svalue_start": { "col": 14, "line": 3, "offset": 90 }
            },
            "start": { "col": 16, "line": 4, "offset": 152 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/less_typehint2.py",
      "start": { "col": 1, "line": 4, "offset": 137 }
    },
    {
      "check_id": "python.lang.security.audit.hardcoded-password-default-argument.hardcoded-password-default-argument",
      "end": { "col": 43, "line": 10, "offset": 314 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6f3cffb97de2896107263dedb3e4961792269f2016ec728f2a9fb4fe3cf83d9207d45c25a84671a7883b4ffde26bd959eee833457f860f57ed672973111d12dd_0",
        "is_ignored": false,
        "lines": "def __init__(\n            self,\n            port=5432, keep_work_dir=False, work_dir=None,\n            username='postgres', password='postgres', dbname='postgres',\n            disable_fsync=False\n    ):\n        #ERROR: match\n        self.port = port\n        #ERROR: match\n        self.keep_work_dir = keep_work_dir",
        "message": "Hardcoded password is used as a default argument to '__init__'. This could be dangerous if a real password is not supplied.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-798: Use of Hard-coded Credentials"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A07:2021 - Identification and Authentication Failures"],
          "references": [
            "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZAW",
              "url": "https://semgrep.dev/playground/r/qkT2BYZ/python.lang.security.audit.hardcoded-password-default-argument.hardcoded-password-default-argument",
              "version_id": "qkT2BYZ"
            }
          },
          "shortlink": "https://sg.run/Lw9r",
          "source": "https://semgrep.dev/r/python.lang.security.audit.hardcoded-password-default-argument.hardcoded-password-default-argument",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Hard-coded Secrets"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "__init__",
            "end": { "col": 13, "line": 1, "offset": 12 },
            "start": { "col": 5, "line": 1, "offset": 4 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/metavar_equality_field_vs_var.py",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "python.django.security.audit.extends-custom-expression.extends-custom-expression",
      "end": { "col": 58, "line": 10, "offset": 348 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "4f33616410075c0e5725c6bd13b2d2094e449a1cde0b5e90686eacf52869e8604714edb4b0871705140306c1ed8423b4c5176a76ba881cf4169f085c439c1431_0",
        "is_ignored": false,
        "lines": "class Position(Func):\n    function = 'POSITION'\n    template = \"%(function)s('%(substring)s' in %(expressions)s)\"\n\n    #ERROR: match\n    def __init__(self, expression, substring):\n        # substring=substring is a SQL injection vulnerability!\n        super().__init__(expression, substring=substring)",
        "message": "Found extension of custom expression: Position. Extending expressions in this way could inadvertently lead to a SQL injection vulnerability, which can result in attackers exfiltrating sensitive data. Instead, ensure no user input enters this function or that user input is properly sanitized.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.djangoproject.com/en/3.0/ref/models/expressions/#avoiding-sql-injection",
            "https://semgrep.dev/blog/2020/preventing-sql-injection-a-django-authors-perspective/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "ZqU5z3",
              "url": "https://semgrep.dev/playground/r/0bTLl4p/python.django.security.audit.extends-custom-expression.extends-custom-expression",
              "version_id": "0bTLl4p"
            }
          },
          "shortlink": "https://sg.run/N4Ay",
          "source": "https://semgrep.dev/r/python.django.security.audit.extends-custom-expression.extends-custom-expression",
          "subcategory": ["audit"],
          "technology": ["django"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CLASS": {
            "abstract_content": "Position",
            "end": { "col": 15, "line": 3, "offset": 61 },
            "start": { "col": 7, "line": 3, "offset": 53 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/metavar_kwd_arg.py",
      "start": { "col": 1, "line": 3, "offset": 47 }
    },
    {
      "check_id": "python.lang.security.audit.formatted-sql-query.formatted-sql-query",
      "end": { "col": 29, "line": 2, "offset": 42 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "0bc02f8370b5dbac05aa95d30243219d4540825a43084623264dc179b46787666c646ef368d28fa83e64e2cdb10af990df632c0e556828e4fc280f9292e599b7_0",
        "is_ignored": false,
        "lines": "cursor.execute(\"a\" % (\"b\",))",
        "message": "Detected possible formatted SQL query. Use parameterized queries instead.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://stackoverflow.com/questions/775296/mysql-parameterized-queries"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "3qUP9k",
              "url": "https://semgrep.dev/playground/r/0bTLexz/python.lang.security.audit.formatted-sql-query.formatted-sql-query",
              "version_id": "0bTLexz"
            }
          },
          "shortlink": "https://sg.run/EkWw",
          "source": "https://semgrep.dev/r/python.lang.security.audit.formatted-sql-query.formatted-sql-query",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$DB": {
            "abstract_content": "cursor",
            "end": { "col": 7, "line": 2, "offset": 20 },
            "start": { "col": 1, "line": 2, "offset": 14 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/misc_paren.py",
      "start": { "col": 1, "line": 2, "offset": 14 }
    },
    {
      "check_id": "python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query",
      "end": { "col": 29, "line": 2, "offset": 42 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "27d180636a172b0a3a9de8465939e2185ab7115a6024967415b5506adb0cff95029895bdea48a1a968b3ea801ef84c43aff56276980152462e6a2a0369da9956_0",
        "is_ignored": false,
        "lines": "cursor.execute(\"a\" % (\"b\",))",
        "message": "Avoiding SQL string concatenation: untrusted input concatenated with raw SQL query can result in SQL Injection. In order to execute raw query safely, prepared statement should be used. SQLAlchemy provides TextualSQL to easily used prepared statement with named parameters. For complex SQL composition, use SQL Expression Language or Schema Definition Language. In most cases, SQLAlchemy ORM will be a better option.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-textual-sql",
            "https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_quick_guide.htm",
            "https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-more-specific-text-with-table-expression-literal-column-and-expression-column"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "oqUz5y",
              "url": "https://semgrep.dev/playground/r/A8T9Xrg/python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query",
              "version_id": "A8T9Xrg"
            }
          },
          "shortlink": "https://sg.run/2b1L",
          "source": "https://semgrep.dev/r/python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query",
          "subcategory": ["audit"],
          "technology": ["sqlalchemy"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CONNECTION": {
            "abstract_content": "cursor",
            "end": { "col": 7, "line": 2, "offset": 20 },
            "start": { "col": 1, "line": 2, "offset": 14 }
          },
          "$SQL": {
            "abstract_content": "\"a\"",
            "end": { "col": 19, "line": 2, "offset": 32 },
            "start": { "col": 16, "line": 2, "offset": 29 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/misc_paren.py",
      "start": { "col": 1, "line": 2, "offset": 14 }
    },
    {
      "check_id": "python.lang.security.audit.formatted-sql-query.formatted-sql-query",
      "end": { "col": 31, "line": 5, "offset": 88 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "0bc02f8370b5dbac05aa95d30243219d4540825a43084623264dc179b46787666c646ef368d28fa83e64e2cdb10af990df632c0e556828e4fc280f9292e599b7_1",
        "is_ignored": false,
        "lines": "cursor.execute((\"a\") % (\"b\",))",
        "message": "Detected possible formatted SQL query. Use parameterized queries instead.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://stackoverflow.com/questions/775296/mysql-parameterized-queries"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "3qUP9k",
              "url": "https://semgrep.dev/playground/r/0bTLexz/python.lang.security.audit.formatted-sql-query.formatted-sql-query",
              "version_id": "0bTLexz"
            }
          },
          "shortlink": "https://sg.run/EkWw",
          "source": "https://semgrep.dev/r/python.lang.security.audit.formatted-sql-query.formatted-sql-query",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$DB": {
            "abstract_content": "cursor",
            "end": { "col": 7, "line": 5, "offset": 64 },
            "start": { "col": 1, "line": 5, "offset": 58 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/misc_paren.py",
      "start": { "col": 1, "line": 5, "offset": 58 }
    },
    {
      "check_id": "python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query",
      "end": { "col": 31, "line": 5, "offset": 88 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "27d180636a172b0a3a9de8465939e2185ab7115a6024967415b5506adb0cff95029895bdea48a1a968b3ea801ef84c43aff56276980152462e6a2a0369da9956_1",
        "is_ignored": false,
        "lines": "cursor.execute((\"a\") % (\"b\",))",
        "message": "Avoiding SQL string concatenation: untrusted input concatenated with raw SQL query can result in SQL Injection. In order to execute raw query safely, prepared statement should be used. SQLAlchemy provides TextualSQL to easily used prepared statement with named parameters. For complex SQL composition, use SQL Expression Language or Schema Definition Language. In most cases, SQLAlchemy ORM will be a better option.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-textual-sql",
            "https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_quick_guide.htm",
            "https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-more-specific-text-with-table-expression-literal-column-and-expression-column"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "oqUz5y",
              "url": "https://semgrep.dev/playground/r/A8T9Xrg/python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query",
              "version_id": "A8T9Xrg"
            }
          },
          "shortlink": "https://sg.run/2b1L",
          "source": "https://semgrep.dev/r/python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query",
          "subcategory": ["audit"],
          "technology": ["sqlalchemy"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CONNECTION": {
            "abstract_content": "cursor",
            "end": { "col": 7, "line": 5, "offset": 64 },
            "start": { "col": 1, "line": 5, "offset": 58 }
          },
          "$SQL": {
            "abstract_content": "\"a\"",
            "end": { "col": 21, "line": 5, "offset": 78 },
            "start": { "col": 16, "line": 5, "offset": 73 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/misc_paren.py",
      "start": { "col": 1, "line": 5, "offset": 58 }
    },
    {
      "check_id": "python.django.security.audit.extends-custom-expression.extends-custom-expression",
      "end": { "col": 66, "line": 7, "offset": 241 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "a84d74e13511df79448a1bc1ce403550967294b1e774c33e9ea4173f61326b9078a82e31ab1c06511cf4b3c66a5e29639ecce83b488940783ae75b1886100e92_0",
        "is_ignored": false,
        "lines": "class Position(Func):\n    function = 'POSITION'\n    template = \"%(function)s('%(substring)s' in %(expressions)s)\"",
        "message": "Found extension of custom expression: Position. Extending expressions in this way could inadvertently lead to a SQL injection vulnerability, which can result in attackers exfiltrating sensitive data. Instead, ensure no user input enters this function or that user input is properly sanitized.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.djangoproject.com/en/3.0/ref/models/expressions/#avoiding-sql-injection",
            "https://semgrep.dev/blog/2020/preventing-sql-injection-a-django-authors-perspective/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "ZqU5z3",
              "url": "https://semgrep.dev/playground/r/0bTLl4p/python.django.security.audit.extends-custom-expression.extends-custom-expression",
              "version_id": "0bTLl4p"
            }
          },
          "shortlink": "https://sg.run/N4Ay",
          "source": "https://semgrep.dev/r/python.django.security.audit.extends-custom-expression.extends-custom-expression",
          "subcategory": ["audit"],
          "technology": ["django"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CLASS": {
            "abstract_content": "Position",
            "end": { "col": 15, "line": 5, "offset": 142 },
            "start": { "col": 7, "line": 5, "offset": 134 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/python/misc_regression2.py",
      "start": { "col": 1, "line": 5, "offset": 128 }
    },
    {
      "check_id": "ruby.lang.security.dangerous-subshell.dangerous-subshell",
      "end": { "col": 22, "line": 2, "offset": 36 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "38983ab37304efdcde34420c58693ae05306949dfa5091fab76fe6d0aa9e07d3e5a210c43c9ec2683bbd036e8ef04351cc04f3e171bf2082f65ad86bb18b4e08_0",
        "is_ignored": false,
        "lines": "y = `foo #{bar} buzz`",
        "message": "Detected non-static command inside `...`. If unverified user data can reach this call site, this is a code injection vulnerability. A malicious actor can inject a malicious script to execute arbitrary code.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "OrUGn8",
              "url": "https://semgrep.dev/playground/r/NdT3o9R/ruby.lang.security.dangerous-subshell.dangerous-subshell",
              "version_id": "NdT3o9R"
            }
          },
          "shortlink": "https://sg.run/NrxL",
          "source": "https://semgrep.dev/r/ruby.lang.security.dangerous-subshell.dangerous-subshell",
          "subcategory": ["audit"],
          "technology": ["ruby"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$VAL": {
            "abstract_content": "bar",
            "end": { "col": 15, "line": 2, "offset": 29 },
            "start": { "col": 12, "line": 2, "offset": 26 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ruby/dots_multiple_interpolated.rb",
      "start": { "col": 5, "line": 2, "offset": 19 }
    },
    {
      "check_id": "ruby.lang.security.dangerous-subshell.dangerous-subshell",
      "end": { "col": 17, "line": 4, "offset": 68 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "38983ab37304efdcde34420c58693ae05306949dfa5091fab76fe6d0aa9e07d3e5a210c43c9ec2683bbd036e8ef04351cc04f3e171bf2082f65ad86bb18b4e08_1",
        "is_ignored": false,
        "lines": "z = `foo #{bar}`",
        "message": "Detected non-static command inside `...`. If unverified user data can reach this call site, this is a code injection vulnerability. A malicious actor can inject a malicious script to execute arbitrary code.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "OrUGn8",
              "url": "https://semgrep.dev/playground/r/NdT3o9R/ruby.lang.security.dangerous-subshell.dangerous-subshell",
              "version_id": "NdT3o9R"
            }
          },
          "shortlink": "https://sg.run/NrxL",
          "source": "https://semgrep.dev/r/ruby.lang.security.dangerous-subshell.dangerous-subshell",
          "subcategory": ["audit"],
          "technology": ["ruby"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$VAL": {
            "abstract_content": "bar",
            "end": { "col": 15, "line": 4, "offset": 66 },
            "start": { "col": 12, "line": 4, "offset": 63 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ruby/dots_multiple_interpolated.rb",
      "start": { "col": 5, "line": 4, "offset": 56 }
    },
    {
      "check_id": "ruby.lang.security.dangerous-subshell.dangerous-subshell",
      "end": { "col": 35, "line": 6, "offset": 118 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "16df3facc36aea343107015f26c212f55126e5723dcf76b85bce5650d41fbde645dda097f31141e2c91d2a12fbc0b795e07744baf6713cd33d3878049a421843_0",
        "is_ignored": false,
        "lines": "c = `#{one} yo #{two} yo #{three}`",
        "message": "Detected non-static command inside `...`. If unverified user data can reach this call site, this is a code injection vulnerability. A malicious actor can inject a malicious script to execute arbitrary code.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "OrUGn8",
              "url": "https://semgrep.dev/playground/r/NdT3o9R/ruby.lang.security.dangerous-subshell.dangerous-subshell",
              "version_id": "NdT3o9R"
            }
          },
          "shortlink": "https://sg.run/NrxL",
          "source": "https://semgrep.dev/r/ruby.lang.security.dangerous-subshell.dangerous-subshell",
          "subcategory": ["audit"],
          "technology": ["ruby"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$VAL": {
            "abstract_content": "one",
            "end": { "col": 11, "line": 6, "offset": 94 },
            "start": { "col": 8, "line": 6, "offset": 91 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ruby/dots_multiple_interpolated.rb",
      "start": { "col": 5, "line": 6, "offset": 88 }
    },
    {
      "check_id": "ruby.lang.security.dangerous-subshell.dangerous-subshell",
      "end": { "col": 7, "line": 4, "offset": 24 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c038a0d2fae8853f7f9f495b01673b8a3ed2c04b6bfd98c04fcd1eaf5d2d30804bf215522a57ca0fa98d17587b5089a762657fa08b3bb2f01699a67d9ce3127d_0",
        "is_ignored": false,
        "lines": "`#{b}`",
        "message": "Detected non-static command inside `...`. If unverified user data can reach this call site, this is a code injection vulnerability. A malicious actor can inject a malicious script to execute arbitrary code.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "OrUGn8",
              "url": "https://semgrep.dev/playground/r/NdT3o9R/ruby.lang.security.dangerous-subshell.dangerous-subshell",
              "version_id": "NdT3o9R"
            }
          },
          "shortlink": "https://sg.run/NrxL",
          "source": "https://semgrep.dev/r/ruby.lang.security.dangerous-subshell.dangerous-subshell",
          "subcategory": ["audit"],
          "technology": ["ruby"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$VAL": {
            "abstract_content": "b",
            "end": { "col": 5, "line": 4, "offset": 22 },
            "start": { "col": 4, "line": 4, "offset": 21 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ruby/misc_backtick_interp.rb",
      "start": { "col": 1, "line": 4, "offset": 18 }
    },
    {
      "check_id": "ruby.lang.security.dangerous-subshell.dangerous-subshell",
      "end": { "col": 17, "line": 7, "offset": 51 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c038a0d2fae8853f7f9f495b01673b8a3ed2c04b6bfd98c04fcd1eaf5d2d30804bf215522a57ca0fa98d17587b5089a762657fa08b3bb2f01699a67d9ce3127d_1",
        "is_ignored": false,
        "lines": "%x{foo #{b} bar}",
        "message": "Detected non-static command inside `...`. If unverified user data can reach this call site, this is a code injection vulnerability. A malicious actor can inject a malicious script to execute arbitrary code.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "OrUGn8",
              "url": "https://semgrep.dev/playground/r/NdT3o9R/ruby.lang.security.dangerous-subshell.dangerous-subshell",
              "version_id": "NdT3o9R"
            }
          },
          "shortlink": "https://sg.run/NrxL",
          "source": "https://semgrep.dev/r/ruby.lang.security.dangerous-subshell.dangerous-subshell",
          "subcategory": ["audit"],
          "technology": ["ruby"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$VAL": {
            "abstract_content": "b",
            "end": { "col": 11, "line": 7, "offset": 45 },
            "start": { "col": 10, "line": 7, "offset": 44 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ruby/misc_backtick_interp.rb",
      "start": { "col": 1, "line": 7, "offset": 35 }
    },
    {
      "check_id": "ruby.lang.security.dangerous-subshell.dangerous-subshell",
      "end": { "col": 17, "line": 4, "offset": 64 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "460b1832510700c85a80a20c70ae3ab08b3a03bc0203f7dbeef6cc0da1fd931702a1d5954e37e554ac55a1dcf2ad0bbc326d2a05e833d0057b7c29bf7156ef78_0",
        "is_ignored": false,
        "lines": "y = `foo #{bar}`",
        "message": "Detected non-static command inside `...`. If unverified user data can reach this call site, this is a code injection vulnerability. A malicious actor can inject a malicious script to execute arbitrary code.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "OrUGn8",
              "url": "https://semgrep.dev/playground/r/NdT3o9R/ruby.lang.security.dangerous-subshell.dangerous-subshell",
              "version_id": "NdT3o9R"
            }
          },
          "shortlink": "https://sg.run/NrxL",
          "source": "https://semgrep.dev/r/ruby.lang.security.dangerous-subshell.dangerous-subshell",
          "subcategory": ["audit"],
          "technology": ["ruby"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$VAL": {
            "abstract_content": "bar",
            "end": { "col": 15, "line": 4, "offset": 62 },
            "start": { "col": 12, "line": 4, "offset": 59 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ruby/misc_backticks.rb",
      "start": { "col": 5, "line": 4, "offset": 52 }
    },
    {
      "check_id": "ruby.rails.security.audit.xss.avoid-html-safe.avoid-html-safe",
      "end": { "col": 18, "line": 3, "offset": 42 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2d6facd04db9521a4794d02c773290d73448e1fa0df1bbb265fd28d1f9f9bfce7a6fc1af5e680e9374d35147270dd560c6efc6552d4622f43f7ee96c85fa3d64_0",
        "is_ignored": false,
        "lines": " a = ''.html_safe",
        "message": "'html_safe()' does not make the supplied string safe. 'html_safe()' bypasses HTML escaping. If external data can reach here, this exposes your application to cross-site scripting (XSS) attacks. Ensure no external data reaches here.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://github.com/presidentbeef/brakeman/blob/main/docs/warning_types/cross_site_scripting/index.markdown",
            "https://www.netsparker.com/blog/web-security/preventing-xss-ruby-on-rails-web-applications/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUEQK",
              "url": "https://semgrep.dev/playground/r/nWTxoYW/ruby.rails.security.audit.xss.avoid-html-safe.avoid-html-safe",
              "version_id": "nWTxoYW"
            }
          },
          "shortlink": "https://sg.run/Zeq7",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.xss.avoid-html-safe.avoid-html-safe",
          "source-rule-url": "https://github.com/presidentbeef/brakeman/blob/main/lib/brakeman/checks/check_cross_site_scripting.rb",
          "subcategory": ["audit"],
          "technology": ["rails"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$STR": {
            "abstract_content": "''",
            "end": { "col": 8, "line": 3, "offset": 32 },
            "start": { "col": 6, "line": 3, "offset": 30 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ruby/misc_empty_token1.rb",
      "start": { "col": 6, "line": 3, "offset": 30 }
    },
    {
      "check_id": "ruby.rails.security.audit.xss.avoid-html-safe.avoid-html-safe",
      "end": { "col": 18, "line": 5, "offset": 75 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "76181439731d138e91d4900f5c0eb04955a40d66057fec673b895ca5604c678951c47a6b001c813609d30fd2679ee966332dee3fd942a6a3fa22ec1dfe75f59b_0",
        "is_ignored": false,
        "lines": " b = \"\".html_safe",
        "message": "'html_safe()' does not make the supplied string safe. 'html_safe()' bypasses HTML escaping. If external data can reach here, this exposes your application to cross-site scripting (XSS) attacks. Ensure no external data reaches here.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://github.com/presidentbeef/brakeman/blob/main/docs/warning_types/cross_site_scripting/index.markdown",
            "https://www.netsparker.com/blog/web-security/preventing-xss-ruby-on-rails-web-applications/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUEQK",
              "url": "https://semgrep.dev/playground/r/nWTxoYW/ruby.rails.security.audit.xss.avoid-html-safe.avoid-html-safe",
              "version_id": "nWTxoYW"
            }
          },
          "shortlink": "https://sg.run/Zeq7",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.xss.avoid-html-safe.avoid-html-safe",
          "source-rule-url": "https://github.com/presidentbeef/brakeman/blob/main/lib/brakeman/checks/check_cross_site_scripting.rb",
          "subcategory": ["audit"],
          "technology": ["rails"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$STR": {
            "abstract_content": "\"\"\"",
            "end": { "col": 8, "line": 5, "offset": 65 },
            "start": { "col": 6, "line": 5, "offset": 63 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ruby/misc_empty_token1.rb",
      "start": { "col": 6, "line": 5, "offset": 63 }
    },
    {
      "check_id": "ruby.lang.security.mass-assignment-protection-disabled.mass-assignment-protection-disabled",
      "end": { "col": 53, "line": 2, "offset": 66 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "0ab7fb0f2463b9c92d10c95497b88a2fc290ab972e2d7af43e66cbdbb4b4c2c49dca05a60a193ebfda4b8b12fe2eb89f72cea6db20fed8206fac3866d764fc21_0",
        "is_ignored": false,
        "lines": "User.new(params[:user], :without_protection => true)",
        "message": "Mass assignment protection disabled for 'User'. This could permit assignment to sensitive model fields without intention. Instead, use 'attr_accessible' for the model or disable mass assigment using 'config.active_record.whitelist_attributes = true'. ':without_protection => true' must be removed for this to take effect.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "yyUvkJ",
              "url": "https://semgrep.dev/playground/r/LjTqAy2/ruby.lang.security.mass-assignment-protection-disabled.mass-assignment-protection-disabled",
              "version_id": "LjTqAy2"
            }
          },
          "shortlink": "https://sg.run/2byz",
          "source": "https://semgrep.dev/r/ruby.lang.security.mass-assignment-protection-disabled.mass-assignment-protection-disabled",
          "source-rule-url": "https://github.com/presidentbeef/brakeman/blob/main/docs/warning_types/mass_assignment/index.markdown",
          "subcategory": ["audit"],
          "technology": ["ruby"],
          "vulnerability_class": ["Mass Assignment"]
        },
        "metavars": {
          "$MODEL": {
            "abstract_content": "User",
            "end": { "col": 5, "line": 2, "offset": 18 },
            "start": { "col": 1, "line": 2, "offset": 14 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ruby/misc_kwdarg.rb",
      "start": { "col": 1, "line": 2, "offset": 14 }
    },
    {
      "check_id": "ruby.lang.security.unprotected-mass-assign.mass-assignment-vuln",
      "end": { "col": 53, "line": 2, "offset": 66 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "d4898d9f0d3e4fde07885abf03495d05761d66fb555fa20c49adf61873c30038167b2f39ed5d4f793ee334935708c44c03aa97e47f91c29feebedfe6ccba933c_0",
        "is_ignored": false,
        "lines": "User.new(params[:user], :without_protection => true)",
        "message": "Checks for calls to without_protection during mass assignment (which allows record creation from hash values). This can lead to users bypassing permissions protections. For Rails 4 and higher, mass protection is on by default. Fix: Don't use :without_protection => true. Instead, configure attr_accessible to control attribute access.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "references": [
            "https://github.com/presidentbeef/brakeman/blob/main/lib/brakeman/checks/check_without_protection.rb",
            "https://www.acunetix.com/vulnerabilities/web/rails-mass-assignment/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "ZqUqQg",
              "url": "https://semgrep.dev/playground/r/BjTXpNb/ruby.lang.security.unprotected-mass-assign.mass-assignment-vuln",
              "version_id": "BjTXpNb"
            }
          },
          "shortlink": "https://sg.run/xY8e",
          "source": "https://semgrep.dev/r/ruby.lang.security.unprotected-mass-assign.mass-assignment-vuln",
          "subcategory": ["audit"],
          "technology": ["ruby"],
          "vulnerability_class": ["Mass Assignment"]
        },
        "metavars": {
          "$CODE": {
            "abstract_content": ":user",
            "end": { "col": 22, "line": 2, "offset": 35 },
            "start": { "col": 17, "line": 2, "offset": 30 }
          },
          "$MOD": {
            "abstract_content": "User",
            "end": { "col": 5, "line": 2, "offset": 18 },
            "start": { "col": 1, "line": 2, "offset": 14 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ruby/misc_kwdarg.rb",
      "start": { "col": 1, "line": 2, "offset": 14 }
    },
    {
      "check_id": "rust.lang.security.rustls-dangerous.rustls-dangerous",
      "end": { "col": 51, "line": 4, "offset": 160 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "77db3b6c98176abe81bb0a73e58893c19d66d02c5ceac0599dd106cdcc5053a63a2332e5991ae86bbbfd8c1bd4df178d762b66fdd5dcc3f083b24cf07bdca807_0",
        "is_ignored": false,
        "lines": "let mut c2 = rustls::client::DangerousClientConfig {cfg: &mut cfg};",
        "message": "Dangerous client config used, ensure SSL verification",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": "CWE-295: Improper Certificate Validation",
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "references": [
            "https://docs.rs/rustls/latest/rustls/client/struct.DangerousClientConfig.html",
            "https://docs.rs/rustls/latest/rustls/client/struct.ClientConfig.html#method.dangerous"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGU8LK",
              "url": "https://semgrep.dev/playground/r/bZTb9NK/rust.lang.security.rustls-dangerous.rustls-dangerous",
              "version_id": "bZTb9NK"
            }
          },
          "shortlink": "https://sg.run/01Rw",
          "source": "https://semgrep.dev/r/rust.lang.security.rustls-dangerous.rustls-dangerous",
          "subcategory": "vuln",
          "technology": ["rustls"],
          "vulnerability_class": ["Improper Authentication"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/rust/misc_name_pattern.rs",
      "start": { "col": 14, "line": 4, "offset": 123 }
    },
    {
      "check_id": "terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
      "end": { "col": 9, "line": 1, "offset": 8 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "52c53da40d5964f800122730f91b380b16d33f9aa7deefd207d88b4ed54fcaa2b72c93aa6bb07b1923119446349dcf71e50e3d185cd14157eb3206d56d1900e8_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
        "message": "An EBS volume is configured without encryption enabled.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZW5",
              "url": "https://semgrep.dev/playground/r/BjTXpbZ/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
              "version_id": "BjTXpbZ"
            }
          },
          "shortlink": "https://sg.run/GWdB",
          "source": "https://semgrep.dev/r/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
          "subcategory": ["vuln"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/concrete_syntax.tf",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
      "end": { "col": 2, "line": 14, "offset": 166 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "fac68633bd57758a1cac6867c5486ee1e8579d1beeedbbe6ace3ebf7ebca55a3ce35bb46818cfb41f918d682c6a1668e8d8d09633099e03185e6ea455ca16b31_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {\n #ERROR:\n a = foo(1,2)\n\n #ERROR:\n b = foo(1,\n         2)\n\n #ERROR:\n c = foo (1, # comment\n          2)\n\n d = foo(2,1)\n}",
        "message": "The AWS EBS volume is unencrypted. The volume, the disk I/O and any derived snapshots could be read if compromised. Volumes should be encrypted to ensure sensitive data is stored securely.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://owasp.org/Top10/A04_2021-Insecure_Design",
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted",
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUKl1",
              "url": "https://semgrep.dev/playground/r/BjTXpzE/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
              "version_id": "BjTXpzE"
            }
          },
          "shortlink": "https://sg.run/6ZbY",
          "source": "https://semgrep.dev/r/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$ANYTHING": {
            "abstract_content": "web_host_storage",
            "end": { "col": 44, "line": 1, "offset": 43 },
            "start": { "col": 28, "line": 1, "offset": 27 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/concrete_syntax.tf",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
      "end": { "col": 9, "line": 1, "offset": 8 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6c3fcc9d127bc5ba3ee1c0e40799ce0cf8be3dc84ed1b4325ba54938f9934a060443b97928659beddae97ca38e16449e63dd59e9046fffafdd52a204a86934ee_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
        "message": "An EBS volume is configured without encryption enabled.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZW5",
              "url": "https://semgrep.dev/playground/r/BjTXpbZ/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
              "version_id": "BjTXpbZ"
            }
          },
          "shortlink": "https://sg.run/GWdB",
          "source": "https://semgrep.dev/r/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
          "subcategory": ["vuln"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/deep_expr_operator.tf",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
      "end": { "col": 2, "line": 4, "offset": 81 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "ef2033058462a6e568f75249b27933861957873c98441a13ccb812956c77b19c34e563c80457e1b2da2c73986d97bb0725e0818a6c62599efaa9107169ad2e47_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {\n    #ERROR:\n    a = foo(bar(42))\n}",
        "message": "The AWS EBS volume is unencrypted. The volume, the disk I/O and any derived snapshots could be read if compromised. Volumes should be encrypted to ensure sensitive data is stored securely.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://owasp.org/Top10/A04_2021-Insecure_Design",
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted",
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUKl1",
              "url": "https://semgrep.dev/playground/r/BjTXpzE/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
              "version_id": "BjTXpzE"
            }
          },
          "shortlink": "https://sg.run/6ZbY",
          "source": "https://semgrep.dev/r/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$ANYTHING": {
            "abstract_content": "web_host_storage",
            "end": { "col": 44, "line": 1, "offset": 43 },
            "start": { "col": 28, "line": 1, "offset": 27 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/deep_expr_operator.tf",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
      "end": { "col": 9, "line": 1, "offset": 8 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "fe8e64acd2ab1dee9c37b33de2a806c1fdf78221610594dba80103b2e62e655db27cc80abdc575b420fb89e2ee955b8a1e7774fc3c369b3ef5e32b9a4017b9fa_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
        "message": "An EBS volume is configured without encryption enabled.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZW5",
              "url": "https://semgrep.dev/playground/r/BjTXpbZ/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
              "version_id": "BjTXpbZ"
            }
          },
          "shortlink": "https://sg.run/GWdB",
          "source": "https://semgrep.dev/r/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
          "subcategory": ["vuln"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_args.tf",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
      "end": { "col": 2, "line": 7, "offset": 104 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "93cd26560440ba077d2200d7a773f3e6eca28f2e2d17283a16ffe6f32ff497c94c7ce5c619ed4f7e2925228ebd6df06bf9d15de181dbcfa602e896e6cda2d29a_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {\n\n  #ERROR:\n  a = foo(1,2,3,4,5)\n  #ERROR:\n  b =  foo(5)\n}",
        "message": "The AWS EBS volume is unencrypted. The volume, the disk I/O and any derived snapshots could be read if compromised. Volumes should be encrypted to ensure sensitive data is stored securely.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://owasp.org/Top10/A04_2021-Insecure_Design",
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted",
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUKl1",
              "url": "https://semgrep.dev/playground/r/BjTXpzE/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
              "version_id": "BjTXpzE"
            }
          },
          "shortlink": "https://sg.run/6ZbY",
          "source": "https://semgrep.dev/r/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$ANYTHING": {
            "abstract_content": "web_host_storage",
            "end": { "col": 44, "line": 1, "offset": 43 },
            "start": { "col": 28, "line": 1, "offset": 27 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_args.tf",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "terraform.lang.security.iam.no-iam-admin-privileges.no-iam-admin-privileges",
      "end": { "col": 9, "line": 16, "offset": 411 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "8d5243afc36d91ecd51c0e54d126998a85f5f5e02bda33f414dbd5213c744b7af68b47fc2c79ecfbfa7591beed7fec37d7a134ffebd4a3908011302b9138b574_0",
        "is_ignored": false,
        "lines": "       {\n         Action = \"*\"\n         Effect = \"Allow\"\n         Resource = \"*\"\n       },",
        "message": "IAM policies that allow full \"*-*\" admin privileges violates the principle of least privilege. This allows an attacker to take full control over all AWS account resources. Instead, give each user more fine-grained control with only the privileges they need. aws_iam_policy",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://github.com/bridgecrewio/checkov/blob/master/checkov/terraform/checks/data/aws/AdminPolicyDocument.py"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUNDX",
              "url": "https://semgrep.dev/playground/r/l4T46ZP/terraform.lang.security.iam.no-iam-admin-privileges.no-iam-admin-privileges",
              "version_id": "l4T46ZP"
            }
          },
          "shortlink": "https://sg.run/oY0N",
          "source": "https://semgrep.dev/r/terraform.lang.security.iam.no-iam-admin-privileges.no-iam-admin-privileges",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$TYPE": {
            "abstract_content": "aws_iam_policy",
            "end": { "col": 25, "line": 1, "offset": 24 },
            "start": { "col": 11, "line": 1, "offset": 10 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_fields.tf",
      "start": { "col": 8, "line": 12, "offset": 329 }
    },
    {
      "check_id": "terraform.lang.security.iam.no-iam-star-actions.no-iam-star-actions",
      "end": { "col": 22, "line": 13, "offset": 352 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "29dc50a1d5dc92772039d369ad6d2b81946debce9541a26177c6e6a7e561d753cccf7cfb15290ac55ba22920f2fe358710f36b9712232006f16fd2dc4460fbd4_0",
        "is_ignored": false,
        "lines": "         Action = \"*\"",
        "message": "Ensure that no IAM policies allow \"*\" as a statement's actions. This allows all actions to be performed on the specified resources, and is a violation of the principle of least privilege. Instead, specify the actions that a certain user or policy is allowed to take.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy",
            "https://github.com/bridgecrewio/checkov/blob/ca830e14745c2c8e1b941985f305abe985d7f1f9/checkov/terraform/checks/data/aws/StarActionPolicyDocument.py"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8Uew3",
              "url": "https://semgrep.dev/playground/r/X0TQ2YZ/terraform.lang.security.iam.no-iam-star-actions.no-iam-star-actions",
              "version_id": "X0TQ2YZ"
            }
          },
          "shortlink": "https://sg.run/9rZ4",
          "source": "https://semgrep.dev/r/terraform.lang.security.iam.no-iam-star-actions.no-iam-star-actions",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$TYPE": {
            "abstract_content": "aws_iam_policy",
            "end": { "col": 25, "line": 1, "offset": 24 },
            "start": { "col": 11, "line": 1, "offset": 10 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_fields.tf",
      "start": { "col": 10, "line": 13, "offset": 340 }
    },
    {
      "check_id": "terraform.lang.security.iam.no-iam-admin-privileges.no-iam-admin-privileges",
      "end": { "col": 9, "line": 35, "offset": 793 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "8d5243afc36d91ecd51c0e54d126998a85f5f5e02bda33f414dbd5213c744b7af68b47fc2c79ecfbfa7591beed7fec37d7a134ffebd4a3908011302b9138b574_1",
        "is_ignored": false,
        "lines": "       {\n         Effect = \"Allow\"\n         Resource = \"*\"\n         Action = \"*\"\n       },",
        "message": "IAM policies that allow full \"*-*\" admin privileges violates the principle of least privilege. This allows an attacker to take full control over all AWS account resources. Instead, give each user more fine-grained control with only the privileges they need. aws_iam_policy",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://github.com/bridgecrewio/checkov/blob/master/checkov/terraform/checks/data/aws/AdminPolicyDocument.py"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUNDX",
              "url": "https://semgrep.dev/playground/r/l4T46ZP/terraform.lang.security.iam.no-iam-admin-privileges.no-iam-admin-privileges",
              "version_id": "l4T46ZP"
            }
          },
          "shortlink": "https://sg.run/oY0N",
          "source": "https://semgrep.dev/r/terraform.lang.security.iam.no-iam-admin-privileges.no-iam-admin-privileges",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$TYPE": {
            "abstract_content": "aws_iam_policy",
            "end": { "col": 25, "line": 22, "offset": 510 },
            "start": { "col": 11, "line": 22, "offset": 496 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_fields.tf",
      "start": { "col": 8, "line": 31, "offset": 711 }
    },
    {
      "check_id": "terraform.lang.security.iam.no-iam-star-actions.no-iam-star-actions",
      "end": { "col": 22, "line": 34, "offset": 784 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "29dc50a1d5dc92772039d369ad6d2b81946debce9541a26177c6e6a7e561d753cccf7cfb15290ac55ba22920f2fe358710f36b9712232006f16fd2dc4460fbd4_1",
        "is_ignored": false,
        "lines": "         Action = \"*\"",
        "message": "Ensure that no IAM policies allow \"*\" as a statement's actions. This allows all actions to be performed on the specified resources, and is a violation of the principle of least privilege. Instead, specify the actions that a certain user or policy is allowed to take.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy",
            "https://github.com/bridgecrewio/checkov/blob/ca830e14745c2c8e1b941985f305abe985d7f1f9/checkov/terraform/checks/data/aws/StarActionPolicyDocument.py"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8Uew3",
              "url": "https://semgrep.dev/playground/r/X0TQ2YZ/terraform.lang.security.iam.no-iam-star-actions.no-iam-star-actions",
              "version_id": "X0TQ2YZ"
            }
          },
          "shortlink": "https://sg.run/9rZ4",
          "source": "https://semgrep.dev/r/terraform.lang.security.iam.no-iam-star-actions.no-iam-star-actions",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$TYPE": {
            "abstract_content": "aws_iam_policy",
            "end": { "col": 25, "line": 22, "offset": 510 },
            "start": { "col": 11, "line": 22, "offset": 496 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_fields.tf",
      "start": { "col": 10, "line": 34, "offset": 772 }
    },
    {
      "check_id": "terraform.lang.security.iam.no-iam-admin-privileges.no-iam-admin-privileges",
      "end": { "col": 9, "line": 16, "offset": 420 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "1763928bf1d4095db9ed90e5b66dfc5d67198808faba121c797e5ec6cc89570bcf5f46642341182767dc39fef20cc80932cd56161242c5e2d5da297a7b372ea5_0",
        "is_ignored": false,
        "lines": "       {\n         #ruleid: no-iam-admin-privileges\n         Action = \"*\"\n         Resource = \"*\"\n       },",
        "message": "IAM policies that allow full \"*-*\" admin privileges violates the principle of least privilege. This allows an attacker to take full control over all AWS account resources. Instead, give each user more fine-grained control with only the privileges they need. aws_iam_policy",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://github.com/bridgecrewio/checkov/blob/master/checkov/terraform/checks/data/aws/AdminPolicyDocument.py"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUNDX",
              "url": "https://semgrep.dev/playground/r/l4T46ZP/terraform.lang.security.iam.no-iam-admin-privileges.no-iam-admin-privileges",
              "version_id": "l4T46ZP"
            }
          },
          "shortlink": "https://sg.run/oY0N",
          "source": "https://semgrep.dev/r/terraform.lang.security.iam.no-iam-admin-privileges.no-iam-admin-privileges",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$TYPE": {
            "abstract_content": "aws_iam_policy",
            "end": { "col": 25, "line": 2, "offset": 38 },
            "start": { "col": 11, "line": 2, "offset": 24 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_objects.tf",
      "start": { "col": 8, "line": 12, "offset": 322 }
    },
    {
      "check_id": "terraform.lang.security.iam.no-iam-star-actions.no-iam-star-actions",
      "end": { "col": 22, "line": 14, "offset": 387 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c934113b5f51784ad8afe86d4c9982bb19f35c86ed1c6d4dd223b86ce5f8ac1e3d6447ba33d53c2ebf381f32b6e086cb4c8cdff30660570e125526834429f63a_0",
        "is_ignored": false,
        "lines": "         Action = \"*\"",
        "message": "Ensure that no IAM policies allow \"*\" as a statement's actions. This allows all actions to be performed on the specified resources, and is a violation of the principle of least privilege. Instead, specify the actions that a certain user or policy is allowed to take.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-269: Improper Privilege Management"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy",
            "https://github.com/bridgecrewio/checkov/blob/ca830e14745c2c8e1b941985f305abe985d7f1f9/checkov/terraform/checks/data/aws/StarActionPolicyDocument.py"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8Uew3",
              "url": "https://semgrep.dev/playground/r/X0TQ2YZ/terraform.lang.security.iam.no-iam-star-actions.no-iam-star-actions",
              "version_id": "X0TQ2YZ"
            }
          },
          "shortlink": "https://sg.run/9rZ4",
          "source": "https://semgrep.dev/r/terraform.lang.security.iam.no-iam-star-actions.no-iam-star-actions",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$TYPE": {
            "abstract_content": "aws_iam_policy",
            "end": { "col": 25, "line": 2, "offset": 38 },
            "start": { "col": 11, "line": 2, "offset": 24 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_objects.tf",
      "start": { "col": 10, "line": 14, "offset": 375 }
    },
    {
      "check_id": "terraform.aws.security.aws-ebs-volume-encrypted-with-cmk.aws-ebs-volume-encrypted-with-cmk",
      "end": { "col": 2, "line": 9, "offset": 176 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "f39c9056fb83b7f55b19de42f01f1afc52417d38da07bb3614183a2198cec9facb9f1b6fa4b32dd970a9fd9e18307a2645f4df401a6d4ba4ab2e4c165ff226b9_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {\n  availability_zone = \"ap-southeast-2\"\n  encrypted         = true\n  size = 1\n  tags = {\n    Name = \"abcd-ebs\"\n  }\n}",
        "message": "Ensure EBS Volume is encrypted at rest using KMS CMKs. CMKs gives you control over the encryption key in terms of access and rotation.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-320: CWE CATEGORY: Key Management Errors"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2017 - Sensitive Data Exposure"],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "L1UPY9",
              "url": "https://semgrep.dev/playground/r/A8T9Xe6/terraform.aws.security.aws-ebs-volume-encrypted-with-cmk.aws-ebs-volume-encrypted-with-cmk",
              "version_id": "A8T9Xe6"
            }
          },
          "shortlink": "https://sg.run/WW14",
          "source": "https://semgrep.dev/r/terraform.aws.security.aws-ebs-volume-encrypted-with-cmk.aws-ebs-volume-encrypted-with-cmk",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$ANYTHING": {
            "abstract_content": "web_host_storage",
            "end": { "col": 44, "line": 2, "offset": 57 },
            "start": { "col": 28, "line": 2, "offset": 41 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_resource.tf",
      "start": { "col": 1, "line": 2, "offset": 14 }
    },
    {
      "check_id": "terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
      "end": { "col": 9, "line": 12, "offset": 190 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "7ed034bef879de6d03289a7d49936e3e5c8a9d95637625c19418d5218601758f098515f8365b170d97bc8dfcb760230dc3efb0b3be8a00b6241d4fd69002da09_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
        "message": "An EBS volume is configured without encryption enabled.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZW5",
              "url": "https://semgrep.dev/playground/r/BjTXpbZ/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
              "version_id": "BjTXpbZ"
            }
          },
          "shortlink": "https://sg.run/GWdB",
          "source": "https://semgrep.dev/r/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
          "subcategory": ["vuln"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_resource.tf",
      "start": { "col": 1, "line": 12, "offset": 182 }
    },
    {
      "check_id": "terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
      "end": { "col": 2, "line": 19, "offset": 345 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "406dddfdd4585b292d719d0932cf5420d925c846a0b6a3d3eb0b65381d5f6f3ff7d1fe95435b32fbd7deeb2f3a8e3ed4924dcf43fb094b91a26b3917bc693c01_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {\n  availability_zone = \"ap-southeast-2\"\n  encrypted         = false\n  size = 1\n  tags = {\n    Name = \"abcd-ebs\"\n  }\n}",
        "message": "The AWS EBS volume is unencrypted. The volume, the disk I/O and any derived snapshots could be read if compromised. Volumes should be encrypted to ensure sensitive data is stored securely.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://owasp.org/Top10/A04_2021-Insecure_Design",
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted",
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUKl1",
              "url": "https://semgrep.dev/playground/r/BjTXpzE/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
              "version_id": "BjTXpzE"
            }
          },
          "shortlink": "https://sg.run/6ZbY",
          "source": "https://semgrep.dev/r/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$ANYTHING": {
            "abstract_content": "web_host_storage",
            "end": { "col": 44, "line": 12, "offset": 225 },
            "start": { "col": 28, "line": 12, "offset": 209 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_resource.tf",
      "start": { "col": 1, "line": 12, "offset": 182 }
    },
    {
      "check_id": "terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
      "end": { "col": 9, "line": 1, "offset": 8 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "95f8c6e6d4c4fe8e929f56e1be77c14c86624f23ac8fe4d168c21315fc2bf2e558ee4d7fb5655a51b4b73ae7a88c66cffb452bed5759d6a76a556a94b3bc4e0c_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
        "message": "An EBS volume is configured without encryption enabled.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZW5",
              "url": "https://semgrep.dev/playground/r/BjTXpbZ/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
              "version_id": "BjTXpbZ"
            }
          },
          "shortlink": "https://sg.run/GWdB",
          "source": "https://semgrep.dev/r/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
          "subcategory": ["vuln"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_string.tf",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
      "end": { "col": 2, "line": 6, "offset": 146 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "956c13a60e53faef1ae840164886d6f2b923f106b4feafe40083aad1516bac0033042efcad1d7f6d422785e90896c4d9933cec756db60923a31f6c6557922a59_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {\n\n    #ERROR:\n    a = foo(\"whatever sequence of chars\")\n    #b = foo('whatever sequence of chars')\n}",
        "message": "The AWS EBS volume is unencrypted. The volume, the disk I/O and any derived snapshots could be read if compromised. Volumes should be encrypted to ensure sensitive data is stored securely.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://owasp.org/Top10/A04_2021-Insecure_Design",
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted",
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUKl1",
              "url": "https://semgrep.dev/playground/r/BjTXpzE/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
              "version_id": "BjTXpzE"
            }
          },
          "shortlink": "https://sg.run/6ZbY",
          "source": "https://semgrep.dev/r/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$ANYTHING": {
            "abstract_content": "web_host_storage",
            "end": { "col": 44, "line": 1, "offset": 43 },
            "start": { "col": 28, "line": 1, "offset": 27 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/dots_string.tf",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "terraform.azure.security.storage.storage-queue-services-logging.storage-queue-services-logging",
      "end": { "col": 2, "line": 12, "offset": 387 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "9bf07ee95770123c092e73c37949b5234ddcfbac4b99d1f3468473f76b209c57024bec146a42c69054ab11c48c73c45a2bd61101e3b0ae2a3396128e8053ff68_0",
        "is_ignored": false,
        "lines": "resource \"azurerm_storage_account\" \"storage_account\" {\n  name                      = var.name\n  //ERROR: match\n  min_tls_version           = var.min_tls_version\n}",
        "message": "Storage Analytics logs detailed information about successful and failed requests to a storage service. This information can be used to monitor individual requests and to diagnose issues with a storage service. Requests are logged on a best-effort basis.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-778: Insufficient Logging"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A10:2017 - Insufficient Logging & Monitoring",
            "A09:2021 - Security Logging and Monitoring Failures"
          ],
          "references": [
            "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging",
            "https://docs.microsoft.com/en-us/azure/storage/common/storage-analytics-logging?tabs=dotnet"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "ReU3L9",
              "url": "https://semgrep.dev/playground/r/8KTQyy9/terraform.azure.security.storage.storage-queue-services-logging.storage-queue-services-logging",
              "version_id": "8KTQyy9"
            }
          },
          "shortlink": "https://sg.run/0yEv",
          "source": "https://semgrep.dev/r/terraform.azure.security.storage.storage-queue-services-logging.storage-queue-services-logging",
          "subcategory": ["audit"],
          "technology": ["terraform", "azure"],
          "vulnerability_class": ["Insufficient Logging"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/equivalence_constant_propagation2.tf",
      "start": { "col": 1, "line": 8, "offset": 225 }
    },
    {
      "check_id": "terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
      "end": { "col": 9, "line": 1, "offset": 8 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "f0b7ed91447e948825ff77c6ada011f09880f764facffacb29c9d02b2648386f22298843b8df19c613926779b93454c4b55b636e6c53cb295dc18bd29ecab6cd_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
        "message": "An EBS volume is configured without encryption enabled.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZW5",
              "url": "https://semgrep.dev/playground/r/BjTXpbZ/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
              "version_id": "BjTXpbZ"
            }
          },
          "shortlink": "https://sg.run/GWdB",
          "source": "https://semgrep.dev/r/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
          "subcategory": ["vuln"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/metavar_arg.tf",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
      "end": { "col": 2, "line": 18, "offset": 260 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "fd3a630a026971736015b25c8c30db98b97a77c3beb42e0f955333fe9f2681dca644ca17c39525d27f00a46d5284b73911fad5689393aada9a6e8808ae6251dd_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {\n\n    #ERROR:\n    a = foo(1,2)\n\n    #ERROR:\n    b = foo(a_very_long_constant_name,\n           2)\n\n    #ERROR:\n    c = foo (unsafe(), #indeed\n             2)\n\n    #ERROR:\n    d = foo(bar(1,3), 2)\n\n    e = foo(2,1)\n}",
        "message": "The AWS EBS volume is unencrypted. The volume, the disk I/O and any derived snapshots could be read if compromised. Volumes should be encrypted to ensure sensitive data is stored securely.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://owasp.org/Top10/A04_2021-Insecure_Design",
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted",
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUKl1",
              "url": "https://semgrep.dev/playground/r/BjTXpzE/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
              "version_id": "BjTXpzE"
            }
          },
          "shortlink": "https://sg.run/6ZbY",
          "source": "https://semgrep.dev/r/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$ANYTHING": {
            "abstract_content": "web_host_storage",
            "end": { "col": 44, "line": 1, "offset": 43 },
            "start": { "col": 28, "line": 1, "offset": 27 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/metavar_arg.tf",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
      "end": { "col": 9, "line": 1, "offset": 8 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "f682bed48e954ac9092c292b1db04edcff05dfc4cdfa87a569b4f09d01daa859600795e89caf2a28b24ca7bb227dd4102c1ecc17389d10eda2b80d4fa327db9b_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
        "message": "An EBS volume is configured without encryption enabled.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZW5",
              "url": "https://semgrep.dev/playground/r/BjTXpbZ/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
              "version_id": "BjTXpbZ"
            }
          },
          "shortlink": "https://sg.run/GWdB",
          "source": "https://semgrep.dev/r/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
          "subcategory": ["vuln"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/metavar_call.tf",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
      "end": { "col": 2, "line": 6, "offset": 83 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5535993e399950f53ed4124f1a75dde0d4a6ca9bfde84c6fb597ecc5a2a7eae70458c7ad11c458d4916d07027d098ea45462561587b9ecffbd690b788bc82469_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {\n    #ERROR:\n    a = foo(1,2)\n\n    \n}",
        "message": "The AWS EBS volume is unencrypted. The volume, the disk I/O and any derived snapshots could be read if compromised. Volumes should be encrypted to ensure sensitive data is stored securely.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://owasp.org/Top10/A04_2021-Insecure_Design",
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted",
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUKl1",
              "url": "https://semgrep.dev/playground/r/BjTXpzE/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
              "version_id": "BjTXpzE"
            }
          },
          "shortlink": "https://sg.run/6ZbY",
          "source": "https://semgrep.dev/r/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$ANYTHING": {
            "abstract_content": "web_host_storage",
            "end": { "col": 44, "line": 1, "offset": 43 },
            "start": { "col": 28, "line": 1, "offset": 27 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/metavar_call.tf",
      "start": { "col": 1, "line": 1, "offset": 0 }
    },
    {
      "check_id": "terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
      "end": { "col": 9, "line": 2, "offset": 16 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "cae8ac1533484faa08496a568f3db5d3b10b11464b67105a87da98b4f7bb3a003b4edcd73956f7df4d35ae9edb519bd21469349628dce1d32aa8fcc710fc5dba_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
        "message": "An EBS volume is configured without encryption enabled.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZW5",
              "url": "https://semgrep.dev/playground/r/BjTXpbZ/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
              "version_id": "BjTXpbZ"
            }
          },
          "shortlink": "https://sg.run/GWdB",
          "source": "https://semgrep.dev/r/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
          "subcategory": ["vuln"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/metavar_equality_var.tf",
      "start": { "col": 1, "line": 2, "offset": 8 }
    },
    {
      "check_id": "terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
      "end": { "col": 2, "line": 6, "offset": 97 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5100d47f940a96343ef973e323de716f789ea5b621dcd79506acabc56e122cf5995ffab11b69c536f0ffbef1991ad4bb18db0b345585edd224c4f5853c03e977_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {\n  myfile = open()\n  \n  x = close(myfile)\n}",
        "message": "The AWS EBS volume is unencrypted. The volume, the disk I/O and any derived snapshots could be read if compromised. Volumes should be encrypted to ensure sensitive data is stored securely.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://owasp.org/Top10/A04_2021-Insecure_Design",
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted",
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUKl1",
              "url": "https://semgrep.dev/playground/r/BjTXpzE/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
              "version_id": "BjTXpzE"
            }
          },
          "shortlink": "https://sg.run/6ZbY",
          "source": "https://semgrep.dev/r/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$ANYTHING": {
            "abstract_content": "web_host_storage",
            "end": { "col": 44, "line": 2, "offset": 51 },
            "start": { "col": 28, "line": 2, "offset": 35 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/terraform/metavar_equality_var.tf",
      "start": { "col": 1, "line": 2, "offset": 8 }
    },
    {
      "check_id": "javascript.browser.security.eval-detected.eval-detected",
      "end": { "col": 20, "line": 7, "offset": 110 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5c259e9924fdf45cfd9889906d529a039a083191c0d357223ea4dd6e722cb696d3c2c3e3209ecfccbd4cbefcec7ac63c68e2ed4219c4951ba96b4f827d75657a_0",
        "is_ignored": false,
        "lines": "    eval(user_data);",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dynamic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing",
            "section": "V5 Validation, Sanitization and Encoding",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "GdU7dw",
              "url": "https://semgrep.dev/playground/r/xyTKZ6r/javascript.browser.security.eval-detected.eval-detected",
              "version_id": "xyTKZ6r"
            }
          },
          "shortlink": "https://sg.run/7ope",
          "source": "https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ts/dots_stmts.ts",
      "start": { "col": 5, "line": 7, "offset": 95 }
    },
    {
      "check_id": "javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
      "end": { "col": 53, "line": 7, "offset": 267 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 53, "line": 7, "offset": 267 },
                "path": "tests/patterns/ts/param_type_annot.ts",
                "start": { "col": 20, "line": 7, "offset": 234 }
              },
              "path.resolve('ftp/', params.file)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 47, "line": 7, "offset": 261 },
                "path": "tests/patterns/ts/param_type_annot.ts",
                "start": { "col": 41, "line": 7, "offset": 255 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "e26b02fae62cd099b5eabb43718120890ce9045dcb0aea5888a758550f81e03d691e11deccad353ea7372503389d0edd2967bf20ea47fcb505ae0a691491418b_0",
        "is_ignored": false,
        "lines": "      res.sendFile(path.resolve('ftp/', params.file))",
        "message": "The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-73: External Control of File Name or Path"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A04:2021 - Insecure Design"],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "j2UzDx",
              "url": "https://semgrep.dev/playground/r/zyTK8E9/javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
              "version_id": "zyTK8E9"
            }
          },
          "shortlink": "https://sg.run/7DJk",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
          "subcategory": ["vuln"],
          "technology": ["express"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "sendFile",
            "end": { "col": 9, "line": 1, "offset": 8 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$METH": {
            "abstract_content": "sendFile",
            "end": { "col": 19, "line": 7, "offset": 233 },
            "start": { "col": 11, "line": 7, "offset": 225 }
          },
          "$NEXT": {
            "abstract_content": "next",
            "end": { "col": 51, "line": 5, "offset": 165 },
            "start": { "col": 47, "line": 5, "offset": 161 }
          },
          "$QUERY": {
            "abstract_content": "path.resolve('ftp/'params.file)",
            "end": { "col": 53, "line": 7, "offset": 267 },
            "start": { "col": 20, "line": 7, "offset": 234 }
          },
          "$REQ": {
            "abstract_content": "params",
            "end": { "col": 19, "line": 5, "offset": 133 },
            "start": { "col": 13, "line": 5, "offset": 127 }
          },
          "$RES": {
            "abstract_content": "res",
            "end": { "col": 35, "line": 5, "offset": 149 },
            "start": { "col": 32, "line": 5, "offset": 146 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/ts/param_type_annot.ts",
      "start": { "col": 20, "line": 7, "offset": 234 }
    },
    {
      "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
      "end": { "col": 9, "line": 19, "offset": 282 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "a3cda5fe6da70a4c77d4d4dba88b65b5b15cc70b2a7bbd3fbb63e93c96ab962ba8a2b270815dc748fbb9da20f5f738a0ee8d76e778e13d22ca463bf0cf9a6cb3_0",
        "fix": "spec:\n  securityContext:\n    runAsNonRoot: true #",
        "is_ignored": false,
        "lines": "    spec:",
        "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-250: Execution with Unnecessary Privileges"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "references": [
            "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
            "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
            "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "ZqUqeK",
              "url": "https://semgrep.dev/playground/r/8KTQyg1/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
              "version_id": "8KTQyg1"
            }
          },
          "shortlink": "https://sg.run/dgP5",
          "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
          "subcategory": ["audit"],
          "technology": ["kubernetes"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "spec",
            "end": { "col": 5, "line": 1, "offset": 4 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$SPEC": {
            "abstract_content": "spec",
            "end": { "col": 9, "line": 19, "offset": 282 },
            "start": { "col": 5, "line": 19, "offset": 278 }
          }
        },
        "severity": "INFO",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/yaml/yaml_rules/kubernetes_ex.yml",
      "start": { "col": 5, "line": 19, "offset": 278 }
    },
    {
      "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
      "end": { "col": 20, "line": 21, "offset": 321 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5cb49e4e25af7610f23f1a9094008a0e0f5fbedeb9377d9491528ec1bfd75b02a741e9c0792772e1fe6b761da616d7e24697a61d5bcfdfeed5773b86447afdac_0",
        "fix": "app\n      securityContext:\n        allowPrivilegeEscalation: false",
        "is_ignored": false,
        "lines": "        - name: app",
        "message": "In Kubernetes, each pod runs in its own isolated environment with its own  set of security policies. However, certain container images may contain  `setuid` or `setgid` binaries that could allow an attacker to perform  privilege escalation and gain access to sensitive resources. To mitigate  this risk, it's recommended to add a `securityContext` to the container in  the pod, with the parameter `allowPrivilegeEscalation` set to `false`.  This will prevent the container from running any privileged processes and  limit the impact of any potential attacks.  By adding a `securityContext` to your Kubernetes pod, you can help to  ensure that your containerized applications are more secure and less  vulnerable to privilege escalation attacks.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-732: Incorrect Permission Assignment for Critical Resource"
          ],
          "cwe2021-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "references": [
            "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
            "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
            "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAU5J6",
              "url": "https://semgrep.dev/playground/r/NdT3oG0/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
              "version_id": "NdT3oG0"
            }
          },
          "shortlink": "https://sg.run/eleR",
          "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
          "subcategory": ["vuln"],
          "technology": ["kubernetes"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$CONTAINER": {
            "abstract_content": "app",
            "end": { "col": 20, "line": 21, "offset": 321 },
            "start": { "col": 17, "line": 21, "offset": 318 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/yaml/yaml_rules/kubernetes_ex.yml",
      "start": { "col": 17, "line": 21, "offset": 318 }
    },
    {
      "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
      "end": { "col": 9, "line": 64, "offset": 1351 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "a3cda5fe6da70a4c77d4d4dba88b65b5b15cc70b2a7bbd3fbb63e93c96ab962ba8a2b270815dc748fbb9da20f5f738a0ee8d76e778e13d22ca463bf0cf9a6cb3_1",
        "fix": "spec:\n  securityContext:\n    runAsNonRoot: true #",
        "is_ignored": false,
        "lines": "    spec:",
        "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-250: Execution with Unnecessary Privileges"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "references": [
            "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
            "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
            "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "ZqUqeK",
              "url": "https://semgrep.dev/playground/r/8KTQyg1/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
              "version_id": "8KTQyg1"
            }
          },
          "shortlink": "https://sg.run/dgP5",
          "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
          "subcategory": ["audit"],
          "technology": ["kubernetes"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "spec",
            "end": { "col": 5, "line": 1, "offset": 4 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$SPEC": {
            "abstract_content": "spec",
            "end": { "col": 9, "line": 64, "offset": 1351 },
            "start": { "col": 5, "line": 64, "offset": 1347 }
          }
        },
        "severity": "INFO",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/yaml/yaml_rules/kubernetes_ex.yml",
      "start": { "col": 5, "line": 64, "offset": 1347 }
    },
    {
      "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
      "end": { "col": 20, "line": 77, "offset": 1819 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5cb49e4e25af7610f23f1a9094008a0e0f5fbedeb9377d9491528ec1bfd75b02a741e9c0792772e1fe6b761da616d7e24697a61d5bcfdfeed5773b86447afdac_1",
        "fix": "app\n      securityContext:\n        allowPrivilegeEscalation: false",
        "is_ignored": false,
        "lines": "        - name: app",
        "message": "In Kubernetes, each pod runs in its own isolated environment with its own  set of security policies. However, certain container images may contain  `setuid` or `setgid` binaries that could allow an attacker to perform  privilege escalation and gain access to sensitive resources. To mitigate  this risk, it's recommended to add a `securityContext` to the container in  the pod, with the parameter `allowPrivilegeEscalation` set to `false`.  This will prevent the container from running any privileged processes and  limit the impact of any potential attacks.  By adding a `securityContext` to your Kubernetes pod, you can help to  ensure that your containerized applications are more secure and less  vulnerable to privilege escalation attacks.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-732: Incorrect Permission Assignment for Critical Resource"
          ],
          "cwe2021-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "references": [
            "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
            "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
            "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAU5J6",
              "url": "https://semgrep.dev/playground/r/NdT3oG0/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
              "version_id": "NdT3oG0"
            }
          },
          "shortlink": "https://sg.run/eleR",
          "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
          "subcategory": ["vuln"],
          "technology": ["kubernetes"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$CONTAINER": {
            "abstract_content": "app",
            "end": { "col": 20, "line": 77, "offset": 1819 },
            "start": { "col": 17, "line": 77, "offset": 1816 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/yaml/yaml_rules/kubernetes_ex.yml",
      "start": { "col": 17, "line": 77, "offset": 1816 }
    },
    {
      "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
      "end": { "col": 20, "line": 143, "offset": 3452 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5cb49e4e25af7610f23f1a9094008a0e0f5fbedeb9377d9491528ec1bfd75b02a741e9c0792772e1fe6b761da616d7e24697a61d5bcfdfeed5773b86447afdac_2",
        "fix": "app\n      securityContext:\n        allowPrivilegeEscalation: false",
        "is_ignored": false,
        "lines": "        - name: app",
        "message": "In Kubernetes, each pod runs in its own isolated environment with its own  set of security policies. However, certain container images may contain  `setuid` or `setgid` binaries that could allow an attacker to perform  privilege escalation and gain access to sensitive resources. To mitigate  this risk, it's recommended to add a `securityContext` to the container in  the pod, with the parameter `allowPrivilegeEscalation` set to `false`.  This will prevent the container from running any privileged processes and  limit the impact of any potential attacks.  By adding a `securityContext` to your Kubernetes pod, you can help to  ensure that your containerized applications are more secure and less  vulnerable to privilege escalation attacks.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-732: Incorrect Permission Assignment for Critical Resource"
          ],
          "cwe2021-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "references": [
            "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
            "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
            "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAU5J6",
              "url": "https://semgrep.dev/playground/r/NdT3oG0/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
              "version_id": "NdT3oG0"
            }
          },
          "shortlink": "https://sg.run/eleR",
          "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
          "subcategory": ["vuln"],
          "technology": ["kubernetes"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$CONTAINER": {
            "abstract_content": "app",
            "end": { "col": 20, "line": 143, "offset": 3452 },
            "start": { "col": 17, "line": 143, "offset": 3449 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/patterns/yaml/yaml_rules/kubernetes_ex.yml",
      "start": { "col": 17, "line": 143, "offset": 3449 }
    },
    {
      "check_id": "java.lang.security.audit.crlf-injection-logs.crlf-injection-logs",
      "end": { "col": 24, "line": 44, "offset": 874 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "03a8ef29057f45a722ddee7fc3db3e773b30465ffb0d4e79c80ca3016c019977b907f9040d288985e31a416cd9c8e4dec9168f473e9e87a9fef4093b8b51160a_0",
        "is_ignored": false,
        "lines": "        String val = req.getParameter(\"here\");\n        log.level(val);",
        "message": "When data from an untrusted source is put into a logger and not neutralized correctly, an attacker could forge log entries or include malicious content.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "8GUjwW",
              "url": "https://semgrep.dev/playground/r/RGTDk8b/java.lang.security.audit.crlf-injection-logs.crlf-injection-logs",
              "version_id": "RGTDk8b"
            }
          },
          "shortlink": "https://sg.run/wek0",
          "source": "https://semgrep.dev/r/java.lang.security.audit.crlf-injection-logs.crlf-injection-logs",
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#CRLF_INJECTION_LOGS",
          "subcategory": ["vuln"],
          "technology": ["java"],
          "vulnerability_class": ["Improper Validation"]
        },
        "metavars": {
          "$CLASS": {
            "abstract_content": "ExampleErrorClass",
            "end": { "col": 31, "line": 16, "offset": 362 },
            "start": { "col": 14, "line": 16, "offset": 345 }
          },
          "$LEVEL": {
            "abstract_content": "level",
            "end": { "col": 18, "line": 44, "offset": 868 },
            "start": { "col": 13, "line": 44, "offset": 863 }
          },
          "$LOG": {
            "abstract_content": "log",
            "end": { "col": 12, "line": 44, "offset": 862 },
            "start": { "col": 9, "line": 44, "offset": 859 }
          },
          "$METHOD": {
            "abstract_content": "badMethod",
            "end": { "col": 28, "line": 42, "offset": 777 },
            "start": { "col": 19, "line": 42, "offset": 768 }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": { "col": 25, "line": 43, "offset": 828 },
            "start": { "col": 22, "line": 43, "offset": 825 }
          },
          "$VAL": {
            "abstract_content": "val",
            "end": { "col": 19, "line": 43, "offset": 822 },
            "start": { "col": 16, "line": 43, "offset": 819 }
          },
          "$X": {
            "abstract_content": "String",
            "end": { "col": 18, "line": 42, "offset": 767 },
            "start": { "col": 12, "line": 42, "offset": 761 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/bloom/BadLogClass.java",
      "start": { "col": 9, "line": 43, "offset": 812 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 46, "line": 13, "offset": 449 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "d9c702c7a6a37d1d02053305131ff396c9ef8f31fc1ba5cb882d796379020b190d78b733d9c8d89e727251e7c82a36cae0c31fb904a5ed9d2681c3adbc8c3234_0",
        "is_ignored": false,
        "lines": "    return redirect(request.POST.get(\"next\"))",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arg",
            "end": { "col": 8, "line": 11, "offset": 365 },
            "start": { "col": 5, "line": 11, "offset": 362 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 33, "line": 13, "offset": 436 },
            "start": { "col": 29, "line": 13, "offset": 432 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/force_timeout.py",
      "start": { "col": 5, "line": 13, "offset": 408 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 46, "line": 13, "offset": 449 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "d9c702c7a6a37d1d02053305131ff396c9ef8f31fc1ba5cb882d796379020b190d78b733d9c8d89e727251e7c82a36cae0c31fb904a5ed9d2681c3adbc8c3234_1",
        "is_ignored": false,
        "lines": "    return redirect(request.POST.get(\"next\"))",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arg",
            "end": { "col": 8, "line": 11, "offset": 365 },
            "start": { "col": 5, "line": 11, "offset": 362 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 33, "line": 13, "offset": 436 },
            "start": { "col": 29, "line": 13, "offset": 432 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/force_timeout.py",
      "start": { "col": 12, "line": 13, "offset": 415 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 40, "line": 18, "offset": 538 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "7946ccc08d5e113757917a27d4f3c661f5a41561e10207d19566c17f1f024693c3e7262b413cc9a6e6553b0e640dcd8f0cd1254f5a91f1f8b10dd9c46d2ce08d_0",
        "is_ignored": false,
        "lines": "    return redirect(request.get_host())",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "argh",
            "end": { "col": 9, "line": 16, "offset": 460 },
            "start": { "col": 5, "line": 16, "offset": 456 }
          },
          "$W": {
            "abstract_content": "get_host",
            "end": { "col": 37, "line": 18, "offset": 535 },
            "start": { "col": 29, "line": 18, "offset": 527 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/force_timeout.py",
      "start": { "col": 5, "line": 18, "offset": 503 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 40, "line": 18, "offset": 538 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "7946ccc08d5e113757917a27d4f3c661f5a41561e10207d19566c17f1f024693c3e7262b413cc9a6e6553b0e640dcd8f0cd1254f5a91f1f8b10dd9c46d2ce08d_1",
        "is_ignored": false,
        "lines": "    return redirect(request.get_host())",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "argh",
            "end": { "col": 9, "line": 16, "offset": 460 },
            "start": { "col": 5, "line": 16, "offset": 456 }
          },
          "$W": {
            "abstract_content": "get_host",
            "end": { "col": 37, "line": 18, "offset": 535 },
            "start": { "col": 29, "line": 18, "offset": 527 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/force_timeout.py",
      "start": { "col": 12, "line": 18, "offset": 510 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 36, "line": 23, "offset": 624 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "d7cbabe6d3cf6f0051c6a44248fa3287c3ffe6e5d683c2db7c7b1269dfc18c8e8b89e5696af24e127cd118e6f57dd22ad443a4b3169c67c45990398e71924672_0",
        "is_ignored": false,
        "lines": "    return redirect(request.method)",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arghh",
            "end": { "col": 10, "line": 21, "offset": 550 },
            "start": { "col": 5, "line": 21, "offset": 545 }
          },
          "$W": {
            "abstract_content": "method",
            "end": { "col": 35, "line": 23, "offset": 623 },
            "start": { "col": 29, "line": 23, "offset": 617 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/force_timeout.py",
      "start": { "col": 5, "line": 23, "offset": 593 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 36, "line": 23, "offset": 624 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "d7cbabe6d3cf6f0051c6a44248fa3287c3ffe6e5d683c2db7c7b1269dfc18c8e8b89e5696af24e127cd118e6f57dd22ad443a4b3169c67c45990398e71924672_1",
        "is_ignored": false,
        "lines": "    return redirect(request.method)",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arghh",
            "end": { "col": 10, "line": 21, "offset": 550 },
            "start": { "col": 5, "line": 21, "offset": 545 }
          },
          "$W": {
            "abstract_content": "method",
            "end": { "col": 35, "line": 23, "offset": 623 },
            "start": { "col": 29, "line": 23, "offset": 617 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/force_timeout.py",
      "start": { "col": 12, "line": 23, "offset": 600 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 30, "offset": 751 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c9c224ebde3890ed9b29379ba561c15fffda5d13f318d54493f432225a679304773179b613b2c51a9bc3846a4cf274b0536aabf7c8fc69a50bec2267ef2bdc6a_0",
        "is_ignored": false,
        "lines": "    url = request.get_host()\n    print(\"something\")\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 28, "offset": 682 },
            "start": { "col": 5, "line": 28, "offset": 679 }
          },
          "$FUNC": {
            "abstract_content": "argh2",
            "end": { "col": 10, "line": 26, "offset": 636 },
            "start": { "col": 5, "line": 26, "offset": 631 }
          },
          "$W": {
            "abstract_content": "get_host",
            "end": { "col": 27, "line": 28, "offset": 701 },
            "start": { "col": 19, "line": 28, "offset": 693 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/force_timeout.py",
      "start": { "col": 5, "line": 28, "offset": 679 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 37, "offset": 892 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "7162f1f4053de11a1777c0ed21718c06bae83c20e668580cb845a35a5da3ee49e1572d4747b29beb22d250809798f745d3f1a3689e28b27f7325151772c2c50a_0",
        "is_ignored": false,
        "lines": "    url = request.headers.get(\"referrer\")\n    print(\"something\")\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 35, "offset": 810 },
            "start": { "col": 5, "line": 35, "offset": 807 }
          },
          "$FUNC": {
            "abstract_content": "unsafe",
            "end": { "col": 11, "line": 33, "offset": 764 },
            "start": { "col": 5, "line": 33, "offset": 758 }
          },
          "$W": {
            "abstract_content": "headers",
            "end": { "col": 26, "line": 35, "offset": 828 },
            "start": { "col": 19, "line": 35, "offset": 821 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/force_timeout.py",
      "start": { "col": 5, "line": 35, "offset": 807 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 37, "line": 54, "offset": 1184 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "4800de11c0bba1683da9000099d2208f1ed53192915dd342b3f2d7a5114d9ee138d00a0357eae3a329743f35defa4c2b2128de657540110c0329c4f1b50866dd_0",
        "is_ignored": false,
        "lines": "    url = request.POST.get(\"url\")\n    return HttpResponseRedirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 53, "offset": 1121 },
            "start": { "col": 5, "line": 53, "offset": 1118 }
          },
          "$FUNC": {
            "abstract_content": "unsafe2",
            "end": { "col": 12, "line": 51, "offset": 1075 },
            "start": { "col": 5, "line": 51, "offset": 1068 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 23, "line": 53, "offset": 1136 },
            "start": { "col": 19, "line": 53, "offset": 1132 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/force_timeout.py",
      "start": { "col": 5, "line": 53, "offset": 1118 }
    },
    {
      "check_id": "javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
      "end": { "col": 12, "line": 167, "offset": 6498 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6284f52d3faef62dde7c407b7e366aa904688b1309d85e9a48f297df08cb9e225ffcb7ccecfb37a7a9eaf350aeca979700e29727f418fa4edb8b3d35c13d8914_0",
        "is_ignored": false,
        "lines": "    parent.postMessage({\n        pk: Math.random(),\n        gatewayId: i,\n        url:'https://www.facebook.com/v7.0/dialog/oauth?app_id=APP_ID&SOME_OTHER_PARAMS',\n        eventId: \"loading\",\n        data: {\n            location: document.location.href\n        }\n    }, \"*\"), window.addEventListener(\"load\", function() {",
        "message": "The target origin of the window.postMessage() API is set to \"*\". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-345: Insufficient Verification of Data Authenticity"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUbq4",
              "url": "https://semgrep.dev/playground/r/LjTqQvN/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
              "version_id": "LjTqQvN"
            }
          },
          "shortlink": "https://sg.run/PJ4p",
          "source": "https://semgrep.dev/r/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Improper Authentication"]
        },
        "metavars": {
          "$OBJECT": {
            "abstract_content": "parent",
            "end": { "col": 11, "line": 159, "offset": 6234 },
            "start": { "col": 5, "line": 159, "offset": 6228 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.js",
      "start": { "col": 5, "line": 159, "offset": 6228 }
    },
    {
      "check_id": "javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
      "end": { "col": 16, "line": 175, "offset": 6772 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6284f52d3faef62dde7c407b7e366aa904688b1309d85e9a48f297df08cb9e225ffcb7ccecfb37a7a9eaf350aeca979700e29727f418fa4edb8b3d35c13d8914_1",
        "is_ignored": false,
        "lines": "        parent.postMessage({\n            pk: Math.random(),\n            gatewayId: i,\n            eventId: \"bootstrapSmartEdit\",\n            data: {\n                location: document.location.href\n            }\n        }, \"*\")",
        "message": "The target origin of the window.postMessage() API is set to \"*\". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-345: Insufficient Verification of Data Authenticity"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUbq4",
              "url": "https://semgrep.dev/playground/r/LjTqQvN/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
              "version_id": "LjTqQvN"
            }
          },
          "shortlink": "https://sg.run/PJ4p",
          "source": "https://semgrep.dev/r/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Improper Authentication"]
        },
        "metavars": {
          "$OBJECT": {
            "abstract_content": "parent",
            "end": { "col": 15, "line": 168, "offset": 6559 },
            "start": { "col": 9, "line": 168, "offset": 6553 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.js",
      "start": { "col": 9, "line": 168, "offset": 6553 }
    },
    {
      "check_id": "javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation",
      "end": { "col": 11, "line": 209, "offset": 8331 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "68a42150eb4e318261c6990d31bfc0f9580c18db6980ad2e52ec01e94feb557952758a65eacf9bebdebea8a95f22db1fb37a2c535556647ee93907d916305495_0",
        "is_ignored": false,
        "lines": "    }), window.addEventListener(\"message\", function(t) {\n        if (t.data.gatewayId !== i || \"bundle\" !== t.data.eventId) return;\n        if (!o.default.isAllowed(t.origin, window, l)) throw new Error(t.origin + \" is not allowed to override this storefront.\");\n        ! function(t, e) {\n            if (window.smartedit = window.smartedit || {}, parent.postMessage({\n                    gatewayId: i,\n                    eventId: \"promiseAcknowledgement\",\n                    data: {\n                        pk: t\n                    }\n                }, \"*\"), e) {\n                if (e.properties)\n                    for (var n in e.properties) e.properties.hasOwnProperty(n) && (window.smartedit[n] = e.properties[n]);\n                var o = document.getElementsByTagName(\"head\")[0];\n                if (e.js && e.js.length > 0) {\n                    var a = void 0;\n                    a = \"string\" == typeof e.js[0] ? e.js : e.js.filter(function(t) {\n                        return !t.namespaceToCheck || !window[t.namespaceToCheck]\n                    }).map(function(t) {\n                        return t.src\n                    }), r.default.injectJS(a)\n                }\n                e.css && e.css.length > 0 && r.default.injectCSS(o, e.css)\n            }\n            parent.postMessage({\n                gatewayId: i,\n                eventId: \"promiseReturn\",\n                data: {\n                    pk: t,\n                    type: \"success\"\n                }\n            }, \"*\")\n        }(t.data.pk, t.data.data.resources)\n    }, !1), window.onbeforeunload = function() {",
        "message": "No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-345: Insufficient Verification of Data Authenticity"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "BYUN0X",
              "url": "https://semgrep.dev/playground/r/vdTYNlP/javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation",
              "version_id": "vdTYNlP"
            }
          },
          "shortlink": "https://sg.run/gL9x",
          "source": "https://semgrep.dev/r/javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Improper Authentication"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "function(t){if t.data.gatewayId!==i||\"bundle\"!==t.data.eventId return;if!o.default.isAllowed(t.origin window l)throw new Error(t.origin+\" is not allowed to override this storefront.\");!function(t e){if window.smartedit=window.smartedit||{}parent.postMessage({gatewayId i eventId\"promiseAcknowledgement\"data{pk t}}\"*\")e{if e.properties for n in e.properties e.properties.hasOwnProperty(n)&&window.smartedit[n]=e.properties[n];var o document.getElementsByTagName(\"head\")[0]if e.js&&e.js.length>0{var a void 0 a=\"string\"==typeof e.js[0]e.js e.js.filter(function(t){return!t.namespaceToCheck||!window[t.namespaceToCheck]}).map(function(t){return t.src})r.default.injectJS(a)}e.css&&e.css.length>0&&r.default.injectCSS(o e.css)}parent.postMessage({gatewayId i eventId\"promiseReturn\"data{pk t type\"success\"}}\"*\")}(t.data.pk t.data.data.resources)}",
            "end": { "col": 6, "line": 209, "offset": 8326 },
            "start": { "col": 44, "line": 176, "offset": 6816 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.js",
      "start": { "col": 9, "line": 176, "offset": 6781 }
    },
    {
      "check_id": "javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
      "end": { "col": 24, "line": 186, "offset": 7335 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6284f52d3faef62dde7c407b7e366aa904688b1309d85e9a48f297df08cb9e225ffcb7ccecfb37a7a9eaf350aeca979700e29727f418fa4edb8b3d35c13d8914_2",
        "is_ignored": false,
        "lines": "            if (window.smartedit = window.smartedit || {}, parent.postMessage({\n                    gatewayId: i,\n                    eventId: \"promiseAcknowledgement\",\n                    data: {\n                        pk: t\n                    }\n                }, \"*\"), e) {",
        "message": "The target origin of the window.postMessage() API is set to \"*\". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-345: Insufficient Verification of Data Authenticity"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUbq4",
              "url": "https://semgrep.dev/playground/r/LjTqQvN/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
              "version_id": "LjTqQvN"
            }
          },
          "shortlink": "https://sg.run/PJ4p",
          "source": "https://semgrep.dev/r/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Improper Authentication"]
        },
        "metavars": {
          "$OBJECT": {
            "abstract_content": "parent",
            "end": { "col": 66, "line": 180, "offset": 7128 },
            "start": { "col": 60, "line": 180, "offset": 7122 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.js",
      "start": { "col": 60, "line": 180, "offset": 7122 }
    },
    {
      "check_id": "javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
      "end": { "col": 20, "line": 207, "offset": 8276 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6284f52d3faef62dde7c407b7e366aa904688b1309d85e9a48f297df08cb9e225ffcb7ccecfb37a7a9eaf350aeca979700e29727f418fa4edb8b3d35c13d8914_3",
        "is_ignored": false,
        "lines": "            parent.postMessage({\n                gatewayId: i,\n                eventId: \"promiseReturn\",\n                data: {\n                    pk: t,\n                    type: \"success\"\n                }\n            }, \"*\")",
        "message": "The target origin of the window.postMessage() API is set to \"*\". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-345: Insufficient Verification of Data Authenticity"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUbq4",
              "url": "https://semgrep.dev/playground/r/LjTqQvN/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
              "version_id": "LjTqQvN"
            }
          },
          "shortlink": "https://sg.run/PJ4p",
          "source": "https://semgrep.dev/r/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Improper Authentication"]
        },
        "metavars": {
          "$OBJECT": {
            "abstract_content": "parent",
            "end": { "col": 19, "line": 200, "offset": 8065 },
            "start": { "col": 13, "line": 200, "offset": 8059 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.js",
      "start": { "col": 13, "line": 200, "offset": 8059 }
    },
    {
      "check_id": "javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
      "end": { "col": 16, "line": 217, "offset": 8588 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6284f52d3faef62dde7c407b7e366aa904688b1309d85e9a48f297df08cb9e225ffcb7ccecfb37a7a9eaf350aeca979700e29727f418fa4edb8b3d35c13d8914_4",
        "is_ignored": false,
        "lines": "        parent.postMessage({\n            pk: Math.random(),\n            gatewayId: i,\n            eventId: \"unloading\",\n            data: {\n                location: document.location.href\n            }\n        }, \"*\")",
        "message": "The target origin of the window.postMessage() API is set to \"*\". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-345: Insufficient Verification of Data Authenticity"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUbq4",
              "url": "https://semgrep.dev/playground/r/LjTqQvN/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
              "version_id": "LjTqQvN"
            }
          },
          "shortlink": "https://sg.run/PJ4p",
          "source": "https://semgrep.dev/r/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Improper Authentication"]
        },
        "metavars": {
          "$OBJECT": {
            "abstract_content": "parent",
            "end": { "col": 15, "line": 210, "offset": 8384 },
            "start": { "col": 9, "line": 210, "offset": 8378 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.js",
      "start": { "col": 9, "line": 210, "offset": 8378 }
    },
    {
      "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
      "end": { "col": 45, "line": 308, "offset": 11855 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "e",
              "location": {
                "end": { "col": 52, "line": 304, "offset": 11602 },
                "path": "tests/perf/timeout.js",
                "start": { "col": 51, "line": 304, "offset": 11601 }
              }
            },
            {
              "content": "n",
              "location": {
                "end": { "col": 26, "line": 305, "offset": 11631 },
                "path": "tests/perf/timeout.js",
                "start": { "col": 25, "line": 305, "offset": 11630 }
              }
            },
            {
              "content": "r",
              "location": {
                "end": { "col": 30, "line": 307, "offset": 11734 },
                "path": "tests/perf/timeout.js",
                "start": { "col": 29, "line": 307, "offset": 11733 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 45, "line": 308, "offset": 11855 },
                "path": "tests/perf/timeout.js",
                "start": { "col": 32, "line": 308, "offset": 11842 }
              },
              "new RegExp(r)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 52, "line": 304, "offset": 11602 },
                "path": "tests/perf/timeout.js",
                "start": { "col": 51, "line": 304, "offset": 11601 }
              },
              "e"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "fafa3bc8f726a08b37ed53e0935c3828937021ff1e72c08ae4a26cdd9341d38de7f9194a9998d490eab3c0ffe5b1dd3a60ec14ed1a0ff25041ecac03283aca35_0",
        "is_ignored": false,
        "lines": "                        return new RegExp(r)",
        "message": "RegExp() called with a `e` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdU1gD",
              "url": "https://semgrep.dev/playground/r/w8T9nxz/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
              "version_id": "w8T9nxz"
            }
          },
          "shortlink": "https://sg.run/gr65",
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
          "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
          "subcategory": ["vuln"],
          "technology": ["javascript"],
          "vulnerability_class": ["Denial-of-Service (DoS)"]
        },
        "metavars": {
          "$ARG": {
            "abstract_content": "e",
            "end": { "col": 52, "line": 304, "offset": 11602 },
            "start": { "col": 51, "line": 304, "offset": 11601 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.js",
      "start": { "col": 32, "line": 308, "offset": 11842 }
    },
    {
      "check_id": "javascript.lang.security.detect-eval-with-expression.detect-eval-with-expression",
      "end": { "col": 14, "line": 353, "offset": 14414 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 14, "line": 353, "offset": 14414 },
                "path": "tests/perf/timeout.js",
                "start": { "col": 25, "line": 344, "offset": 14088 }
              },
              "function() {\n                parent.postMessage({\n                    pk: Math.random(),\n                    gatewayId: \"heartBeatGateway\",\n                    eventId: \"heartBeat\",\n                    data: {\n                        location: document.location.href\n                    }\n                }, \"*\")\n            }"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 57, "line": 350, "offset": 14354 },
                "path": "tests/perf/timeout.js",
                "start": { "col": 35, "line": 350, "offset": 14332 }
              },
              "document.location.href"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "ebe12ae0e61b1acb5e3ebc0604846081613788941be9e7a6ee8d74138f30cd56cc3752cddf57cbb8db14e421674d4b5a1a12aa65b54100dc6e7b69ef8397960f_0",
        "is_ignored": false,
        "lines": "            setInterval(function() {\n                parent.postMessage({\n                    pk: Math.random(),\n                    gatewayId: \"heartBeatGateway\",\n                    eventId: \"heartBeat\",\n                    data: {\n                        location: document.location.href\n                    }\n                }, \"*\")\n            }, n)",
        "message": "Detected use of dynamic execution of JavaScript which may come from user-input, which can lead to Cross-Site-Scripting (XSS). Where possible avoid including user-input in functions which dynamically execute user-input.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": ["A03:2021 - Injection"],
          "references": [
            "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#never_use_eval!"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "yyUngo",
              "url": "https://semgrep.dev/playground/r/o5TglEE/javascript.lang.security.detect-eval-with-expression.detect-eval-with-expression",
              "version_id": "o5TglEE"
            }
          },
          "shortlink": "https://sg.run/6nwK",
          "source": "https://semgrep.dev/r/javascript.lang.security.detect-eval-with-expression.detect-eval-with-expression",
          "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-eval-with-expression.js",
          "subcategory": ["vuln"],
          "technology": ["javascript"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$SINK": {
            "abstract_content": "function(){parent.postMessage({pk Math.random()gatewayId\"heartBeatGateway\"eventId\"heartBeat\"data{location document.location.href}}\"*\")}",
            "end": { "col": 14, "line": 353, "offset": 14414 },
            "start": { "col": 25, "line": 344, "offset": 14088 }
          },
          "$WINDOW": {
            "abstract_content": "document",
            "end": { "col": 43, "line": 350, "offset": 14340 },
            "start": { "col": 35, "line": 350, "offset": 14332 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.js",
      "start": { "col": 25, "line": 344, "offset": 14088 }
    },
    {
      "check_id": "javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
      "end": { "col": 24, "line": 352, "offset": 14400 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6284f52d3faef62dde7c407b7e366aa904688b1309d85e9a48f297df08cb9e225ffcb7ccecfb37a7a9eaf350aeca979700e29727f418fa4edb8b3d35c13d8914_5",
        "is_ignored": false,
        "lines": "                parent.postMessage({\n                    pk: Math.random(),\n                    gatewayId: \"heartBeatGateway\",\n                    eventId: \"heartBeat\",\n                    data: {\n                        location: document.location.href\n                    }\n                }, \"*\")",
        "message": "The target origin of the window.postMessage() API is set to \"*\". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-345: Insufficient Verification of Data Authenticity"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUbq4",
              "url": "https://semgrep.dev/playground/r/LjTqQvN/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
              "version_id": "LjTqQvN"
            }
          },
          "shortlink": "https://sg.run/PJ4p",
          "source": "https://semgrep.dev/r/javascript.browser.security.wildcard-postmessage-configuration.wildcard-postmessage-configuration",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Improper Authentication"]
        },
        "metavars": {
          "$OBJECT": {
            "abstract_content": "parent",
            "end": { "col": 23, "line": 345, "offset": 14123 },
            "start": { "col": 17, "line": 345, "offset": 14117 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.js",
      "start": { "col": 17, "line": 345, "offset": 14117 }
    },
    {
      "check_id": "javascript.browser.security.eval-detected.eval-detected",
      "end": { "col": 33, "line": 2096, "offset": 79943 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "54ec48b217aee8145ff6e2c8ee0e9cab11b5ec93d5ab6fc053b0ab5b8bcaf8630616a179b3664c3e3b6e8812d803ea54cac3eb85fd7e08741f6ffda7b623bd1d_0",
        "is_ignored": false,
        "lines": "                eval(dynamicExp);",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dynamic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing",
            "section": "V5 Validation, Sanitization and Encoding",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "GdU7dw",
              "url": "https://semgrep.dev/playground/r/xyTKZ6r/javascript.browser.security.eval-detected.eval-detected",
              "version_id": "xyTKZ6r"
            }
          },
          "shortlink": "https://sg.run/7ope",
          "source": "https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected",
          "subcategory": ["audit"],
          "technology": ["browser"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.js",
      "start": { "col": 17, "line": 2096, "offset": 79927 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 46, "line": 13, "offset": 449 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "e16d6bbab7d7904f8016aa1980ba8c764f8332408705914072b3998373608692fe9e58617cac8da8c6c1de95d1771a5d51720242389fb6643ee6f19007a45d9f_0",
        "is_ignored": false,
        "lines": "    return redirect(request.POST.get(\"next\"))",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arg",
            "end": { "col": 8, "line": 11, "offset": 365 },
            "start": { "col": 5, "line": 11, "offset": 362 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 33, "line": 13, "offset": 436 },
            "start": { "col": 29, "line": 13, "offset": 432 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.py",
      "start": { "col": 5, "line": 13, "offset": 408 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 46, "line": 13, "offset": 449 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "e16d6bbab7d7904f8016aa1980ba8c764f8332408705914072b3998373608692fe9e58617cac8da8c6c1de95d1771a5d51720242389fb6643ee6f19007a45d9f_1",
        "is_ignored": false,
        "lines": "    return redirect(request.POST.get(\"next\"))",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arg",
            "end": { "col": 8, "line": 11, "offset": 365 },
            "start": { "col": 5, "line": 11, "offset": 362 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 33, "line": 13, "offset": 436 },
            "start": { "col": 29, "line": 13, "offset": 432 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.py",
      "start": { "col": 12, "line": 13, "offset": 415 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 40, "line": 18, "offset": 538 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "16b8afcd708722d62e42b526f2eccbed77eb8f285b2069ee32ba9e32a8af8186cdef71498c7a1da61d91c866677b6c80b775d6a5722eeb352b8baa28b9c9a5b0_0",
        "is_ignored": false,
        "lines": "    return redirect(request.get_host())",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "argh",
            "end": { "col": 9, "line": 16, "offset": 460 },
            "start": { "col": 5, "line": 16, "offset": 456 }
          },
          "$W": {
            "abstract_content": "get_host",
            "end": { "col": 37, "line": 18, "offset": 535 },
            "start": { "col": 29, "line": 18, "offset": 527 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.py",
      "start": { "col": 5, "line": 18, "offset": 503 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 40, "line": 18, "offset": 538 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "16b8afcd708722d62e42b526f2eccbed77eb8f285b2069ee32ba9e32a8af8186cdef71498c7a1da61d91c866677b6c80b775d6a5722eeb352b8baa28b9c9a5b0_1",
        "is_ignored": false,
        "lines": "    return redirect(request.get_host())",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "argh",
            "end": { "col": 9, "line": 16, "offset": 460 },
            "start": { "col": 5, "line": 16, "offset": 456 }
          },
          "$W": {
            "abstract_content": "get_host",
            "end": { "col": 37, "line": 18, "offset": 535 },
            "start": { "col": 29, "line": 18, "offset": 527 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.py",
      "start": { "col": 12, "line": 18, "offset": 510 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 36, "line": 23, "offset": 624 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "0e8a2a99b0ce964c1251e4c520ba153f94795d5d32a913e302551d6bf032bd2659e10ed41c73c99cfc871c37c9aaf8eebb3e06714fca0cd49ed8a3653eee4f89_0",
        "is_ignored": false,
        "lines": "    return redirect(request.method)",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arghh",
            "end": { "col": 10, "line": 21, "offset": 550 },
            "start": { "col": 5, "line": 21, "offset": 545 }
          },
          "$W": {
            "abstract_content": "method",
            "end": { "col": 35, "line": 23, "offset": 623 },
            "start": { "col": 29, "line": 23, "offset": 617 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.py",
      "start": { "col": 5, "line": 23, "offset": 593 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 36, "line": 23, "offset": 624 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "0e8a2a99b0ce964c1251e4c520ba153f94795d5d32a913e302551d6bf032bd2659e10ed41c73c99cfc871c37c9aaf8eebb3e06714fca0cd49ed8a3653eee4f89_1",
        "is_ignored": false,
        "lines": "    return redirect(request.method)",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arghh",
            "end": { "col": 10, "line": 21, "offset": 550 },
            "start": { "col": 5, "line": 21, "offset": 545 }
          },
          "$W": {
            "abstract_content": "method",
            "end": { "col": 35, "line": 23, "offset": 623 },
            "start": { "col": 29, "line": 23, "offset": 617 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.py",
      "start": { "col": 12, "line": 23, "offset": 600 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 30, "offset": 751 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "b34107e266abee3c076fa22fbb7b054bb6169a7b1dddd76b4054515b3182f5949e3626de1051ada8232ecf24241c25864fd5b71d8a0f7ea394d66a29c40b6d16_0",
        "is_ignored": false,
        "lines": "    url = request.get_host()\n    print(\"something\")\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 28, "offset": 682 },
            "start": { "col": 5, "line": 28, "offset": 679 }
          },
          "$FUNC": {
            "abstract_content": "argh2",
            "end": { "col": 10, "line": 26, "offset": 636 },
            "start": { "col": 5, "line": 26, "offset": 631 }
          },
          "$W": {
            "abstract_content": "get_host",
            "end": { "col": 27, "line": 28, "offset": 701 },
            "start": { "col": 19, "line": 28, "offset": 693 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.py",
      "start": { "col": 5, "line": 28, "offset": 679 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 37, "offset": 892 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "b8c8c34cf25f45a821d1617e2dc89731895b513c72f90b9617711d66152b329acfa42b3d8b62d58abb6e7910b6ef9f557b817ddbfe6541a1e3f8dbf708de30ec_0",
        "is_ignored": false,
        "lines": "    url = request.headers.get(\"referrer\")\n    print(\"something\")\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 35, "offset": 810 },
            "start": { "col": 5, "line": 35, "offset": 807 }
          },
          "$FUNC": {
            "abstract_content": "unsafe",
            "end": { "col": 11, "line": 33, "offset": 764 },
            "start": { "col": 5, "line": 33, "offset": 758 }
          },
          "$W": {
            "abstract_content": "headers",
            "end": { "col": 26, "line": 35, "offset": 828 },
            "start": { "col": 19, "line": 35, "offset": 821 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.py",
      "start": { "col": 5, "line": 35, "offset": 807 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 37, "line": 54, "offset": 1184 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "d54c0b22c189799cf5a63b46973eafaafa6e71ff0dab6102dd19a5db0e033852eaa14e042c778819fbcb04dc0f59375b13c0028e5e3bcf43d48718a7b66fecf3_0",
        "is_ignored": false,
        "lines": "    url = request.POST.get(\"url\")\n    return HttpResponseRedirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 53, "offset": 1121 },
            "start": { "col": 5, "line": 53, "offset": 1118 }
          },
          "$FUNC": {
            "abstract_content": "unsafe2",
            "end": { "col": 12, "line": 51, "offset": 1075 },
            "start": { "col": 5, "line": 51, "offset": 1068 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 23, "line": 53, "offset": 1136 },
            "start": { "col": 19, "line": 53, "offset": 1132 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout.py",
      "start": { "col": 5, "line": 53, "offset": 1118 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 46, "line": 9, "offset": 255 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6300eb7903d606c70f77f2d7fdf2c16bbbbfe5656a38696590b682c167a1bb57bea40546c6689756b3d4312b8c8880023dfa442345c2219ae94716ee4300ca3d_0",
        "is_ignored": false,
        "lines": "    return redirect(request.POST.get(\"next\"))",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arg",
            "end": { "col": 8, "line": 7, "offset": 171 },
            "start": { "col": 5, "line": 7, "offset": 168 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 33, "line": 9, "offset": 242 },
            "start": { "col": 29, "line": 9, "offset": 238 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout_gracefully.py",
      "start": { "col": 5, "line": 9, "offset": 214 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 46, "line": 9, "offset": 255 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6300eb7903d606c70f77f2d7fdf2c16bbbbfe5656a38696590b682c167a1bb57bea40546c6689756b3d4312b8c8880023dfa442345c2219ae94716ee4300ca3d_1",
        "is_ignored": false,
        "lines": "    return redirect(request.POST.get(\"next\"))",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arg",
            "end": { "col": 8, "line": 7, "offset": 171 },
            "start": { "col": 5, "line": 7, "offset": 168 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 33, "line": 9, "offset": 242 },
            "start": { "col": 29, "line": 9, "offset": 238 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout_gracefully.py",
      "start": { "col": 12, "line": 9, "offset": 221 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 40, "line": 14, "offset": 344 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "ea596586df4e189c3d73799940d6cdcff0baf76c356494e9588779cf718c90d95d926bcb8e259d3954a0d84f8b0f43d4265af2a08f2c3a940ae205056705335d_0",
        "is_ignored": false,
        "lines": "    return redirect(request.get_host())",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "argh",
            "end": { "col": 9, "line": 12, "offset": 266 },
            "start": { "col": 5, "line": 12, "offset": 262 }
          },
          "$W": {
            "abstract_content": "get_host",
            "end": { "col": 37, "line": 14, "offset": 341 },
            "start": { "col": 29, "line": 14, "offset": 333 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout_gracefully.py",
      "start": { "col": 5, "line": 14, "offset": 309 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 40, "line": 14, "offset": 344 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "ea596586df4e189c3d73799940d6cdcff0baf76c356494e9588779cf718c90d95d926bcb8e259d3954a0d84f8b0f43d4265af2a08f2c3a940ae205056705335d_1",
        "is_ignored": false,
        "lines": "    return redirect(request.get_host())",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "argh",
            "end": { "col": 9, "line": 12, "offset": 266 },
            "start": { "col": 5, "line": 12, "offset": 262 }
          },
          "$W": {
            "abstract_content": "get_host",
            "end": { "col": 37, "line": 14, "offset": 341 },
            "start": { "col": 29, "line": 14, "offset": 333 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout_gracefully.py",
      "start": { "col": 12, "line": 14, "offset": 316 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 36, "line": 19, "offset": 430 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "52dac0e752ab070c49abb6a59d262b66da22d5ed3141c227edb5dfd71fd009f10d2d238b426de006844795722713c725b367410c5cb97108f8601786ccdb0ec6_0",
        "is_ignored": false,
        "lines": "    return redirect(request.method)",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arghh",
            "end": { "col": 10, "line": 17, "offset": 356 },
            "start": { "col": 5, "line": 17, "offset": 351 }
          },
          "$W": {
            "abstract_content": "method",
            "end": { "col": 35, "line": 19, "offset": 429 },
            "start": { "col": 29, "line": 19, "offset": 423 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout_gracefully.py",
      "start": { "col": 5, "line": 19, "offset": 399 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 36, "line": 19, "offset": 430 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "52dac0e752ab070c49abb6a59d262b66da22d5ed3141c227edb5dfd71fd009f10d2d238b426de006844795722713c725b367410c5cb97108f8601786ccdb0ec6_1",
        "is_ignored": false,
        "lines": "    return redirect(request.method)",
        "message": "Data from request ($DATA) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$FUNC": {
            "abstract_content": "arghh",
            "end": { "col": 10, "line": 17, "offset": 356 },
            "start": { "col": 5, "line": 17, "offset": 351 }
          },
          "$W": {
            "abstract_content": "method",
            "end": { "col": 35, "line": 19, "offset": 429 },
            "start": { "col": 29, "line": 19, "offset": 423 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout_gracefully.py",
      "start": { "col": 12, "line": 19, "offset": 406 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 26, "offset": 557 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "80022fad211e598d1aa34fa45e2060c47f0b9762a66a1971e35d2c95adfa4ec79dea352edef0073328ec33ab35745ab688d9105509b3b395f80983c858ad9ef0_0",
        "is_ignored": false,
        "lines": "    url = request.get_host()\n    print(\"something\")\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 24, "offset": 488 },
            "start": { "col": 5, "line": 24, "offset": 485 }
          },
          "$FUNC": {
            "abstract_content": "argh2",
            "end": { "col": 10, "line": 22, "offset": 442 },
            "start": { "col": 5, "line": 22, "offset": 437 }
          },
          "$W": {
            "abstract_content": "get_host",
            "end": { "col": 27, "line": 24, "offset": 507 },
            "start": { "col": 19, "line": 24, "offset": 499 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout_gracefully.py",
      "start": { "col": 5, "line": 24, "offset": 485 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 33, "offset": 698 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "3136b30e60f07dc65913cbf75c176bc1adf0d00ccaeabe5f4cc0a5c632d68b160116f017aa2f0ec80d80f5645bf4312020d67b1c2ea956ec20f0384c6b48dcd0_0",
        "is_ignored": false,
        "lines": "    url = request.headers.get(\"referrer\")\n    print(\"something\")\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 31, "offset": 616 },
            "start": { "col": 5, "line": 31, "offset": 613 }
          },
          "$FUNC": {
            "abstract_content": "unsafe",
            "end": { "col": 11, "line": 29, "offset": 570 },
            "start": { "col": 5, "line": 29, "offset": 564 }
          },
          "$W": {
            "abstract_content": "headers",
            "end": { "col": 26, "line": 31, "offset": 634 },
            "start": { "col": 19, "line": 31, "offset": 627 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout_gracefully.py",
      "start": { "col": 5, "line": 31, "offset": 613 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 37, "line": 50, "offset": 990 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "62e57bf585f38c9c7975233f0f11ad20ad7c854837f60ced8b221cf18664e2a7b69fda991bcd71747cd12a4ef3831f419094e266a25db42db9b3e240929d9465_0",
        "is_ignored": false,
        "lines": "    url = request.POST.get(\"url\")\n    return HttpResponseRedirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 49, "offset": 927 },
            "start": { "col": 5, "line": 49, "offset": 924 }
          },
          "$FUNC": {
            "abstract_content": "unsafe2",
            "end": { "col": 12, "line": 47, "offset": 881 },
            "start": { "col": 5, "line": 47, "offset": 874 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 23, "line": 49, "offset": 942 },
            "start": { "col": 19, "line": 49, "offset": 938 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/perf/timeout_gracefully.py",
      "start": { "col": 5, "line": 49, "offset": 924 }
    },
    {
      "check_id": "ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
      "end": { "col": 23, "line": 17, "offset": 432 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6835cce0e0167bca80d19ed0b4aec9bfc57c1f0677d0eb1c6124d27e208ba47e7ce53deb065a60af430cf390cd8497cf47c643d69843a5396c129bad0d05efc5_0",
        "is_ignored": false,
        "lines": "secret_const = 'secret-yo'\n\ndef bad1\n    # ruleid: ruby-jwt-hardcoded-secret\n    hmac_secret = 'my$ecretK3y'\n    # ruleid: ruby-jwt-hardcoded-secret\n    token = JWT.encode payload, hmac_secret, 'HS256'\n    puts token\nend\n\ndef bad2(token)\n    # ruleid: ruby-jwt-hardcoded-secret\n    decoded_token = JWT.decode token, secret_const, true, { algorithm: 'HS256' }\n    puts decoded_token",
        "message": "Hardcoded JWT secret or private key is used. This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables)",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-522: Insufficiently Protected Credentials"],
          "cwe2021-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A02:2017 - Broken Authentication",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZz5",
              "url": "https://semgrep.dev/playground/r/zyTKDAv/ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
              "version_id": "zyTKDAv"
            }
          },
          "shortlink": "https://sg.run/GW2B",
          "source": "https://semgrep.dev/r/ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
          "source-rule-url": "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/",
          "subcategory": ["audit"],
          "technology": ["jwt"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$PAYLOAD": {
            "abstract_content": "token",
            "end": { "col": 37, "line": 16, "offset": 365 },
            "start": { "col": 32, "line": 16, "offset": 360 }
          },
          "$SECRET": {
            "abstract_content": "secret_const",
            "end": { "col": 13, "line": 4, "offset": 63 },
            "start": { "col": 1, "line": 4, "offset": 51 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rule_formats/jwt-hardcode.rb",
      "start": { "col": 1, "line": 4, "offset": 51 }
    },
    {
      "check_id": "ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
      "end": { "col": 53, "line": 10, "offset": 252 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "844848df0ce9b7079c312e4cee7099da0c19b1b7d197ce2ce507bf5a650500657b6c00697451fb76202b223158f7024baaf67b039cf7b04a835f6ff3dfd466ee_0",
        "is_ignored": false,
        "lines": "    hmac_secret = 'my$ecretK3y'\n    # ruleid: ruby-jwt-hardcoded-secret\n    token = JWT.encode payload, hmac_secret, 'HS256'",
        "message": "Hardcoded JWT secret or private key is used. This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables)",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-522: Insufficiently Protected Credentials"],
          "cwe2021-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A02:2017 - Broken Authentication",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZz5",
              "url": "https://semgrep.dev/playground/r/zyTKDAv/ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
              "version_id": "zyTKDAv"
            }
          },
          "shortlink": "https://sg.run/GW2B",
          "source": "https://semgrep.dev/r/ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
          "source-rule-url": "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/",
          "subcategory": ["audit"],
          "technology": ["jwt"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$PAYLOAD": {
            "abstract_content": "payload",
            "end": { "col": 31, "line": 10, "offset": 230 },
            "start": { "col": 24, "line": 10, "offset": 223 }
          },
          "$SECRET": {
            "abstract_content": "hmac_secret",
            "end": { "col": 16, "line": 8, "offset": 143 },
            "start": { "col": 5, "line": 8, "offset": 132 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rule_formats/jwt-hardcode.rb",
      "start": { "col": 5, "line": 8, "offset": 132 }
    },
    {
      "check_id": "ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
      "end": { "col": 53, "line": 10, "offset": 252 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "ab10635d45ff107b08d802478812031f08fadecad7fd83a00ef519b706ad42ee9cf3754d80f8edcc51d62280a1d40c9f3ade6143683bafb2d82d120a64b7504b_0",
        "is_ignored": false,
        "lines": "    token = JWT.encode payload, hmac_secret, 'HS256'",
        "message": "Hardcoded JWT secret or private key is used. This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables)",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-522: Insufficiently Protected Credentials"],
          "cwe2021-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A02:2017 - Broken Authentication",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZz5",
              "url": "https://semgrep.dev/playground/r/zyTKDAv/ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
              "version_id": "zyTKDAv"
            }
          },
          "shortlink": "https://sg.run/GW2B",
          "source": "https://semgrep.dev/r/ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
          "source-rule-url": "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/",
          "subcategory": ["audit"],
          "technology": ["jwt"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$PAYLOAD": {
            "abstract_content": "payload",
            "end": { "col": 31, "line": 10, "offset": 230 },
            "start": { "col": 24, "line": 10, "offset": 223 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rule_formats/jwt-hardcode.rb",
      "start": { "col": 13, "line": 10, "offset": 212 }
    },
    {
      "check_id": "ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
      "end": { "col": 81, "line": 16, "offset": 409 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "7d5d08d5c8c0a5bfe0988f1cf468fab89981c260702cf032a0528a7b89fef895caa6ba06a4d00ec03d11cdc272da62346d2921e553042e3ef2874778ec450fec_0",
        "is_ignored": false,
        "lines": "    decoded_token = JWT.decode token, secret_const, true, { algorithm: 'HS256' }",
        "message": "Hardcoded JWT secret or private key is used. This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables)",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-522: Insufficiently Protected Credentials"],
          "cwe2021-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A02:2017 - Broken Authentication",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZz5",
              "url": "https://semgrep.dev/playground/r/zyTKDAv/ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
              "version_id": "zyTKDAv"
            }
          },
          "shortlink": "https://sg.run/GW2B",
          "source": "https://semgrep.dev/r/ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
          "source-rule-url": "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/",
          "subcategory": ["audit"],
          "technology": ["jwt"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$PAYLOAD": {
            "abstract_content": "token",
            "end": { "col": 37, "line": 16, "offset": 365 },
            "start": { "col": 32, "line": 16, "offset": 360 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rule_formats/jwt-hardcode.rb",
      "start": { "col": 21, "line": 16, "offset": 349 }
    },
    {
      "check_id": "ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
      "end": { "col": 52, "line": 22, "offset": 538 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "ab10635d45ff107b08d802478812031f08fadecad7fd83a00ef519b706ad42ee9cf3754d80f8edcc51d62280a1d40c9f3ade6143683bafb2d82d120a64b7504b_1",
        "is_ignored": false,
        "lines": "    token = JWT.encode payload, 'hardcode', 'HS256'",
        "message": "Hardcoded JWT secret or private key is used. This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables)",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-522: Insufficiently Protected Credentials"],
          "cwe2021-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A02:2017 - Broken Authentication",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZz5",
              "url": "https://semgrep.dev/playground/r/zyTKDAv/ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
              "version_id": "zyTKDAv"
            }
          },
          "shortlink": "https://sg.run/GW2B",
          "source": "https://semgrep.dev/r/ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
          "source-rule-url": "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/",
          "subcategory": ["audit"],
          "technology": ["jwt"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$PAYLOAD": {
            "abstract_content": "payload",
            "end": { "col": 31, "line": 22, "offset": 517 },
            "start": { "col": 24, "line": 22, "offset": 510 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rule_formats/jwt-hardcode.rb",
      "start": { "col": 13, "line": 22, "offset": 499 }
    },
    {
      "check_id": "ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
      "end": { "col": 45, "line": 28, "offset": 652 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "ab10635d45ff107b08d802478812031f08fadecad7fd83a00ef519b706ad42ee9cf3754d80f8edcc51d62280a1d40c9f3ade6143683bafb2d82d120a64b7504b_2",
        "is_ignored": false,
        "lines": "    token = JWT.encode payload, nil, 'HS256'",
        "message": "Hardcoded JWT secret or private key is used. This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables)",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-522: Insufficiently Protected Credentials"],
          "cwe2021-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A02:2017 - Broken Authentication",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZz5",
              "url": "https://semgrep.dev/playground/r/zyTKDAv/ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
              "version_id": "zyTKDAv"
            }
          },
          "shortlink": "https://sg.run/GW2B",
          "source": "https://semgrep.dev/r/ruby.jwt.security.jwt-hardcode.ruby-jwt-hardcoded-secret",
          "source-rule-url": "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/",
          "subcategory": ["audit"],
          "technology": ["jwt"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$PAYLOAD": {
            "abstract_content": "payload",
            "end": { "col": 31, "line": 28, "offset": 638 },
            "start": { "col": 24, "line": 28, "offset": 631 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rule_formats/jwt-hardcode.rb",
      "start": { "col": 13, "line": 28, "offset": 620 }
    },
    {
      "check_id": "go.lang.security.audit.crypto.use_of_weak_rsa_key.use-of-weak-rsa-key",
      "end": { "col": 47, "line": 12, "offset": 178 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5ec041189251280ace959f1b4b51f660b48aa53ccb5747ce318d0057e6f65c885c3ad5716c06821fd3f68b9b80d0a9a61746c23cacb2e8632785dc84be6d71ed_0",
        "fix": "2048",
        "is_ignored": false,
        "lines": "\tpvk, err := rsa.GenerateKey(rand.Reader, 1024)",
        "message": "RSA keys should be at least 2048 bits",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": ["CWE-326: Inadequate Encryption Strength"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html#algorithms"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UjY3",
              "url": "https://semgrep.dev/playground/r/9lTdWGe/go.lang.security.audit.crypto.use_of_weak_rsa_key.use-of-weak-rsa-key",
              "version_id": "9lTdWGe"
            }
          },
          "shortlink": "https://sg.run/9oY4",
          "source": "https://semgrep.dev/r/go.lang.security.audit.crypto.use_of_weak_rsa_key.use-of-weak-rsa-key",
          "source-rule-url": "https://github.com/securego/gosec/blob/master/rules/rsa.go",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$BITS": {
            "abstract_content": "1024",
            "end": { "col": 47, "line": 12, "offset": 178 },
            "start": { "col": 43, "line": 12, "offset": 174 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/cp_subtraction.go",
      "start": { "col": 43, "line": 12, "offset": 174 }
    },
    {
      "check_id": "go.lang.security.audit.crypto.use_of_weak_rsa_key.use-of-weak-rsa-key",
      "end": { "col": 48, "line": 21, "offset": 357 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "a575b77888fbd3cb1a70b68ba38fe2b48f31d41a695c6a5d7be539c15a8c614b80c9d713e7a260189669e6fafa626c3a79e64e73c5e73d3b7f91c181049da23e_0",
        "fix": "2048",
        "is_ignored": false,
        "lines": "\tpvk, err := rsa.GenerateKey(rand.Reader, value)",
        "message": "RSA keys should be at least 2048 bits",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": ["CWE-326: Inadequate Encryption Strength"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html#algorithms"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UjY3",
              "url": "https://semgrep.dev/playground/r/9lTdWGe/go.lang.security.audit.crypto.use_of_weak_rsa_key.use-of-weak-rsa-key",
              "version_id": "9lTdWGe"
            }
          },
          "shortlink": "https://sg.run/9oY4",
          "source": "https://semgrep.dev/r/go.lang.security.audit.crypto.use_of_weak_rsa_key.use-of-weak-rsa-key",
          "source-rule-url": "https://github.com/securego/gosec/blob/master/rules/rsa.go",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$BITS": {
            "abstract_content": "value",
            "end": { "col": 48, "line": 21, "offset": 357 },
            "propagated_value": { "svalue_abstract_content": "" },
            "start": { "col": 43, "line": 21, "offset": 352 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/cp_subtraction.go",
      "start": { "col": 43, "line": 21, "offset": 352 }
    },
    {
      "check_id": "go.lang.security.audit.crypto.use_of_weak_rsa_key.use-of-weak-rsa-key",
      "end": { "col": 48, "line": 13, "offset": 195 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "16a732f41b62f72475c7ef9161e19fb665461d929e50b90f82f3e1aad21c05b3b561ec0e08ac613f3d0d40a9a6ac96b65614c13d7366713c0d6bd8bd4ba1731a_0",
        "fix": "2048",
        "is_ignored": false,
        "lines": "\tpvk, err := rsa.GenerateKey(rand.Reader, value)",
        "message": "RSA keys should be at least 2048 bits",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": ["CWE-326: Inadequate Encryption Strength"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html#algorithms"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "d8UjY3",
              "url": "https://semgrep.dev/playground/r/9lTdWGe/go.lang.security.audit.crypto.use_of_weak_rsa_key.use-of-weak-rsa-key",
              "version_id": "9lTdWGe"
            }
          },
          "shortlink": "https://sg.run/9oY4",
          "source": "https://semgrep.dev/r/go.lang.security.audit.crypto.use_of_weak_rsa_key.use-of-weak-rsa-key",
          "source-rule-url": "https://github.com/securego/gosec/blob/master/rules/rsa.go",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$BITS": {
            "abstract_content": "value",
            "end": { "col": 48, "line": 13, "offset": 195 },
            "propagated_value": { "svalue_abstract_content": "" },
            "start": { "col": 43, "line": 13, "offset": 190 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/cp_subtraction1.go",
      "start": { "col": 43, "line": 13, "offset": 190 }
    },
    {
      "check_id": "generic.secrets.security.detected-generic-secret.detected-generic-secret",
      "end": { "col": 56, "line": 2, "offset": 80 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "b2aa242dcfdb704105db2062351406787aa6c5d83c27c36cc1403d64704e9b345cf53bf8919788a675636165e55257b593c316480680fe06838062388e373fde_0",
        "is_ignored": false,
        "lines": "secret = 'feoi7n978faseduy987ybf67t4ni867fased6tbi6fa34nf97'",
        "message": "Generic Secret detected",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-798: Use of Hard-coded Credentials"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A07:2021 - Identification and Authentication Failures"],
          "references": [
            "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "r6Urqe",
              "url": "https://semgrep.dev/playground/r/BjTXrOJ/generic.secrets.security.detected-generic-secret.detected-generic-secret",
              "version_id": "BjTXrOJ"
            }
          },
          "shortlink": "https://sg.run/l2o5",
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-generic-secret.detected-generic-secret",
          "source-rule-url": "https://github.com/dxa4481/truffleHogRegexes/blob/master/truffleHogRegexes/regexes.json",
          "subcategory": ["audit"],
          "technology": ["secrets"],
          "vulnerability_class": ["Hard-coded Secrets"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "feoi7n978faseduy987ybf67t4ni867fased6tbi6fa34",
            "end": { "col": 56, "line": 2, "offset": 80 },
            "start": { "col": 11, "line": 2, "offset": 35 }
          },
          "$SECRET": {
            "abstract_content": "feoi7n978faseduy987ybf67t4ni867fased6tbi6fa34",
            "end": { "col": 56, "line": 2, "offset": 80 },
            "start": { "col": 11, "line": 2, "offset": 35 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/entropy_python.py",
      "start": { "col": 1, "line": 2, "offset": 25 }
    },
    {
      "check_id": "javascript.express.security.audit.xss.ejs.var-in-script-src.var-in-script-src",
      "end": { "col": 44, "line": 8, "offset": 292 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "72cc323a4356d65c86bd44d51e3f537dbdb9f1e8bba1c9a5bebfc7cabfa3b25c501c1f6f5ae45e095358da6ff59fe350c4748cece2fe580d5f5c3adc587b5d60_0",
        "is_ignored": false,
        "lines": "<script src=\"./<%=reactDemoIndexBundleJs %>\" crossOrigin=\"anonymous\" integrity=\"<%=sri.reactDemoIndexBundleJs %>\"></script>",
        "message": "Detected a template variable used as the 'src' in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent malicious URLs from being injected and could results in a cross-site scripting (XSS) vulnerability. Prefer not to dynamically generate the 'src' attribute and use static URLs instead. If you must do this, carefully check URLs against an allowlist and be sure to URL-encode the result.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://www.veracode.com/blog/secure-development/nodejs-template-engines-why-default-encoders-are-not-enough",
            "https://github.com/ESAPI/owasp-esapi-js"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "JDUyrJ",
              "url": "https://semgrep.dev/playground/r/kbTdx1n/javascript.express.security.audit.xss.ejs.var-in-script-src.var-in-script-src",
              "version_id": "kbTdx1n"
            }
          },
          "shortlink": "https://sg.run/ndxZ",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.xss.ejs.var-in-script-src.var-in-script-src",
          "subcategory": ["audit"],
          "technology": ["express"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/inside.ejs",
      "start": { "col": 16, "line": 8, "offset": 264 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 7, "offset": 182 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "609dc9289c86573b7489e2215dba61717219d0bd5ba03c66f95b0d97ec75fbd37264a7ddde157cd0d11557dca908ec800d5ffee6604704a11425bf2fc95b6b64_0",
        "is_ignored": false,
        "lines": "    url = request.headers.get('referrer')\n    print(\"something\")\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 5, "offset": 100 },
            "start": { "col": 5, "line": 5, "offset": 97 }
          },
          "$FUNC": {
            "abstract_content": "unsafe1",
            "end": { "col": 12, "line": 3, "offset": 50 },
            "start": { "col": 5, "line": 3, "offset": 43 }
          },
          "$W": {
            "abstract_content": "headers",
            "end": { "col": 26, "line": 5, "offset": 118 },
            "start": { "col": 19, "line": 5, "offset": 111 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_pattern_nested1.py",
      "start": { "col": 5, "line": 5, "offset": 97 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 13, "offset": 319 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "348d551b016ad640fa9bccd92eb2dc7c1b8f4bb0dec5c9b072a090e169ebe60f70d7f444ef68ba4a48ec50f7993f1e9bcd19de03f312b0847263e781f7b59b2a_0",
        "is_ignored": false,
        "lines": "    url = request.get('referrer')\n    print(\"something\")\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 11, "offset": 245 },
            "start": { "col": 5, "line": 11, "offset": 242 }
          },
          "$FUNC": {
            "abstract_content": "unsafe1",
            "end": { "col": 12, "line": 9, "offset": 195 },
            "start": { "col": 5, "line": 9, "offset": 188 }
          },
          "$W": {
            "abstract_content": "get",
            "end": { "col": 22, "line": 11, "offset": 259 },
            "start": { "col": 19, "line": 11, "offset": 256 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_pattern_nested1.py",
      "start": { "col": 5, "line": 11, "offset": 242 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 11, "offset": 302 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "6928719d0f6d904849375907f5bbc388174acc373c0938c37252811897f99c963e966b2e92129f5151f5e577be85214b508799748b2e1332a6b0f9723ad73745_0",
        "is_ignored": false,
        "lines": "    url = request.headers.get(\"referrer\")\n    print(\"something\")\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 9, "offset": 220 },
            "start": { "col": 5, "line": 9, "offset": 217 }
          },
          "$FUNC": {
            "abstract_content": "unsafe",
            "end": { "col": 11, "line": 7, "offset": 174 },
            "start": { "col": 5, "line": 7, "offset": 168 }
          },
          "$W": {
            "abstract_content": "headers",
            "end": { "col": 26, "line": 9, "offset": 238 },
            "start": { "col": 19, "line": 9, "offset": 231 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_pattern_open_redirect.py",
      "start": { "col": 5, "line": 9, "offset": 217 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 37, "line": 23, "offset": 525 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "625da3bfccf8302989cc1c30a3b5514b904ac9a0ba1c64c972b9f2aae7eaa7d3a61302e473268c9af8dab8b8e467f0404e3b4d325166af232934ce1319b9cf80_0",
        "is_ignored": false,
        "lines": "    url = request.POST.get(\"url\")\n    return HttpResponseRedirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 22, "offset": 462 },
            "start": { "col": 5, "line": 22, "offset": 459 }
          },
          "$FUNC": {
            "abstract_content": "unsafe2",
            "end": { "col": 12, "line": 20, "offset": 416 },
            "start": { "col": 5, "line": 20, "offset": 409 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 23, "line": 22, "offset": 477 },
            "start": { "col": 19, "line": 22, "offset": 473 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_pattern_open_redirect.py",
      "start": { "col": 5, "line": 22, "offset": 459 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 37, "line": 29, "offset": 644 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "5aaadd14eeda67622b9a79815d0cf622f11e6a8b3ad7f642b31e9257993335811ed4d8ba1eb88b98ab1ba5f942b5fd9b6068e8b77b58673e51aeebc6c53edae8_0",
        "is_ignored": false,
        "lines": "    url = request.POST[\"url\"]\n    return HttpResponseRedirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 28, "offset": 585 },
            "start": { "col": 5, "line": 28, "offset": 582 }
          },
          "$FUNC": {
            "abstract_content": "unsafe3",
            "end": { "col": 12, "line": 26, "offset": 539 },
            "start": { "col": 5, "line": 26, "offset": 532 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 23, "line": 28, "offset": 600 },
            "start": { "col": 19, "line": 28, "offset": 596 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_pattern_open_redirect.py",
      "start": { "col": 5, "line": 28, "offset": 582 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 41, "line": 36, "offset": 832 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "1955bf9f57bc0307c9d19448491ef2ec1aafea6ef063fb7ae59f994f66830c00ed1ed4d17c929762b5d693742d9459db3af072c792fc539e40e6a4ffea0a1c69_0",
        "is_ignored": false,
        "lines": "    url = request.get_referrer()  # I made this up, but if it exists don't do this\n    if url:\n        return HttpResponseRedirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 34, "offset": 704 },
            "start": { "col": 5, "line": 34, "offset": 701 }
          },
          "$FUNC": {
            "abstract_content": "unsafe4",
            "end": { "col": 12, "line": 32, "offset": 658 },
            "start": { "col": 5, "line": 32, "offset": 651 }
          },
          "$W": {
            "abstract_content": "get_referrer",
            "end": { "col": 31, "line": 34, "offset": 727 },
            "start": { "col": 19, "line": 34, "offset": 715 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_pattern_open_redirect.py",
      "start": { "col": 5, "line": 34, "offset": 701 }
    },
    {
      "check_id": "javascript.sequelize.security.audit.sequelize-weak-tls-version.sequelize-weak-tls-version",
      "end": { "col": 8, "line": 11, "offset": 238 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "bf79c611b4335585b02d0939cf528b685e20f9dd3cedf41bef899cc44aecfbec41490243ef5d2a7abeaa80b53cd3a28d5759bf27a37a2e19195f2decee0a9f88_0",
        "is_ignored": false,
        "lines": "      ssl: {\n        minVersion: 'TLSv1'\n      }",
        "message": "TLS1.0 and TLS1.1 are deprecated and should not be used anymore. By default, NodeJS used TLSv1.2. So, TLS min version must not be downgrade to TLS1.0 or TLS1.1. Enforce TLS1.3 is highly recommended This rule checks TLS configuration only for PostgreSQL, MariaDB and MySQL. SQLite is not really concerned by TLS configuration. This rule could be extended for MSSQL, but the dialectOptions is specific for Tedious.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://node-postgres.com/features/ssl",
            "https://nodejs.org/api/tls.html#tls_class_tls_tlssocket",
            "https://nodejs.org/api/tls.html#tls_tls_createsecurecontext_options",
            "https://nodejs.org/api/tls.html#tls_tls_default_min_version"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "wdU8GB",
              "url": "https://semgrep.dev/playground/r/JdTNpRZ/javascript.sequelize.security.audit.sequelize-weak-tls-version.sequelize-weak-tls-version",
              "version_id": "JdTNpRZ"
            }
          },
          "shortlink": "https://sg.run/bDrq",
          "source": "https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-weak-tls-version.sequelize-weak-tls-version",
          "subcategory": ["audit"],
          "technology": ["sequelize"],
          "vulnerability_class": ["Mishandled Sensitive Information"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "postgres",
            "end": { "col": 10, "line": 1, "offset": 9 },
            "start": { "col": 2, "line": 1, "offset": 1 }
          },
          "$DATABASE": {
            "abstract_content": "\"AppDb\"",
            "end": { "col": 22, "line": 4, "offset": 76 },
            "start": { "col": 15, "line": 4, "offset": 69 }
          },
          "$DIALECT": {
            "abstract_content": "\"postgres\"",
            "end": { "col": 24, "line": 5, "offset": 101 },
            "start": { "col": 14, "line": 5, "offset": 91 }
          },
          "$HOST": {
            "abstract_content": "\"127.0.0.1\"",
            "end": { "col": 22, "line": 6, "offset": 124 },
            "start": { "col": 11, "line": 6, "offset": 113 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_regex_and.js",
      "start": { "col": 12, "line": 9, "offset": 201 }
    },
    {
      "check_id": "go.lang.security.audit.database.string-formatted-query.string-formatted-query",
      "end": { "col": 71, "line": 7, "offset": 382 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "e70faa59fc37ec0612a511768da39b3b0caf953d0dffc484cb6c7afdbd8af74dc5f385cc370a2692199d16f2f8e257b1c4e5685ab3e74a2b28f34248589065e9_0",
        "is_ignored": false,
        "lines": "            _, err = db.Exec(\"DELETE FROM table WHERE Id = \" + idhtml)",
        "message": "String-formatted SQL query detected. This could lead to SQL injection if the string is not sanitized properly. Audit this call to ensure the SQL is not manipulable by external data.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "ZqU5bD",
              "url": "https://semgrep.dev/playground/r/kbTdxBw/go.lang.security.audit.database.string-formatted-query.string-formatted-query",
              "version_id": "kbTdxBw"
            }
          },
          "shortlink": "https://sg.run/ydEr",
          "source": "https://semgrep.dev/r/go.lang.security.audit.database.string-formatted-query.string-formatted-query",
          "source-rule-url": "https://github.com/securego/gosec",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "db",
            "end": { "col": 3, "line": 1, "offset": 2 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$OBJ": {
            "abstract_content": "db",
            "end": { "col": 24, "line": 7, "offset": 335 },
            "start": { "col": 22, "line": 7, "offset": 333 }
          },
          "$X": {
            "abstract_content": "\"DELETE FROM table WHERE Id = \"",
            "end": { "col": 61, "line": 7, "offset": 372 },
            "start": { "col": 30, "line": 7, "offset": 341 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_type_not_go.go",
      "start": { "col": 22, "line": 7, "offset": 333 }
    },
    {
      "check_id": "go.lang.security.audit.sqli.gosql-sqli.gosql-sqli",
      "end": { "col": 71, "line": 7, "offset": 382 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "9db1b604ec3a49337cc7e24291cb65fa90583227bc7d32814fa9d01feefdd852d3d9e995efd81c5c62606cf604b231f76a53bf6016d4d59d44288100ffb7b6dc_0",
        "is_ignored": false,
        "lines": "            _, err = db.Exec(\"DELETE FROM table WHERE Id = \" + idhtml)",
        "message": "Detected string concatenation with a non-literal variable in a \"database/sql\" Go SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use prepared statements with the 'Prepare' and 'PrepareContext' calls.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://golang.org/pkg/database/sql/"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUrnQ",
              "url": "https://semgrep.dev/playground/r/3ZTkQGg/go.lang.security.audit.sqli.gosql-sqli.gosql-sqli",
              "version_id": "3ZTkQGg"
            }
          },
          "shortlink": "https://sg.run/YgOX",
          "source": "https://semgrep.dev/r/go.lang.security.audit.sqli.gosql-sqli.gosql-sqli",
          "subcategory": ["vuln"],
          "technology": ["go"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "Exec",
            "end": { "col": 5, "line": 1, "offset": 4 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$DB": {
            "abstract_content": "db",
            "end": { "col": 24, "line": 7, "offset": 335 },
            "start": { "col": 22, "line": 7, "offset": 333 }
          },
          "$FUNCNAME": {
            "abstract_content": "DeleteHandlerOk",
            "end": { "col": 21, "line": 1, "offset": 20 },
            "start": { "col": 6, "line": 1, "offset": 5 }
          },
          "$METHOD": {
            "abstract_content": "Exec",
            "end": { "col": 29, "line": 7, "offset": 340 },
            "start": { "col": 25, "line": 7, "offset": 336 }
          },
          "$X": {
            "abstract_content": "\"DELETE FROM table WHERE Id = \"",
            "end": { "col": 61, "line": 7, "offset": 372 },
            "start": { "col": 30, "line": 7, "offset": 341 }
          },
          "$Y": {
            "abstract_content": "idhtml",
            "end": { "col": 70, "line": 7, "offset": 381 },
            "propagated_value": {
              "svalue_abstract_content": "req.URL.Query().Get(\"Id\")",
              "svalue_end": { "col": 44, "line": 4, "offset": 244 },
              "svalue_start": { "col": 19, "line": 4, "offset": 219 }
            },
            "start": { "col": 64, "line": 7, "offset": 375 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_type_not_go.go",
      "start": { "col": 22, "line": 7, "offset": 333 }
    },
    {
      "check_id": "go.lang.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 70, "line": 7, "offset": 381 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "idhtml",
              "location": {
                "end": { "col": 15, "line": 4, "offset": 215 },
                "path": "tests/rules/metavar_type_not_go.go",
                "start": { "col": 9, "line": 4, "offset": 209 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 70, "line": 7, "offset": 381 },
                "path": "tests/rules/metavar_type_not_go.go",
                "start": { "col": 30, "line": 7, "offset": 341 }
              },
              "\"DELETE FROM table WHERE Id = \" + idhtml"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 26, "line": 4, "offset": 226 },
                "path": "tests/rules/metavar_type_not_go.go",
                "start": { "col": 19, "line": 4, "offset": 219 }
              },
              "req.URL"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "f015a9899f968ad1c0822331bcbf4bc1f7b694e82edaf2e903191a5d05a9423db0468d29f979182eb48abe2230be83671c37cce2c196d8075aebcc7576227534_0",
        "is_ignored": false,
        "lines": "            _, err = db.Exec(\"DELETE FROM table WHERE Id = \" + idhtml)",
        "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`db.Query(\"SELECT * FROM t WHERE id = ?\", id)`) or a safe library.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://golang.org/doc/database/sql-injection",
            "https://www.stackhawk.com/blog/golang-sql-injection-guide-examples-and-prevention/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUoqy",
              "url": "https://semgrep.dev/playground/r/pZT1ydr/go.lang.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "pZT1ydr"
            }
          },
          "shortlink": "https://sg.run/PbEq",
          "source": "https://semgrep.dev/r/go.lang.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["go"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "URL",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$ANYTHING": {
            "abstract_content": "URL",
            "end": { "col": 26, "line": 4, "offset": 226 },
            "start": { "col": 23, "line": 4, "offset": 223 }
          },
          "$REQUEST": {
            "abstract_content": "req",
            "end": { "col": 22, "line": 4, "offset": 222 },
            "start": { "col": 19, "line": 4, "offset": 219 }
          },
          "$SQLSTR": {
            "abstract_content": "DELETE FROM table WHERE Id = ",
            "end": { "col": 60, "line": 7, "offset": 371 },
            "start": { "col": 31, "line": 7, "offset": 342 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_type_not_go.go",
      "start": { "col": 30, "line": 7, "offset": 341 }
    },
    {
      "check_id": "go.lang.security.audit.database.string-formatted-query.string-formatted-query",
      "end": { "col": 75, "line": 9, "offset": 494 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "0e9b12e64f11ba9bad937c44fdf7f2732be3ab178648e557aadb9877ae93e340645ef16904fe1f5db9220a76a033c4825d89ac44482750e071fef9e4b8616e63_0",
        "is_ignored": false,
        "lines": "            _, err = dbutil.Exec(\"DELETE FROM table WHERE Id = \" + idhtml)",
        "message": "String-formatted SQL query detected. This could lead to SQL injection if the string is not sanitized properly. Audit this call to ensure the SQL is not manipulable by external data.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "ZqU5bD",
              "url": "https://semgrep.dev/playground/r/kbTdxBw/go.lang.security.audit.database.string-formatted-query.string-formatted-query",
              "version_id": "kbTdxBw"
            }
          },
          "shortlink": "https://sg.run/ydEr",
          "source": "https://semgrep.dev/r/go.lang.security.audit.database.string-formatted-query.string-formatted-query",
          "source-rule-url": "https://github.com/securego/gosec",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "db",
            "end": { "col": 3, "line": 1, "offset": 2 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$OBJ": {
            "abstract_content": "dbutil",
            "end": { "col": 28, "line": 9, "offset": 447 },
            "start": { "col": 22, "line": 9, "offset": 441 }
          },
          "$X": {
            "abstract_content": "\"DELETE FROM table WHERE Id = \"",
            "end": { "col": 65, "line": 9, "offset": 484 },
            "start": { "col": 34, "line": 9, "offset": 453 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_type_not_go.go",
      "start": { "col": 22, "line": 9, "offset": 441 }
    },
    {
      "check_id": "go.lang.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 74, "line": 9, "offset": 493 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "idhtml",
              "location": {
                "end": { "col": 15, "line": 4, "offset": 215 },
                "path": "tests/rules/metavar_type_not_go.go",
                "start": { "col": 9, "line": 4, "offset": 209 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 74, "line": 9, "offset": 493 },
                "path": "tests/rules/metavar_type_not_go.go",
                "start": { "col": 34, "line": 9, "offset": 453 }
              },
              "\"DELETE FROM table WHERE Id = \" + idhtml"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 26, "line": 4, "offset": 226 },
                "path": "tests/rules/metavar_type_not_go.go",
                "start": { "col": 19, "line": 4, "offset": 219 }
              },
              "req.URL"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "f015a9899f968ad1c0822331bcbf4bc1f7b694e82edaf2e903191a5d05a9423db0468d29f979182eb48abe2230be83671c37cce2c196d8075aebcc7576227534_1",
        "is_ignored": false,
        "lines": "            _, err = dbutil.Exec(\"DELETE FROM table WHERE Id = \" + idhtml)",
        "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`db.Query(\"SELECT * FROM t WHERE id = ?\", id)`) or a safe library.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://golang.org/doc/database/sql-injection",
            "https://www.stackhawk.com/blog/golang-sql-injection-guide-examples-and-prevention/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUoqy",
              "url": "https://semgrep.dev/playground/r/pZT1ydr/go.lang.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "pZT1ydr"
            }
          },
          "shortlink": "https://sg.run/PbEq",
          "source": "https://semgrep.dev/r/go.lang.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["go"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "URL",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$ANYTHING": {
            "abstract_content": "URL",
            "end": { "col": 26, "line": 4, "offset": 226 },
            "start": { "col": 23, "line": 4, "offset": 223 }
          },
          "$REQUEST": {
            "abstract_content": "req",
            "end": { "col": 22, "line": 4, "offset": 222 },
            "start": { "col": 19, "line": 4, "offset": 219 }
          },
          "$SQLSTR": {
            "abstract_content": "DELETE FROM table WHERE Id = ",
            "end": { "col": 64, "line": 9, "offset": 483 },
            "start": { "col": 35, "line": 9, "offset": 454 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_type_not_go.go",
      "start": { "col": 34, "line": 9, "offset": 453 }
    },
    {
      "check_id": "javascript.express.security.audit.xss.direct-response-write.direct-response-write",
      "end": { "col": 32, "line": 5, "offset": 162 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "message",
              "location": {
                "end": { "col": 16, "line": 2, "offset": 70 },
                "path": "tests/rules/metavar_type_not_typescript.ts",
                "start": { "col": 9, "line": 2, "offset": 63 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 32, "line": 5, "offset": 162 },
                "path": "tests/rules/metavar_type_not_typescript.ts",
                "start": { "col": 12, "line": 5, "offset": 142 }
              },
              "`<h1>${message}</h1>"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 28, "line": 2, "offset": 82 },
                "path": "tests/rules/metavar_type_not_typescript.ts",
                "start": { "col": 19, "line": 2, "offset": 73 }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "e684f791f56ec6bbec7835b693eb8110d07277d7e4c7fbf4c238407427ab5aa0210e7a293f7733c336adfc6e5a5584f99ecf9ed349fd621a75507bbcdf498ea8_0",
        "is_ignored": false,
        "lines": "  res.send(`<h1>${message}</h1>`);",
        "message": "Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "3qUPA1",
              "url": "https://semgrep.dev/playground/r/rxTyLQd/javascript.express.security.audit.xss.direct-response-write.direct-response-write",
              "version_id": "rxTyLQd"
            }
          },
          "shortlink": "https://sg.run/vzGl",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write",
          "subcategory": ["vuln"],
          "technology": ["express"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$ARG": {
            "abstract_content": "`<h1>message</h1>",
            "end": { "col": 32, "line": 5, "offset": 162 },
            "start": { "col": 12, "line": 5, "offset": 142 }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": { "col": 22, "line": 2, "offset": 76 },
            "start": { "col": 19, "line": 2, "offset": 73 }
          },
          "$RES": {
            "abstract_content": "res",
            "end": { "col": 42, "line": 1, "offset": 41 },
            "start": { "col": 39, "line": 1, "offset": 38 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_type_not_typescript.ts",
      "start": { "col": 12, "line": 5, "offset": 142 }
    },
    {
      "check_id": "javascript.express.security.injection.raw-html-format.raw-html-format",
      "end": { "col": 32, "line": 5, "offset": 162 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "message",
              "location": {
                "end": { "col": 16, "line": 2, "offset": 70 },
                "path": "tests/rules/metavar_type_not_typescript.ts",
                "start": { "col": 9, "line": 2, "offset": 63 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 32, "line": 5, "offset": 162 },
                "path": "tests/rules/metavar_type_not_typescript.ts",
                "start": { "col": 12, "line": 5, "offset": 142 }
              },
              "`<h1>${message}</h1>"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 28, "line": 2, "offset": 82 },
                "path": "tests/rules/metavar_type_not_typescript.ts",
                "start": { "col": 19, "line": 2, "offset": 73 }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "198b960c651e9ab21ec59951a857cd8acad348defdf2fe4ae4d6ff621857127b09e9bdacc72ed8860ad20064e4f34d3dd6151b2a09134f35e9e70f4c267b36a2_0",
        "is_ignored": false,
        "lines": "  res.send(`<h1>${message}</h1>`);",
        "message": "User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "5rUL0X",
              "url": "https://semgrep.dev/playground/r/BjTXr3r/javascript.express.security.injection.raw-html-format.raw-html-format",
              "version_id": "BjTXr3r"
            }
          },
          "shortlink": "https://sg.run/5DO3",
          "source": "https://semgrep.dev/r/javascript.express.security.injection.raw-html-format.raw-html-format",
          "subcategory": ["vuln"],
          "technology": ["express"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$REQ": {
            "abstract_content": "req",
            "end": { "col": 22, "line": 2, "offset": 76 },
            "start": { "col": 19, "line": 2, "offset": 73 }
          },
          "$RES": {
            "abstract_content": "res",
            "end": { "col": 42, "line": 1, "offset": 41 },
            "start": { "col": 39, "line": 1, "offset": 38 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/metavar_type_not_typescript.ts",
      "start": { "col": 12, "line": 5, "offset": 142 }
    },
    {
      "check_id": "php.lang.security.injection.tainted-object-instantiation.tainted-object-instantiation",
      "end": { "col": 34, "line": 9, "offset": 178 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "$parts",
              "location": {
                "end": { "col": 7, "line": 5, "offset": 35 },
                "path": "tests/rules/misc_php_new.php",
                "start": { "col": 1, "line": 5, "offset": 29 }
              }
            },
            {
              "content": "$controllerName",
              "location": {
                "end": { "col": 16, "line": 6, "offset": 90 },
                "path": "tests/rules/misc_php_new.php",
                "start": { "col": 1, "line": 6, "offset": 75 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 34, "line": 9, "offset": 178 },
                "path": "tests/rules/misc_php_new.php",
                "start": { "col": 19, "line": 9, "offset": 163 }
              },
              "$controllerName"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 31, "line": 5, "offset": 59 },
                "path": "tests/rules/misc_php_new.php",
                "start": { "col": 23, "line": 5, "offset": 51 }
              },
              "$_SERVER"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "164f3d6d36135e748f4722e0db98675c0d39477263fafd510b11bc4e20dcef9b70ad58307ad399704e5b979563ba11f285f1d674414e2bb8e49c7d048317d650_0",
        "is_ignored": false,
        "lines": "$controller = new $controllerName($parts[1]);",
        "message": "<- A new object is created where the class name is based on user input. This could lead to remote code execution, as it allows to instantiate any class in the application.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "v8U4DA",
              "url": "https://semgrep.dev/playground/r/qkT2x7l/php.lang.security.injection.tainted-object-instantiation.tainted-object-instantiation",
              "version_id": "qkT2x7l"
            }
          },
          "shortlink": "https://sg.run/7ndw",
          "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-object-instantiation.tainted-object-instantiation",
          "subcategory": ["vuln"],
          "technology": ["php"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$SINK": {
            "abstract_content": "$controllerName",
            "end": { "col": 34, "line": 9, "offset": 178 },
            "start": { "col": 19, "line": 9, "offset": 163 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/misc_php_new.php",
      "start": { "col": 19, "line": 9, "offset": 163 }
    },
    {
      "check_id": "php.lang.security.injection.tainted-object-instantiation.tainted-object-instantiation",
      "end": { "col": 34, "line": 7, "offset": 156 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "$parts",
              "location": {
                "end": { "col": 7, "line": 3, "offset": 13 },
                "path": "tests/rules/misc_php_new_taint.php",
                "start": { "col": 1, "line": 3, "offset": 7 }
              }
            },
            {
              "content": "$controllerName",
              "location": {
                "end": { "col": 16, "line": 4, "offset": 68 },
                "path": "tests/rules/misc_php_new_taint.php",
                "start": { "col": 1, "line": 4, "offset": 53 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 34, "line": 7, "offset": 156 },
                "path": "tests/rules/misc_php_new_taint.php",
                "start": { "col": 19, "line": 7, "offset": 141 }
              },
              "$controllerName"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 31, "line": 3, "offset": 37 },
                "path": "tests/rules/misc_php_new_taint.php",
                "start": { "col": 23, "line": 3, "offset": 29 }
              },
              "$_SERVER"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "5b3af8310c133fbc883c37d7fca4a06293942c3a794a7bc9e6be1e7e2961eabcdfdba811090d2375a08d18a29d7dd490d5ce8d5e2838fee5ca5c08fa9f266455_0",
        "is_ignored": false,
        "lines": "$controller = new $controllerName($parts[1]);",
        "message": "<- A new object is created where the class name is based on user input. This could lead to remote code execution, as it allows to instantiate any class in the application.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "v8U4DA",
              "url": "https://semgrep.dev/playground/r/qkT2x7l/php.lang.security.injection.tainted-object-instantiation.tainted-object-instantiation",
              "version_id": "qkT2x7l"
            }
          },
          "shortlink": "https://sg.run/7ndw",
          "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-object-instantiation.tainted-object-instantiation",
          "subcategory": ["vuln"],
          "technology": ["php"],
          "vulnerability_class": ["Improper Authorization"]
        },
        "metavars": {
          "$SINK": {
            "abstract_content": "$controllerName",
            "end": { "col": 34, "line": 7, "offset": 156 },
            "propagated_value": {
              "svalue_abstract_content": "$parts[0]",
              "svalue_end": { "col": 28, "line": 4, "offset": 80 },
              "svalue_start": { "col": 19, "line": 4, "offset": 71 }
            },
            "start": { "col": 19, "line": 7, "offset": 141 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/misc_php_new_taint.php",
      "start": { "col": 19, "line": 7, "offset": 141 }
    },
    {
      "check_id": "terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
      "end": { "col": 9, "line": 2, "offset": 41 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "866c8c535d39efac2da7c1fb88442496fcdd2898eb969094979aa3e0aefd68cd65366e5e959e92c8f6f574cccaa4e86fe6db3cda9024388e1bc80928abf66a11_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
        "message": "An EBS volume is configured without encryption enabled.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "WAUZW5",
              "url": "https://semgrep.dev/playground/r/BjTXpbZ/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
              "version_id": "BjTXpbZ"
            }
          },
          "shortlink": "https://sg.run/GWdB",
          "source": "https://semgrep.dev/r/terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
          "subcategory": ["vuln"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/misc_terraform1.tf",
      "start": { "col": 1, "line": 2, "offset": 33 }
    },
    {
      "check_id": "terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
      "end": { "col": 2, "line": 9, "offset": 196 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "b000d03527e4e445848097bacc87f81f79c5706e32ef15e92e5df178510efcd7772a46bb664358c6051dfcf6bd0a20c2b57e8e4435eab86aa70514b5048bb241_0",
        "is_ignored": false,
        "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {\n  availability_zone = \"ap-southeast-2\"\n  encrypted         = false\n  size = 1\n  tags = {\n    Name = \"abcd-ebs\"\n  }\n}",
        "message": "The AWS EBS volume is unencrypted. The volume, the disk I/O and any derived snapshots could be read if compromised. Volumes should be encrypted to ensure sensitive data is stored securely.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-311: Missing Encryption of Sensitive Data"],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://owasp.org/Top10/A04_2021-Insecure_Design",
            "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted",
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGUKl1",
              "url": "https://semgrep.dev/playground/r/BjTXpzE/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
              "version_id": "BjTXpzE"
            }
          },
          "shortlink": "https://sg.run/6ZbY",
          "source": "https://semgrep.dev/r/terraform.aws.security.aws-ebs-volume-unencrypted.aws-ebs-volume-unencrypted",
          "subcategory": ["audit"],
          "technology": ["terraform", "aws"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$ANYTHING": {
            "abstract_content": "web_host_storage",
            "end": { "col": 44, "line": 2, "offset": 76 },
            "start": { "col": 28, "line": 2, "offset": 60 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/misc_terraform1.tf",
      "start": { "col": 1, "line": 2, "offset": 33 }
    },
    {
      "check_id": "java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing",
      "end": { "col": 34, "line": 13, "offset": 428 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "dbf",
              "location": {
                "end": { "col": 46, "line": 9, "offset": 252 },
                "path": "tests/rules/sym_prop_class_attr.java",
                "start": { "col": 43, "line": 9, "offset": 249 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 34, "line": 13, "offset": 428 },
                "path": "tests/rules/sym_prop_class_attr.java",
                "start": { "col": 9, "line": 13, "offset": 403 }
              },
              "dbf.newDocumentBuilder();"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 46, "line": 9, "offset": 252 },
                "path": "tests/rules/sym_prop_class_attr.java",
                "start": { "col": 43, "line": 9, "offset": 249 }
              },
              "dbf"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "1423e699ec097cfa0feaab1b50c52190c67785a19d2245d0e22c1d6ac18431e4e8437febb4212ab37c73ada8115856d46e4a43d9fa14791cdbdccfdedff7dc2b_0",
        "fix": "dbf.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\ndbf.newDocumentBuilder();",
        "is_ignored": false,
        "lines": "        dbf.newDocumentBuilder();",
        "message": "DOCTYPE declarations are enabled for this DocumentBuilderFactory. This is vulnerable to XML external entity attacks. Disable this by setting the feature \"http://apache.org/xml/features/disallow-doctype-decl\" to true. Alternatively, allow DOCTYPE declarations and only prohibit external entities declarations. This can be done by setting the features \"http://xml.org/sax/features/external-general-entities\" and \"http://xml.org/sax/features/external-parameter-entities\" to false.",
        "metadata": {
          "asvs": {
            "control_id": "5.5.2 Insecue XML Deserialization",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v55-deserialization-prevention",
            "section": "V5 Validation, Sanitization and Encoding",
            "version": "4"
          },
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-611: Improper Restriction of XML External Entity Reference"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A04:2017 - XML External Entities (XXE)",
            "A05:2021 - Security Misconfiguration"
          ],
          "references": [
            "https://semgrep.dev/blog/2022/xml-security-in-java",
            "https://semgrep.dev/docs/cheat-sheets/java-xxe/",
            "https://blog.sonarsource.com/secure-xml-processor",
            "https://xerces.apache.org/xerces2-j/features.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "10UPQB",
              "url": "https://semgrep.dev/playground/r/yeTR2lq/java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing",
              "version_id": "yeTR2lq"
            }
          },
          "shortlink": "https://sg.run/PYBz",
          "source": "https://semgrep.dev/r/java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing",
          "subcategory": ["vuln"],
          "technology": ["java", "xml"],
          "vulnerability_class": ["XML Injection"]
        },
        "metavars": {
          "$C": {
            "abstract_content": "BadDocumentBuilderFactoryStatic1",
            "end": { "col": 39, "line": 7, "offset": 203 },
            "start": { "col": 7, "line": 7, "offset": 171 }
          },
          "$FACTORY": {
            "abstract_content": "dbf",
            "end": { "col": 46, "line": 9, "offset": 252 },
            "start": { "col": 43, "line": 9, "offset": 249 }
          },
          "$V": {
            "abstract_content": "DocumentBuilderFactory DocumentBuilderFactory DocumentBuilderFactory DocumentBuilderFactory",
            "end": { "col": 42, "line": 9, "offset": 248 },
            "start": { "col": 20, "line": 9, "offset": 226 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/sym_prop_class_attr.java",
      "start": { "col": 9, "line": 13, "offset": 403 }
    },
    {
      "check_id": "java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing",
      "end": { "col": 34, "line": 28, "offset": 735 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "dbf",
              "location": {
                "end": { "col": 12, "line": 23, "offset": 553 },
                "path": "tests/rules/sym_prop_class_attr.java",
                "start": { "col": 9, "line": 23, "offset": 550 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 34, "line": 28, "offset": 735 },
                "path": "tests/rules/sym_prop_class_attr.java",
                "start": { "col": 9, "line": 28, "offset": 710 }
              },
              "dbf.newDocumentBuilder();"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 52, "line": 23, "offset": 593 },
                "path": "tests/rules/sym_prop_class_attr.java",
                "start": { "col": 9, "line": 23, "offset": 550 }
              },
              "dbf = DocumentBuilderFactory.newInstance();"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "1423e699ec097cfa0feaab1b50c52190c67785a19d2245d0e22c1d6ac18431e4e8437febb4212ab37c73ada8115856d46e4a43d9fa14791cdbdccfdedff7dc2b_1",
        "fix": "dbf.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\ndbf.newDocumentBuilder();",
        "is_ignored": false,
        "lines": "        dbf.newDocumentBuilder();",
        "message": "DOCTYPE declarations are enabled for this DocumentBuilderFactory. This is vulnerable to XML external entity attacks. Disable this by setting the feature \"http://apache.org/xml/features/disallow-doctype-decl\" to true. Alternatively, allow DOCTYPE declarations and only prohibit external entities declarations. This can be done by setting the features \"http://xml.org/sax/features/external-general-entities\" and \"http://xml.org/sax/features/external-parameter-entities\" to false.",
        "metadata": {
          "asvs": {
            "control_id": "5.5.2 Insecue XML Deserialization",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v55-deserialization-prevention",
            "section": "V5 Validation, Sanitization and Encoding",
            "version": "4"
          },
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-611: Improper Restriction of XML External Entity Reference"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A04:2017 - XML External Entities (XXE)",
            "A05:2021 - Security Misconfiguration"
          ],
          "references": [
            "https://semgrep.dev/blog/2022/xml-security-in-java",
            "https://semgrep.dev/docs/cheat-sheets/java-xxe/",
            "https://blog.sonarsource.com/secure-xml-processor",
            "https://xerces.apache.org/xerces2-j/features.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "10UPQB",
              "url": "https://semgrep.dev/playground/r/yeTR2lq/java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing",
              "version_id": "yeTR2lq"
            }
          },
          "shortlink": "https://sg.run/PYBz",
          "source": "https://semgrep.dev/r/java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing",
          "subcategory": ["vuln"],
          "technology": ["java", "xml"],
          "vulnerability_class": ["XML Injection"]
        },
        "metavars": {
          "$FACTORY": {
            "abstract_content": "dbf",
            "end": { "col": 12, "line": 23, "offset": 553 },
            "start": { "col": 9, "line": 23, "offset": 550 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/sym_prop_class_attr.java",
      "start": { "col": 9, "line": 28, "offset": 710 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 11, "offset": 302 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "3583d3f08af1f5679babb8b56906b60a80699b25c9b7d4b8214808e7652f0ec6006be37c8b02ac67ffcc491e22130e2a95bd07fe2666d335b5857dc9ed10674a_0",
        "is_ignored": false,
        "lines": "    url = request.headers.get(\"referrer\")\n    print(\"something\")\n    # ruleid: open-redirect\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 8, "offset": 192 },
            "start": { "col": 5, "line": 8, "offset": 189 }
          },
          "$FUNC": {
            "abstract_content": "unsafe",
            "end": { "col": 11, "line": 7, "offset": 174 },
            "start": { "col": 5, "line": 7, "offset": 168 }
          },
          "$W": {
            "abstract_content": "headers",
            "end": { "col": 26, "line": 8, "offset": 210 },
            "start": { "col": 19, "line": 8, "offset": 203 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/sym_prop_open_redirect.py",
      "start": { "col": 5, "line": 8, "offset": 189 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 37, "line": 23, "offset": 525 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "cd6682a0a00f607146e9093880c8e8ac73e1c462a8d4d050f7c91d7b1fc1c7341b775c3873caad9b83d4a1cb652972808be6eacca991e75a6192f820ea571d01_0",
        "is_ignored": false,
        "lines": "    url = request.POST.get(\"url\")\n    # ruleid: open-redirect\n    return HttpResponseRedirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 21, "offset": 434 },
            "start": { "col": 5, "line": 21, "offset": 431 }
          },
          "$FUNC": {
            "abstract_content": "unsafe2",
            "end": { "col": 12, "line": 20, "offset": 416 },
            "start": { "col": 5, "line": 20, "offset": 409 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 23, "line": 21, "offset": 449 },
            "start": { "col": 19, "line": 21, "offset": 445 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/sym_prop_open_redirect.py",
      "start": { "col": 5, "line": 21, "offset": 431 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 37, "line": 29, "offset": 644 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "dde1a3e96c9c6ef9bff3a4af416c6f8a8f8aa83a9c029b419c7f503ef8e56bf24a31dd16cf6580ed33922f0e690ca044d5d62b7370ba688fd8d67d83ec2865f0_0",
        "is_ignored": false,
        "lines": "    url = request.POST[\"url\"]\n    # ruleid: open-redirect\n    return HttpResponseRedirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 27, "offset": 557 },
            "start": { "col": 5, "line": 27, "offset": 554 }
          },
          "$FUNC": {
            "abstract_content": "unsafe3",
            "end": { "col": 12, "line": 26, "offset": 539 },
            "start": { "col": 5, "line": 26, "offset": 532 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 23, "line": 27, "offset": 572 },
            "start": { "col": 19, "line": 27, "offset": 568 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/sym_prop_open_redirect.py",
      "start": { "col": 5, "line": 27, "offset": 554 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 41, "line": 36, "offset": 836 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "91b3876ba3765ab0c49d10d5918fc0fe92bfbdb6d0d86b9652c0048e66a5204eeed84dd78f261733684d7cc3d15aee60ef0a26e8490a75d02a8bdcf0e031128c_0",
        "is_ignored": false,
        "lines": "    url = request.get_referrer()  # I made this up, but if it exists don't do this\n    if url:\n        # ruleid: open-redirect\n        return HttpResponseRedirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 33, "offset": 676 },
            "start": { "col": 5, "line": 33, "offset": 673 }
          },
          "$FUNC": {
            "abstract_content": "unsafe4",
            "end": { "col": 12, "line": 32, "offset": 658 },
            "start": { "col": 5, "line": 32, "offset": 651 }
          },
          "$W": {
            "abstract_content": "get_referrer",
            "end": { "col": 31, "line": 33, "offset": 699 },
            "start": { "col": 19, "line": 33, "offset": 687 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/sym_prop_open_redirect.py",
      "start": { "col": 5, "line": 33, "offset": 673 }
    },
    {
      "check_id": "python.lang.security.audit.eval-detected.eval-detected",
      "end": { "col": 10, "line": 15, "offset": 212 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "e22d583712e81f6ba98f2144a653204f53401fad7ba5b62e7dc1ad20e4f720c7f38c56d57e3d16db1aecc4b0de5cb0c65b10f3f88096a8d07e03f255945e4c72_0",
        "is_ignored": false,
        "lines": "  eval(a)",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "gxU149",
              "url": "https://semgrep.dev/playground/r/DkT6Yd0/python.lang.security.audit.eval-detected.eval-detected",
              "version_id": "DkT6Yd0"
            }
          },
          "shortlink": "https://sg.run/ZvrD",
          "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_basic.py",
      "start": { "col": 3, "line": 15, "offset": 205 }
    },
    {
      "check_id": "python.lang.security.audit.eval-detected.eval-detected",
      "end": { "col": 10, "line": 24, "offset": 326 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "e22d583712e81f6ba98f2144a653204f53401fad7ba5b62e7dc1ad20e4f720c7f38c56d57e3d16db1aecc4b0de5cb0c65b10f3f88096a8d07e03f255945e4c72_1",
        "is_ignored": false,
        "lines": "  eval(b)",
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "gxU149",
              "url": "https://semgrep.dev/playground/r/DkT6Yd0/python.lang.security.audit.eval-detected.eval-detected",
              "version_id": "DkT6Yd0"
            }
          },
          "shortlink": "https://sg.run/ZvrD",
          "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_basic.py",
      "start": { "col": 3, "line": 24, "offset": 319 }
    },
    {
      "check_id": "java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing",
      "end": { "col": 66, "line": 23, "offset": 616 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "dbFactory",
              "location": {
                "end": { "col": 18, "line": 18, "offset": 438 },
                "path": "tests/rules/taint_final_globals2.java",
                "start": { "col": 9, "line": 18, "offset": 429 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 66, "line": 23, "offset": 616 },
                "path": "tests/rules/taint_final_globals2.java",
                "start": { "col": 9, "line": 23, "offset": 559 }
              },
              "DocumentBuilder dBuilder = dbFactory.newDocumentBuilder()"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 58, "line": 18, "offset": 478 },
                "path": "tests/rules/taint_final_globals2.java",
                "start": { "col": 9, "line": 18, "offset": 429 }
              },
              "dbFactory = DocumentBuilderFactory.newInstance();"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "1356e9fad377d93ee14df25b321ef45150c085ae998d330d6edb41d466b84cef8e0dc67ceb25ce78035622bd3dbc69b9b5dad6e52414687287f0c8315dda0e0a_0",
        "fix": "dbFactory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\ndbFactory.newDocumentBuilder();",
        "is_ignored": false,
        "lines": "        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();",
        "message": "DOCTYPE declarations are enabled for this DocumentBuilderFactory. This is vulnerable to XML external entity attacks. Disable this by setting the feature \"http://apache.org/xml/features/disallow-doctype-decl\" to true. Alternatively, allow DOCTYPE declarations and only prohibit external entities declarations. This can be done by setting the features \"http://xml.org/sax/features/external-general-entities\" and \"http://xml.org/sax/features/external-parameter-entities\" to false.",
        "metadata": {
          "asvs": {
            "control_id": "5.5.2 Insecue XML Deserialization",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v55-deserialization-prevention",
            "section": "V5 Validation, Sanitization and Encoding",
            "version": "4"
          },
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-611: Improper Restriction of XML External Entity Reference"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A04:2017 - XML External Entities (XXE)",
            "A05:2021 - Security Misconfiguration"
          ],
          "references": [
            "https://semgrep.dev/blog/2022/xml-security-in-java",
            "https://semgrep.dev/docs/cheat-sheets/java-xxe/",
            "https://blog.sonarsource.com/secure-xml-processor",
            "https://xerces.apache.org/xerces2-j/features.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "10UPQB",
              "url": "https://semgrep.dev/playground/r/yeTR2lq/java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing",
              "version_id": "yeTR2lq"
            }
          },
          "shortlink": "https://sg.run/PYBz",
          "source": "https://semgrep.dev/r/java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing",
          "subcategory": ["vuln"],
          "technology": ["java", "xml"],
          "vulnerability_class": ["XML Injection"]
        },
        "metavars": {
          "$FACTORY": {
            "abstract_content": "dbFactory",
            "end": { "col": 18, "line": 18, "offset": 438 },
            "start": { "col": 9, "line": 18, "offset": 429 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_final_globals2.java",
      "start": { "col": 9, "line": 23, "offset": 559 }
    },
    {
      "check_id": "contrib.owasp.java.xxe.documentbuilderfactory.owasp.java.xxe.javax.xml.parsers.DocumentBuilderFactory",
      "end": { "col": 31, "line": 24, "offset": 648 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c83f29da440daa525a67eb6457dc7ec3b6323eb0feba674b9405b2255379ab9db1b91ee0ba2ded7cd1823e1724ab89b83dc2d4bf21fc2e3b79044c891ff2f41b_0",
        "is_ignored": false,
        "lines": "        dBuilder.parse(input);",
        "message": "DocumentBuilderFactory being instantiated without calling the setFeature functions that are generally used for disabling entity processing, which can allow for XXE vulnerabilities",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": "CWE-611: Improper Restriction of XML External Entity Reference",
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": "A04:2017 - XML External Entities (XXE)",
          "references": [
            "https://www.programcreek.com/java-api-examples/?api=javax.xml.parsers.DocumentBuilderFactory"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "0oU5Dw",
              "url": "https://semgrep.dev/playground/r/3ZTkQWk/contrib.owasp.java.xxe.documentbuilderfactory.owasp.java.xxe.javax.xml.parsers.DocumentBuilderFactory",
              "version_id": "3ZTkQWk"
            }
          },
          "shortlink": "https://sg.run/gLbR",
          "source": "https://semgrep.dev/r/contrib.owasp.java.xxe.documentbuilderfactory.owasp.java.xxe.javax.xml.parsers.DocumentBuilderFactory",
          "source-rule-url": "https://cheatsheetseries.owasp.org//cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html",
          "subcategory": ["vuln"],
          "technology": ["java", "xml"],
          "vulnerability_class": ["XML Injection"]
        },
        "metavars": {
          "$DB": {
            "abstract_content": "dBuilder",
            "end": { "col": 17, "line": 24, "offset": 634 },
            "propagated_value": {
              "svalue_abstract_content": "dbFactory.newDocumentBuilder()",
              "svalue_end": { "col": 66, "line": 23, "offset": 616 },
              "svalue_start": { "col": 36, "line": 23, "offset": 586 }
            },
            "start": { "col": 9, "line": 24, "offset": 626 }
          },
          "$DBF": {
            "abstract_content": "dbFactory",
            "end": { "col": 45, "line": 23, "offset": 595 },
            "propagated_value": {
              "svalue_abstract_content": "DocumentBuilderFactory.newInstance()",
              "svalue_end": { "col": 57, "line": 18, "offset": 477 },
              "svalue_start": { "col": 21, "line": 18, "offset": 441 }
            },
            "start": { "col": 36, "line": 23, "offset": 586 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_final_globals2.java",
      "start": { "col": 9, "line": 24, "offset": 626 }
    },
    {
      "check_id": "python.flask.security.unescaped-template-extension.unescaped-template-extension",
      "end": { "col": 52, "line": 23, "offset": 676 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "151b1c2b21d20c12616a20f7315a6d11ffe6ca3da7aa329ce73c98d27864cf49f3b51b7879817cd37fdb7c831c9c95f866b46e073fd57a913407e81f5795c948_0",
        "is_ignored": false,
        "lines": "    return render_template('error.htm.j2', msg=msg)",
        "message": "Flask does not automatically escape Jinja templates unless they have .html, .htm, .xml, or .xhtml extensions. This could lead to XSS attacks. Use .html, .htm, .xml, or .xhtml for your template extensions. See https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup for more information.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup",
            "https://semgrep.dev/blog/2020/bento-check-unescaped-template-extensions-in-flask/",
            "https://bento.dev/checks/flask/unescaped-file-extension/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "EwU293",
              "url": "https://semgrep.dev/playground/r/PkTJ1LR/python.flask.security.unescaped-template-extension.unescaped-template-extension",
              "version_id": "PkTJ1LR"
            }
          },
          "shortlink": "https://sg.run/x1Rg",
          "source": "https://semgrep.dev/r/python.flask.security.unescaped-template-extension.unescaped-template-extension",
          "source-rule-url": "https://pypi.org/project/flake8-flask/",
          "subcategory": ["audit"],
          "technology": ["flask"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_flask.py",
      "start": { "col": 12, "line": 23, "offset": 636 }
    },
    {
      "check_id": "python.flask.security.unescaped-template-extension.unescaped-template-extension",
      "end": { "col": 90, "line": 39, "offset": 1280 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "151b1c2b21d20c12616a20f7315a6d11ffe6ca3da7aa329ce73c98d27864cf49f3b51b7879817cd37fdb7c831c9c95f866b46e073fd57a913407e81f5795c948_1",
        "is_ignored": false,
        "lines": "    return render_template('launch.htm.j2', person_name_full=session['person_name_full'])",
        "message": "Flask does not automatically escape Jinja templates unless they have .html, .htm, .xml, or .xhtml extensions. This could lead to XSS attacks. Use .html, .htm, .xml, or .xhtml for your template extensions. See https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup for more information.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup",
            "https://semgrep.dev/blog/2020/bento-check-unescaped-template-extensions-in-flask/",
            "https://bento.dev/checks/flask/unescaped-file-extension/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "EwU293",
              "url": "https://semgrep.dev/playground/r/PkTJ1LR/python.flask.security.unescaped-template-extension.unescaped-template-extension",
              "version_id": "PkTJ1LR"
            }
          },
          "shortlink": "https://sg.run/x1Rg",
          "source": "https://semgrep.dev/r/python.flask.security.unescaped-template-extension.unescaped-template-extension",
          "source-rule-url": "https://pypi.org/project/flake8-flask/",
          "subcategory": ["audit"],
          "technology": ["flask"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_flask.py",
      "start": { "col": 12, "line": 39, "offset": 1202 }
    },
    {
      "check_id": "c.lang.security.use-after-free.use-after-free",
      "end": { "col": 17, "line": 6, "offset": 138 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "803c1626aac6a24eb97587eff500e83958e4786499814781c6b98c8e9490fb32481f921b87dbaaba9f6e9593054b2aeb1c3aa65634620e60854579306c4dc5b1_0",
        "is_ignored": false,
        "lines": "    if(var->auth){",
        "message": "Variable 'var' was used after being freed. This can lead to undefined behavior.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-416: Use After Free"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "references": [
            "https://cwe.mitre.org/data/definitions/416.html",
            "https://ctf-wiki.github.io/ctf-wiki/pwn/linux/glibc-heap/use_after_free/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUb9l",
              "url": "https://semgrep.dev/playground/r/LjTqQAn/c.lang.security.use-after-free.use-after-free",
              "version_id": "LjTqQAn"
            }
          },
          "shortlink": "https://sg.run/gL6e",
          "source": "https://semgrep.dev/r/c.lang.security.use-after-free.use-after-free",
          "subcategory": ["vuln"],
          "technology": ["c"],
          "vulnerability_class": ["Memory Issues"]
        },
        "metavars": {
          "$ACCESSOR": {
            "abstract_content": "auth",
            "end": { "col": 17, "line": 6, "offset": 138 },
            "start": { "col": 13, "line": 6, "offset": 134 }
          },
          "$VAR": {
            "abstract_content": "var",
            "end": { "col": 11, "line": 6, "offset": 132 },
            "propagated_value": {
              "svalue_abstract_content": "malloc(sizeof auth)",
              "svalue_end": { "col": 31, "line": 3, "offset": 69 },
              "svalue_start": { "col": 11, "line": 3, "offset": 49 }
            },
            "start": { "col": 8, "line": 6, "offset": 129 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_if_cond_sink.c",
      "start": { "col": 8, "line": 6, "offset": 129 }
    },
    {
      "check_id": "python.cryptography.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
      "end": { "col": 23, "line": 4, "offset": 96 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "f7e0461c4ecf0f5c6104a06334a45e81dbb8fdb9c91c5806cc5dcaf8f1d8d7bf2774538395da39acad3aabbef7aadbd268123d8cded0d318b651ce900b46639a_0",
        "is_ignored": false,
        "lines": "    md5 = hashes.MD5()",
        "message": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "metadata": {
          "bandit-code": "B303",
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-327: Use of a Broken or Risky Cryptographic Algorithm"],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
            "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
            "http://2012.sharcs.org/slides/stevens.pdf",
            "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "lBUopp",
              "url": "https://semgrep.dev/playground/r/jQTgYbL/python.cryptography.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "version_id": "jQTgYbL"
            }
          },
          "shortlink": "https://sg.run/eY88",
          "source": "https://semgrep.dev/r/python.cryptography.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
          "source-rule-url": "https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
          "subcategory": ["vuln"],
          "technology": ["cryptography"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_imported_func.py",
      "start": { "col": 11, "line": 4, "offset": 84 }
    },
    {
      "check_id": "python.lang.security.audit.md5-used-as-password.md5-used-as-password",
      "end": { "col": 26, "line": 6, "offset": 157 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "md5",
              "location": {
                "end": { "col": 8, "line": 4, "offset": 81 },
                "path": "tests/rules/taint_imported_func.py",
                "start": { "col": 5, "line": 4, "offset": 78 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 26, "line": 6, "offset": 157 },
                "path": "tests/rules/taint_imported_func.py",
                "start": { "col": 5, "line": 6, "offset": 136 }
              },
              "user.setPassword(md5)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 21, "line": 4, "offset": 94 },
                "path": "tests/rules/taint_imported_func.py",
                "start": { "col": 11, "line": 4, "offset": 84 }
              },
              "hashes.MD5"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "1bed3573abeca1e824a337ab1c84144dcc1399932ced8c08f31c64ffa6897ba91da4d31d74929535680ec6c29f724f353a305efb573e539962ef42040e1176c5_0",
        "is_ignored": false,
        "lines": "    user.setPassword(md5)",
        "message": "It looks like MD5 is used as a password hash. MD5 is not considered a secure password hash because it can be cracked by an attacker in a short amount of time. Use a suitable password hashing function such as scrypt. You can use `hashlib.scrypt`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-327: Use of a Broken or Risky Cryptographic Algorithm"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://tools.ietf.org/html/rfc6151",
            "https://crypto.stackexchange.com/questions/44151/how-does-the-flame-malware-take-advantage-of-md5-collision",
            "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html",
            "https://security.stackexchange.com/questions/211/how-to-securely-hash-passwords",
            "https://github.com/returntocorp/semgrep-rules/issues/1609",
            "https://docs.python.org/3/library/hashlib.html#hashlib.scrypt"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "6JU1w1",
              "url": "https://semgrep.dev/playground/r/9lTd5d6/python.lang.security.audit.md5-used-as-password.md5-used-as-password",
              "version_id": "9lTd5d6"
            }
          },
          "shortlink": "https://sg.run/5DwD",
          "source": "https://semgrep.dev/r/python.lang.security.audit.md5-used-as-password.md5-used-as-password",
          "subcategory": ["vuln"],
          "technology": ["pycryptodome", "hashlib", "md5"],
          "vulnerability_class": ["Cryptographic Issues"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "user.setPassword",
            "end": { "col": 17, "line": 1, "offset": 16 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$FUNCTION": {
            "abstract_content": "user.setPassword",
            "end": { "col": 21, "line": 6, "offset": 152 },
            "start": { "col": 5, "line": 6, "offset": 136 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_imported_func.py",
      "start": { "col": 5, "line": 6, "offset": 136 }
    },
    {
      "check_id": "go.lang.security.injection.tainted-url-host.tainted-url-host",
      "end": { "col": 30, "line": 29, "offset": 509 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "urls",
              "location": {
                "end": { "col": 9, "line": 14, "offset": 219 },
                "path": "tests/rules/taint_labels_empty.go",
                "start": { "col": 5, "line": 14, "offset": 215 }
              }
            },
            {
              "content": "url",
              "location": {
                "end": { "col": 8, "line": 26, "offset": 421 },
                "path": "tests/rules/taint_labels_empty.go",
                "start": { "col": 5, "line": 26, "offset": 418 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 30, "line": 29, "offset": 509 },
                "path": "tests/rules/taint_labels_empty.go",
                "start": { "col": 27, "line": 29, "offset": 506 }
              },
              "url"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 22, "line": 14, "offset": 232 },
                "path": "tests/rules/taint_labels_empty.go",
                "start": { "col": 17, "line": 14, "offset": 227 }
              },
              "r.URL"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "90fd86abf7f6c7bcb225d7798a8f9fa214b8fc99a1198441a15e8541fdf292ae46b133597537bc37f193ecf1f19559a04632211826050e9fa49d3be792dff0bc_0",
        "is_ignored": false,
        "lines": "    resp, err := http.Get(url) // sink",
        "message": "A request was found to be crafted from user-input `r`. This can lead to Server-Side Request Forgery (SSRF) vulnerabilities, potentially exposing sensitive data. It is recommend where possible to not allow user-input to craft the base request, but to be treated as part of the path or query parameter. When user-input is necessary to craft the request, it is recommended to follow OWASP best practices to prevent abuse, including using an allowlist.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"],
          "references": ["https://goteleport.com/blog/ssrf-attacks/"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "AbUQLr",
              "url": "https://semgrep.dev/playground/r/WrTWqDE/go.lang.security.injection.tainted-url-host.tainted-url-host",
              "version_id": "WrTWqDE"
            }
          },
          "shortlink": "https://sg.run/5DjW",
          "source": "https://semgrep.dev/r/go.lang.security.injection.tainted-url-host.tainted-url-host",
          "subcategory": ["vuln"],
          "technology": ["go"],
          "vulnerability_class": ["Server-Side Request Forgery (SSRF)"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "URL",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$ANYTHING": {
            "abstract_content": "URL",
            "end": { "col": 22, "line": 14, "offset": 232 },
            "start": { "col": 19, "line": 14, "offset": 229 }
          },
          "$METHOD": {
            "abstract_content": "Get",
            "end": { "col": 26, "line": 29, "offset": 505 },
            "start": { "col": 23, "line": 29, "offset": 502 }
          },
          "$REQUEST": {
            "abstract_content": "r",
            "end": { "col": 18, "line": 14, "offset": 228 },
            "start": { "col": 17, "line": 14, "offset": 227 }
          },
          "$URL": {
            "abstract_content": "url",
            "end": { "col": 30, "line": 29, "offset": 509 },
            "propagated_value": {
              "svalue_abstract_content": "fmt.Sprintf(\"//%s/path\"urls[0])",
              "svalue_end": { "col": 45, "line": 26, "offset": 458 },
              "svalue_start": { "col": 12, "line": 26, "offset": 425 }
            },
            "start": { "col": 27, "line": 29, "offset": 506 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_labels_empty.go",
      "start": { "col": 27, "line": 29, "offset": 506 }
    },
    {
      "check_id": "go.lang.security.audit.xss.no-fprintf-to-responsewriter.no-fprintf-to-responsewriter",
      "end": { "col": 32, "line": 60, "offset": 1195 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "2b7ceb97520bd25606bdee068b6848a31ac2d6a1e7bfb2955403ff11abf39ea76a8e078a41847bbb8ef291115bb5adb1642e202b6cb233436ccaf14c1e11d909_0",
        "is_ignored": false,
        "lines": "\tfmt.Fprint(w, hex.Dump(bytes))",
        "message": "Detected 'Fprintf' or similar writing to 'http.ResponseWriter'. This bypasses HTML escaping that prevents cross-site scripting vulnerabilities. Instead, use the 'html/template' package to render data to users.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://blogtitle.github.io/robn-go-security-pearls-cross-site-scripting-xss/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "ReUgyJ",
              "url": "https://semgrep.dev/playground/r/BjTXrgq/go.lang.security.audit.xss.no-fprintf-to-responsewriter.no-fprintf-to-responsewriter",
              "version_id": "BjTXrgq"
            }
          },
          "shortlink": "https://sg.run/7oqR",
          "source": "https://semgrep.dev/r/go.lang.security.audit.xss.no-fprintf-to-responsewriter.no-fprintf-to-responsewriter",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$HANDLER": {
            "abstract_content": "handlerBadFmt",
            "end": { "col": 31, "line": 13, "offset": 167 },
            "start": { "col": 18, "line": 13, "offset": 154 }
          },
          "$PRINTF": {
            "abstract_content": "Fprint",
            "end": { "col": 12, "line": 60, "offset": 1175 },
            "start": { "col": 6, "line": 60, "offset": 1169 }
          },
          "$WRITER": {
            "abstract_content": "w",
            "end": { "col": 14, "line": 60, "offset": 1177 },
            "start": { "col": 13, "line": 60, "offset": 1176 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_labels_empty.go",
      "start": { "col": 2, "line": 60, "offset": 1165 }
    },
    {
      "check_id": "java.spring.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 64, "line": 66, "offset": 3201 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "queryParams",
              "location": {
                "end": { "col": 58, "line": 59, "offset": 2856 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 47, "line": 59, "offset": 2845 }
              }
            },
            {
              "content": "id",
              "location": {
                "end": { "col": 18, "line": 60, "offset": 2877 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 16, "line": 60, "offset": 2875 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 64, "line": 66, "offset": 3201 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 29, "line": 66, "offset": 3166 }
              },
              "\"select * from cars where id=\" + id"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 58, "line": 59, "offset": 2856 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 47, "line": 59, "offset": 2845 }
              },
              "queryParams"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "67b4003c01e73c0e66b792e1b4a98cc34e3b1cf53918f2b374a9c5eb22df3ed224ebca68de0ce409267bcbe9efd80adfaf0220943a222e948fb930b779bb1ca2_0",
        "is_ignored": false,
        "lines": "                            \"select * from cars where id=\" + id,",
        "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "10UdRR",
              "url": "https://semgrep.dev/playground/r/0bTLlny/java.spring.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "0bTLlny"
            }
          },
          "shortlink": "https://sg.run/9rzz",
          "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["spring"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "select",
            "end": { "col": 7, "line": 1, "offset": 6 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$METHODNAME": {
            "abstract_content": "doesCarInformationExistsLevel1",
            "end": { "col": 65, "line": 58, "offset": 2797 },
            "start": { "col": 35, "line": 58, "offset": 2767 }
          },
          "$REQ": {
            "abstract_content": "RequestParam RequestParam RequestParam RequestParam RequestParam RequestParam",
            "end": { "col": 26, "line": 59, "offset": 2824 },
            "start": { "col": 14, "line": 59, "offset": 2812 }
          },
          "$SOURCE": {
            "abstract_content": "queryParams",
            "end": { "col": 58, "line": 59, "offset": 2856 },
            "start": { "col": 47, "line": 59, "offset": 2845 }
          },
          "$SQLSTR": {
            "abstract_content": "select * from cars where id=",
            "end": { "col": 58, "line": 66, "offset": 3195 },
            "start": { "col": 30, "line": 66, "offset": 3167 }
          },
          "$TYPE": {
            "abstract_content": "Map<String String>",
            "end": { "col": 46, "line": 59, "offset": 2844 },
            "start": { "col": 27, "line": 59, "offset": 2825 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_lambda1.java",
      "start": { "col": 29, "line": 66, "offset": 3166 }
    },
    {
      "check_id": "java.spring.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 71, "line": 112, "offset": 5779 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "queryParams",
              "location": {
                "end": { "col": 58, "line": 105, "offset": 5427 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 47, "line": 105, "offset": 5416 }
              }
            },
            {
              "content": "id",
              "location": {
                "end": { "col": 18, "line": 106, "offset": 5448 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 16, "line": 106, "offset": 5446 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 71, "line": 112, "offset": 5779 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 29, "line": 112, "offset": 5737 }
              },
              "\"select * from cars where id='\" + id + \"'\""
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 58, "line": 105, "offset": 5427 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 47, "line": 105, "offset": 5416 }
              },
              "queryParams"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "7f3562594f807ff4be1f76bc67770b7bfd311fb73103a10195b2b8d7c0d80e2fab737fd411e24f4b6984d71342afac65bcd8a271dc23f32ad307fa8849f8c17d_0",
        "is_ignored": false,
        "lines": "                            \"select * from cars where id='\" + id + \"'\",",
        "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "10UdRR",
              "url": "https://semgrep.dev/playground/r/0bTLlny/java.spring.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "0bTLlny"
            }
          },
          "shortlink": "https://sg.run/9rzz",
          "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["spring"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "select",
            "end": { "col": 7, "line": 1, "offset": 6 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$METHODNAME": {
            "abstract_content": "doesCarInformationExistsLevel2",
            "end": { "col": 65, "line": 104, "offset": 5368 },
            "start": { "col": 35, "line": 104, "offset": 5338 }
          },
          "$REQ": {
            "abstract_content": "RequestParam RequestParam RequestParam RequestParam RequestParam RequestParam",
            "end": { "col": 26, "line": 105, "offset": 5395 },
            "start": { "col": 14, "line": 105, "offset": 5383 }
          },
          "$SOURCE": {
            "abstract_content": "queryParams",
            "end": { "col": 58, "line": 105, "offset": 5427 },
            "start": { "col": 47, "line": 105, "offset": 5416 }
          },
          "$SQLSTR": {
            "abstract_content": "select * from cars where id='",
            "end": { "col": 59, "line": 112, "offset": 5767 },
            "start": { "col": 30, "line": 112, "offset": 5738 }
          },
          "$TYPE": {
            "abstract_content": "Map<String String>",
            "end": { "col": 46, "line": 105, "offset": 5415 },
            "start": { "col": 27, "line": 105, "offset": 5396 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_lambda1.java",
      "start": { "col": 29, "line": 112, "offset": 5737 }
    },
    {
      "check_id": "java.spring.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 71, "line": 161, "offset": 8639 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "queryParams",
              "location": {
                "end": { "col": 58, "line": 152, "offset": 8159 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 47, "line": 152, "offset": 8148 }
              }
            },
            {
              "content": "id",
              "location": {
                "end": { "col": 18, "line": 153, "offset": 8180 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 16, "line": 153, "offset": 8178 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 71, "line": 161, "offset": 8639 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 29, "line": 161, "offset": 8597 }
              },
              "\"select * from cars where id='\" + id + \"'\""
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 58, "line": 152, "offset": 8159 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 47, "line": 152, "offset": 8148 }
              },
              "queryParams"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "d9a57a8106266df780797179c486ef0e02ec589c8547f14304a5cd3ff6d5664e8d1554429668e25fe97fd50539142d30b5682f045fd5fc39e9aa5b5bdb1c82d7_0",
        "is_ignored": false,
        "lines": "                            \"select * from cars where id='\" + id + \"'\",",
        "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "10UdRR",
              "url": "https://semgrep.dev/playground/r/0bTLlny/java.spring.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "0bTLlny"
            }
          },
          "shortlink": "https://sg.run/9rzz",
          "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["spring"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "select",
            "end": { "col": 7, "line": 1, "offset": 6 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$METHODNAME": {
            "abstract_content": "doesCarInformationExistsLevel3",
            "end": { "col": 65, "line": 151, "offset": 8100 },
            "start": { "col": 35, "line": 151, "offset": 8070 }
          },
          "$REQ": {
            "abstract_content": "RequestParam RequestParam RequestParam RequestParam RequestParam RequestParam",
            "end": { "col": 26, "line": 152, "offset": 8127 },
            "start": { "col": 14, "line": 152, "offset": 8115 }
          },
          "$SOURCE": {
            "abstract_content": "queryParams",
            "end": { "col": 58, "line": 152, "offset": 8159 },
            "start": { "col": 47, "line": 152, "offset": 8148 }
          },
          "$SQLSTR": {
            "abstract_content": "select * from cars where id='",
            "end": { "col": 59, "line": 161, "offset": 8627 },
            "start": { "col": 30, "line": 161, "offset": 8598 }
          },
          "$TYPE": {
            "abstract_content": "Map<String String>",
            "end": { "col": 46, "line": 152, "offset": 8147 },
            "start": { "col": 27, "line": 152, "offset": 8128 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_lambda1.java",
      "start": { "col": 29, "line": 161, "offset": 8597 }
    },
    {
      "check_id": "java.spring.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 87, "line": 213, "offset": 11571 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "queryParams",
              "location": {
                "end": { "col": 58, "line": 203, "offset": 10973 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 47, "line": 203, "offset": 10962 }
              }
            },
            {
              "content": "id",
              "location": {
                "end": { "col": 24, "line": 204, "offset": 11000 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 22, "line": 204, "offset": 10998 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 87, "line": 213, "offset": 11571 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 45, "line": 213, "offset": 11529 }
              },
              "\"select * from cars where id='\" + id + \"'\""
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 58, "line": 203, "offset": 10973 },
                "path": "tests/rules/taint_lambda1.java",
                "start": { "col": 47, "line": 203, "offset": 10962 }
              },
              "queryParams"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "b25bf812c6e1ea15320391d7cd1928dd007c39c404092ea505e3ddbfe884f198b2d33922ce3230642473a06a2c270f020c7c6b0de589e8edbf5c0e9c0c23d7c4_0",
        "is_ignored": false,
        "lines": "                                            \"select * from cars where id='\" + id + \"'\"),",
        "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "10UdRR",
              "url": "https://semgrep.dev/playground/r/0bTLlny/java.spring.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "0bTLlny"
            }
          },
          "shortlink": "https://sg.run/9rzz",
          "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["spring"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "select",
            "end": { "col": 7, "line": 1, "offset": 6 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$METHODNAME": {
            "abstract_content": "doesCarInformationExistsLevel4",
            "end": { "col": 65, "line": 202, "offset": 10914 },
            "start": { "col": 35, "line": 202, "offset": 10884 }
          },
          "$REQ": {
            "abstract_content": "RequestParam RequestParam RequestParam RequestParam RequestParam RequestParam",
            "end": { "col": 26, "line": 203, "offset": 10941 },
            "start": { "col": 14, "line": 203, "offset": 10929 }
          },
          "$SOURCE": {
            "abstract_content": "queryParams",
            "end": { "col": 58, "line": 203, "offset": 10973 },
            "start": { "col": 47, "line": 203, "offset": 10962 }
          },
          "$SQLSTR": {
            "abstract_content": "select * from cars where id='",
            "end": { "col": 75, "line": 213, "offset": 11559 },
            "start": { "col": 46, "line": 213, "offset": 11530 }
          },
          "$TYPE": {
            "abstract_content": "Map<String String>",
            "end": { "col": 46, "line": 203, "offset": 10961 },
            "start": { "col": 27, "line": 203, "offset": 10942 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_lambda1.java",
      "start": { "col": 45, "line": 213, "offset": 11529 }
    },
    {
      "check_id": "python.lang.security.audit.insecure-transport.requests.request-session-with-http.request-session-with-http",
      "end": { "col": 37, "line": 9, "offset": 295 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 37, "line": 9, "offset": 295 },
                "path": "tests/rules/taint_param_default.py",
                "start": { "col": 17, "line": 9, "offset": 275 }
              },
              "\"http://example.com\""
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 37, "line": 9, "offset": 295 },
                "path": "tests/rules/taint_param_default.py",
                "start": { "col": 17, "line": 9, "offset": 275 }
              },
              "\"http://example.com\""
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "5d9a6176fdcef639ad54c76dd246539ebf6527c44d694ec9968b2f09056a2abe0ef7ca66d3a9eddddf56d2819bd2eb76829dd859473caafb08c83c61faf0e428_0",
        "is_ignored": false,
        "lines": "    session.get(\"http://example.com\")",
        "message": "Detected a request using 'http://'. This request will be unencrypted. Use 'https://' instead.",
        "metadata": {
          "asvs": {
            "control_id": "9.1.1 Weak TLS",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x17-V9-Communications.md#v92-server-communications-security-requirements",
            "section": "V9 Communications Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGURXw",
              "url": "https://semgrep.dev/playground/r/GxTv8L9/python.lang.security.audit.insecure-transport.requests.request-session-with-http.request-session-with-http",
              "version_id": "GxTv8L9"
            }
          },
          "shortlink": "https://sg.run/DoBY",
          "source": "https://semgrep.dev/r/python.lang.security.audit.insecure-transport.requests.request-session-with-http.request-session-with-http",
          "subcategory": ["audit"],
          "technology": ["requests"],
          "vulnerability_class": ["Mishandled Sensitive Information"]
        },
        "metavars": {
          "$SINK": {
            "abstract_content": "\"http://example.com\"",
            "end": { "col": 37, "line": 9, "offset": 295 },
            "start": { "col": 17, "line": 9, "offset": 275 }
          },
          "$URL": {
            "abstract_content": "http://example.com",
            "end": { "col": 36, "line": 9, "offset": 294 },
            "start": { "col": 18, "line": 9, "offset": 276 }
          },
          "$W": {
            "abstract_content": "get",
            "end": { "col": 16, "line": 9, "offset": 274 },
            "start": { "col": 13, "line": 9, "offset": 271 }
          }
        },
        "severity": "INFO",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_param_default.py",
      "start": { "col": 17, "line": 9, "offset": 275 }
    },
    {
      "check_id": "python.lang.security.audit.insecure-transport.requests.request-session-with-http.request-session-with-http",
      "end": { "col": 21, "line": 20, "offset": 560 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 21, "line": 20, "offset": 560 },
                "path": "tests/rules/taint_param_default.py",
                "start": { "col": 18, "line": 20, "offset": 557 }
              },
              "url"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 21, "line": 20, "offset": 560 },
                "path": "tests/rules/taint_param_default.py",
                "start": { "col": 18, "line": 20, "offset": 557 }
              },
              "url"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "dded305e2c412f3dcea47ba52093cc78eacbb94c67ac1075e4a9753da9a22bb3cea911d7c487c9075d2089aa73f362f5d972bd94a09bebe8225999ee42bf9c10_0",
        "is_ignored": false,
        "lines": "    session.post(url)",
        "message": "Detected a request using 'http://'. This request will be unencrypted. Use 'https://' instead.",
        "metadata": {
          "asvs": {
            "control_id": "9.1.1 Weak TLS",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x17-V9-Communications.md#v92-server-communications-security-requirements",
            "section": "V9 Communications Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGURXw",
              "url": "https://semgrep.dev/playground/r/GxTv8L9/python.lang.security.audit.insecure-transport.requests.request-session-with-http.request-session-with-http",
              "version_id": "GxTv8L9"
            }
          },
          "shortlink": "https://sg.run/DoBY",
          "source": "https://semgrep.dev/r/python.lang.security.audit.insecure-transport.requests.request-session-with-http.request-session-with-http",
          "subcategory": ["audit"],
          "technology": ["requests"],
          "vulnerability_class": ["Mishandled Sensitive Information"]
        },
        "metavars": {
          "$SINK": {
            "abstract_content": "url",
            "end": { "col": 21, "line": 20, "offset": 560 },
            "propagated_value": {
              "svalue_abstract_content": "\"http://example.com\"",
              "svalue_end": { "col": 31, "line": 18, "offset": 499 },
              "svalue_start": { "col": 11, "line": 18, "offset": 479 }
            },
            "start": { "col": 18, "line": 20, "offset": 557 }
          },
          "$URL": {
            "abstract_content": "http://example.com",
            "end": { "col": 30, "line": 18, "offset": 498 },
            "start": { "col": 12, "line": 18, "offset": 480 }
          },
          "$W": {
            "abstract_content": "post",
            "end": { "col": 17, "line": 20, "offset": 556 },
            "start": { "col": 13, "line": 20, "offset": 552 }
          }
        },
        "severity": "INFO",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_param_default.py",
      "start": { "col": 18, "line": 20, "offset": 557 }
    },
    {
      "check_id": "python.lang.security.audit.insecure-transport.requests.request-session-with-http.request-session-with-http",
      "end": { "col": 23, "line": 31, "offset": 837 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "url",
              "location": {
                "end": { "col": 14, "line": 28, "offset": 716 },
                "path": "tests/rules/taint_param_default.py",
                "start": { "col": 11, "line": 28, "offset": 713 }
              }
            },
            {
              "content": "url",
              "location": {
                "end": { "col": 14, "line": 28, "offset": 716 },
                "path": "tests/rules/taint_param_default.py",
                "start": { "col": 11, "line": 28, "offset": 713 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 23, "line": 31, "offset": 837 },
                "path": "tests/rules/taint_param_default.py",
                "start": { "col": 20, "line": 31, "offset": 834 }
              },
              "url"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 37, "line": 28, "offset": 739 },
                "path": "tests/rules/taint_param_default.py",
                "start": { "col": 17, "line": 28, "offset": 719 }
              },
              "\"http://example.com\""
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "cbdd68d1f5d2b6552f854d47d549c3aeae53f090185f7dbd3f719b9034d3008f3f91067a06753a470c55114c1f064343c46af03327fb2d0c786a4f753d46c54f_0",
        "is_ignored": false,
        "lines": "    session.delete(url)",
        "message": "Detected a request using 'http://'. This request will be unencrypted. Use 'https://' instead.",
        "metadata": {
          "asvs": {
            "control_id": "9.1.1 Weak TLS",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x17-V9-Communications.md#v92-server-communications-security-requirements",
            "section": "V9 Communications Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGURXw",
              "url": "https://semgrep.dev/playground/r/GxTv8L9/python.lang.security.audit.insecure-transport.requests.request-session-with-http.request-session-with-http",
              "version_id": "GxTv8L9"
            }
          },
          "shortlink": "https://sg.run/DoBY",
          "source": "https://semgrep.dev/r/python.lang.security.audit.insecure-transport.requests.request-session-with-http.request-session-with-http",
          "subcategory": ["audit"],
          "technology": ["requests"],
          "vulnerability_class": ["Mishandled Sensitive Information"]
        },
        "metavars": {
          "$SINK": {
            "abstract_content": "url",
            "end": { "col": 23, "line": 31, "offset": 837 },
            "start": { "col": 20, "line": 31, "offset": 834 }
          },
          "$URL": {
            "abstract_content": "http://example.com",
            "end": { "col": 36, "line": 28, "offset": 738 },
            "start": { "col": 18, "line": 28, "offset": 720 }
          },
          "$W": {
            "abstract_content": "delete",
            "end": { "col": 19, "line": 31, "offset": 833 },
            "start": { "col": 13, "line": 31, "offset": 827 }
          }
        },
        "severity": "INFO",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_param_default.py",
      "start": { "col": 20, "line": 31, "offset": 834 }
    },
    {
      "check_id": "python.lang.security.audit.insecure-transport.requests.request-session-with-http.request-session-with-http",
      "end": { "col": 32, "line": 41, "offset": 1120 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "url",
              "location": {
                "end": { "col": 14, "line": 38, "offset": 990 },
                "path": "tests/rules/taint_param_default.py",
                "start": { "col": 11, "line": 38, "offset": 987 }
              }
            },
            {
              "content": "url",
              "location": {
                "end": { "col": 14, "line": 38, "offset": 990 },
                "path": "tests/rules/taint_param_default.py",
                "start": { "col": 11, "line": 38, "offset": 987 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 32, "line": 41, "offset": 1120 },
                "path": "tests/rules/taint_param_default.py",
                "start": { "col": 29, "line": 41, "offset": 1117 }
              },
              "url"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 37, "line": 38, "offset": 1013 },
                "path": "tests/rules/taint_param_default.py",
                "start": { "col": 17, "line": 38, "offset": 993 }
              },
              "\"http://example.com\""
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "5156d7d56397ffa22c3375706b05d502075c60aea783ab5a094524c422ee09606a4a477597f8b4fbbdf0115a5c634c8bfd07bcfa84c4bd19887e1bf8ed76ce3a_0",
        "is_ignored": false,
        "lines": "    session.request(\"HEAD\", url, timeout=30)",
        "message": "Detected a request using 'http://'. This request will be unencrypted. Use 'https://' instead.",
        "metadata": {
          "asvs": {
            "control_id": "9.1.1 Weak TLS",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x17-V9-Communications.md#v92-server-communications-security-requirements",
            "section": "V9 Communications Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "YGURXw",
              "url": "https://semgrep.dev/playground/r/GxTv8L9/python.lang.security.audit.insecure-transport.requests.request-session-with-http.request-session-with-http",
              "version_id": "GxTv8L9"
            }
          },
          "shortlink": "https://sg.run/DoBY",
          "source": "https://semgrep.dev/r/python.lang.security.audit.insecure-transport.requests.request-session-with-http.request-session-with-http",
          "subcategory": ["audit"],
          "technology": ["requests"],
          "vulnerability_class": ["Mishandled Sensitive Information"]
        },
        "metavars": {
          "$METHOD": {
            "abstract_content": "\"HEAD\"",
            "end": { "col": 27, "line": 41, "offset": 1115 },
            "start": { "col": 21, "line": 41, "offset": 1109 }
          },
          "$SINK": {
            "abstract_content": "url",
            "end": { "col": 32, "line": 41, "offset": 1120 },
            "start": { "col": 29, "line": 41, "offset": 1117 }
          },
          "$URL": {
            "abstract_content": "http://example.com",
            "end": { "col": 36, "line": 38, "offset": 1012 },
            "start": { "col": 18, "line": 38, "offset": 994 }
          }
        },
        "severity": "INFO",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_param_default.py",
      "start": { "col": 29, "line": 41, "offset": 1117 }
    },
    {
      "check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
      "end": { "col": 83, "line": 39, "offset": 1518 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "sqlBuilder",
              "location": {
                "end": { "col": 15, "line": 37, "offset": 1384 },
                "path": "tests/rules/taint_propagator4.java",
                "start": { "col": 5, "line": 37, "offset": 1374 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 83, "line": 39, "offset": 1518 },
                "path": "tests/rules/taint_propagator4.java",
                "start": { "col": 30, "line": 39, "offset": 1465 }
              },
              "em.createQuery(sqlBuilder.toString(), Greeting.class)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 28, "line": 25, "offset": 858 },
                "path": "tests/rules/taint_propagator4.java",
                "start": { "col": 21, "line": 25, "offset": 851 }
              },
              "orderBy"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "33e499941738c7dfc755c6cf6e8871a4c530e93f020bcb63452f176e127789d97e2112c664ea0bc582d5100d115602936f5d21418105367e4a3f6a1d3607a811_0",
        "is_ignored": false,
        "lines": "    TypedQuery<Greeting> q = em.createQuery(sqlBuilder.toString(), Greeting.class);",
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "asvs": {
            "control_id": "5.3.5 Injection",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html",
            "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps",
            "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "QrUzxR",
              "url": "https://semgrep.dev/playground/r/O9TNOzA/java.lang.security.audit.formatted-sql-string.formatted-sql-string",
              "version_id": "O9TNOzA"
            }
          },
          "shortlink": "https://sg.run/OPXp",
          "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string",
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION",
          "subcategory": ["vuln"],
          "technology": ["java"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$ANNOT": {
            "abstract_content": "Greeting",
            "end": { "col": 18, "line": 21, "offset": 635 },
            "start": { "col": 10, "line": 21, "offset": 627 }
          },
          "$EM": {
            "abstract_content": "em",
            "end": { "col": 32, "line": 39, "offset": 1467 },
            "propagated_value": {
              "svalue_abstract_content": "HibernateOperations.getEntityManager()",
              "svalue_end": { "col": 62, "line": 27, "offset": 923 },
              "svalue_start": { "col": 24, "line": 27, "offset": 885 }
            },
            "start": { "col": 30, "line": 39, "offset": 1465 }
          },
          "$FUNC": {
            "abstract_content": "greeting",
            "end": { "col": 27, "line": 21, "offset": 644 },
            "start": { "col": 19, "line": 21, "offset": 636 }
          },
          "$SQLFUNC": {
            "abstract_content": "createQuery",
            "end": { "col": 44, "line": 39, "offset": 1479 },
            "start": { "col": 33, "line": 39, "offset": 1468 }
          },
          "$STRB": {
            "abstract_content": "sqlBuilder",
            "end": { "col": 15, "line": 37, "offset": 1384 },
            "start": { "col": 5, "line": 37, "offset": 1374 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_propagator4.java",
      "start": { "col": 30, "line": 39, "offset": 1465 }
    },
    {
      "check_id": "ruby.rails.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 64, "line": 5, "offset": 151 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 64, "line": 5, "offset": 151 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 51, "line": 5, "offset": 138 }
              },
              "params['age']"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 57, "line": 5, "offset": 144 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 51, "line": 5, "offset": 138 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "1675e954bb97fee60aa752430e41993d83fe1d022982fd87e23c94666ec788e3b1807df521de89622ba46fb06dd9193ddbe45ddbf9bc55b783157cdf4fa20942_0",
        "is_ignored": false,
        "lines": "    query = \"SELECT name FROM users WHERE age=\" + params['age']",
        "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as ActiveRecord which will protect your queries.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://rorsecurity.info/portfolio/ruby-on-rails-sql-injection-cheat-sheet"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "bwU8gl",
              "url": "https://semgrep.dev/playground/r/YDTpZBw/ruby.rails.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "YDTpZBw"
            }
          },
          "shortlink": "https://sg.run/Y85o",
          "source": "https://semgrep.dev/r/ruby.rails.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "SELECT",
            "end": { "col": 7, "line": 1, "offset": 6 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$EXPR": {
            "abstract_content": "params[[['age']",
            "end": { "col": 64, "line": 5, "offset": 151 },
            "start": { "col": 51, "line": 5, "offset": 138 }
          },
          "$SQLSTR": {
            "abstract_content": "SELECT name FROM users WHERE age=",
            "end": { "col": 47, "line": 5, "offset": 134 },
            "start": { "col": 14, "line": 5, "offset": 101 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 51, "line": 5, "offset": 138 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 19, "line": 7, "offset": 197 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "query",
              "location": {
                "end": { "col": 10, "line": 5, "offset": 97 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 5, "line": 5, "offset": 92 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 19, "line": 7, "offset": 197 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 14, "line": 7, "offset": 192 }
              },
              "query"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 57, "line": 5, "offset": 144 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 51, "line": 5, "offset": 138 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "8547e4ecce5db579424ed3640863fbf84651773d7d0671eb5586c7d8a22b20dc12e3175085f83e1e960a85fcb7ebb106c85b3883f5537512541dcb82ace23030_1",
        "is_ignored": false,
        "lines": "    con.exec query",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT $1 AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 7, "offset": 186 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 4, "offset": 87 },
              "svalue_start": { "col": 11, "line": 4, "offset": 35 }
            },
            "start": { "col": 5, "line": 7, "offset": 183 }
          },
          "$METHOD": {
            "abstract_content": "exec",
            "end": { "col": 13, "line": 7, "offset": 191 },
            "start": { "col": 9, "line": 7, "offset": 187 }
          },
          "$X": {
            "abstract_content": "query",
            "end": { "col": 19, "line": 7, "offset": 197 },
            "propagated_value": {
              "svalue_abstract_content": "\"SELECT name FROM users WHERE age=\"+params[[['age']",
              "svalue_end": { "col": 64, "line": 5, "offset": 151 },
              "svalue_start": { "col": 13, "line": 5, "offset": 100 }
            },
            "start": { "col": 14, "line": 7, "offset": 192 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 14, "line": 7, "offset": 192 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 19, "line": 7, "offset": 197 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "query",
              "location": {
                "end": { "col": 10, "line": 5, "offset": 97 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 5, "line": 5, "offset": 92 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 19, "line": 7, "offset": 197 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 14, "line": 7, "offset": 192 }
              },
              "query"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 57, "line": 5, "offset": 144 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 51, "line": 5, "offset": 138 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "8547e4ecce5db579424ed3640863fbf84651773d7d0671eb5586c7d8a22b20dc12e3175085f83e1e960a85fcb7ebb106c85b3883f5537512541dcb82ace23030_0",
        "is_ignored": false,
        "lines": "    con.exec query",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT requ AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "exec",
            "end": { "col": 5, "line": 1, "offset": 4 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 7, "offset": 186 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 4, "offset": 87 },
              "svalue_start": { "col": 11, "line": 4, "offset": 35 }
            },
            "start": { "col": 5, "line": 7, "offset": 183 }
          },
          "$METHOD": {
            "abstract_content": "exec",
            "end": { "col": 13, "line": 7, "offset": 191 },
            "start": { "col": 9, "line": 7, "offset": 187 }
          },
          "$X": {
            "abstract_content": "query",
            "end": { "col": 19, "line": 7, "offset": 197 },
            "propagated_value": {
              "svalue_abstract_content": "\"SELECT name FROM users WHERE age=\"+params[[['age']",
              "svalue_end": { "col": 64, "line": 5, "offset": 151 },
              "svalue_start": { "col": 13, "line": 5, "offset": 100 }
            },
            "start": { "col": 14, "line": 7, "offset": 192 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 14, "line": 7, "offset": 192 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 19, "line": 16, "offset": 426 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "age",
              "location": {
                "end": { "col": 8, "line": 11, "offset": 231 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 5, "line": 11, "offset": 228 }
              }
            },
            {
              "content": "query",
              "location": {
                "end": { "col": 10, "line": 14, "offset": 373 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 5, "line": 14, "offset": 368 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 19, "line": 16, "offset": 426 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 14, "line": 16, "offset": 421 }
              },
              "query"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 17, "line": 11, "offset": 240 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 11, "line": 11, "offset": 234 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "8547e4ecce5db579424ed3640863fbf84651773d7d0671eb5586c7d8a22b20dc12e3175085f83e1e960a85fcb7ebb106c85b3883f5537512541dcb82ace23030_3",
        "is_ignored": false,
        "lines": "    con.exec query",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT $1 AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 16, "offset": 415 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 12, "offset": 315 },
              "svalue_start": { "col": 11, "line": 12, "offset": 263 }
            },
            "start": { "col": 5, "line": 16, "offset": 412 }
          },
          "$METHOD": {
            "abstract_content": "exec",
            "end": { "col": 13, "line": 16, "offset": 420 },
            "start": { "col": 9, "line": 16, "offset": 416 }
          },
          "$X": {
            "abstract_content": "query",
            "end": { "col": 19, "line": 16, "offset": 426 },
            "start": { "col": 14, "line": 16, "offset": 421 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 14, "line": 16, "offset": 421 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 19, "line": 16, "offset": 426 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "age",
              "location": {
                "end": { "col": 8, "line": 11, "offset": 231 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 5, "line": 11, "offset": 228 }
              }
            },
            {
              "content": "query",
              "location": {
                "end": { "col": 10, "line": 14, "offset": 373 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 5, "line": 14, "offset": 368 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 19, "line": 16, "offset": 426 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 14, "line": 16, "offset": 421 }
              },
              "query"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 17, "line": 11, "offset": 240 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 11, "line": 11, "offset": 234 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "8547e4ecce5db579424ed3640863fbf84651773d7d0671eb5586c7d8a22b20dc12e3175085f83e1e960a85fcb7ebb106c85b3883f5537512541dcb82ace23030_2",
        "is_ignored": false,
        "lines": "    con.exec query",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT requ AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "exec",
            "end": { "col": 5, "line": 1, "offset": 4 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 16, "offset": 415 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 12, "offset": 315 },
              "svalue_start": { "col": 11, "line": 12, "offset": 263 }
            },
            "start": { "col": 5, "line": 16, "offset": 412 }
          },
          "$METHOD": {
            "abstract_content": "exec",
            "end": { "col": 13, "line": 16, "offset": 420 },
            "start": { "col": 9, "line": 16, "offset": 416 }
          },
          "$X": {
            "abstract_content": "query",
            "end": { "col": 19, "line": 16, "offset": 426 },
            "start": { "col": 14, "line": 16, "offset": 421 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 14, "line": 16, "offset": 421 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 19, "line": 24, "offset": 645 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "query",
              "location": {
                "end": { "col": 10, "line": 22, "offset": 572 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 5, "line": 22, "offset": 567 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 19, "line": 24, "offset": 645 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 14, "line": 24, "offset": 640 }
              },
              "query"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 25, "line": 22, "offset": 587 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 18, "line": 22, "offset": 580 }
              },
              "cookies"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "8547e4ecce5db579424ed3640863fbf84651773d7d0671eb5586c7d8a22b20dc12e3175085f83e1e960a85fcb7ebb106c85b3883f5537512541dcb82ace23030_5",
        "is_ignored": false,
        "lines": "    con.exec query",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT $1 AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 24, "offset": 634 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 20, "offset": 514 },
              "svalue_start": { "col": 11, "line": 20, "offset": 462 }
            },
            "start": { "col": 5, "line": 24, "offset": 631 }
          },
          "$METHOD": {
            "abstract_content": "exec",
            "end": { "col": 13, "line": 24, "offset": 639 },
            "start": { "col": 9, "line": 24, "offset": 635 }
          },
          "$X": {
            "abstract_content": "query",
            "end": { "col": 19, "line": 24, "offset": 645 },
            "propagated_value": {
              "svalue_abstract_content": "query.concat(cookies[[[userinput])",
              "svalue_end": { "col": 37, "line": 22, "offset": 599 },
              "svalue_start": { "col": 5, "line": 22, "offset": 567 }
            },
            "start": { "col": 14, "line": 24, "offset": 640 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 14, "line": 24, "offset": 640 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 19, "line": 24, "offset": 645 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "query",
              "location": {
                "end": { "col": 10, "line": 22, "offset": 572 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 5, "line": 22, "offset": 567 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 19, "line": 24, "offset": 645 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 14, "line": 24, "offset": 640 }
              },
              "query"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 25, "line": 22, "offset": 587 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 18, "line": 22, "offset": 580 }
              },
              "cookies"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "8547e4ecce5db579424ed3640863fbf84651773d7d0671eb5586c7d8a22b20dc12e3175085f83e1e960a85fcb7ebb106c85b3883f5537512541dcb82ace23030_4",
        "is_ignored": false,
        "lines": "    con.exec query",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT requ AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "exec",
            "end": { "col": 5, "line": 1, "offset": 4 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 24, "offset": 634 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 20, "offset": 514 },
              "svalue_start": { "col": 11, "line": 20, "offset": 462 }
            },
            "start": { "col": 5, "line": 24, "offset": 631 }
          },
          "$METHOD": {
            "abstract_content": "exec",
            "end": { "col": 13, "line": 24, "offset": 639 },
            "start": { "col": 9, "line": 24, "offset": 635 }
          },
          "$X": {
            "abstract_content": "query",
            "end": { "col": 19, "line": 24, "offset": 645 },
            "propagated_value": {
              "svalue_abstract_content": "query.concat(cookies[[[userinput])",
              "svalue_end": { "col": 37, "line": 22, "offset": 599 },
              "svalue_start": { "col": 5, "line": 22, "offset": 567 }
            },
            "start": { "col": 14, "line": 24, "offset": 640 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 14, "line": 24, "offset": 640 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 19, "line": 32, "offset": 858 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "query",
              "location": {
                "end": { "col": 10, "line": 30, "offset": 791 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 5, "line": 30, "offset": 786 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 19, "line": 32, "offset": 858 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 14, "line": 32, "offset": 853 }
              },
              "query"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 20, "line": 30, "offset": 801 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 14, "line": 30, "offset": 795 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "8547e4ecce5db579424ed3640863fbf84651773d7d0671eb5586c7d8a22b20dc12e3175085f83e1e960a85fcb7ebb106c85b3883f5537512541dcb82ace23030_7",
        "is_ignored": false,
        "lines": "    con.exec(query)",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT $1 AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 32, "offset": 847 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 28, "offset": 733 },
              "svalue_start": { "col": 11, "line": 28, "offset": 681 }
            },
            "start": { "col": 5, "line": 32, "offset": 844 }
          },
          "$METHOD": {
            "abstract_content": "exec",
            "end": { "col": 13, "line": 32, "offset": 852 },
            "start": { "col": 9, "line": 32, "offset": 848 }
          },
          "$X": {
            "abstract_content": "query",
            "end": { "col": 19, "line": 32, "offset": 858 },
            "start": { "col": 14, "line": 32, "offset": 853 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 14, "line": 32, "offset": 853 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 19, "line": 32, "offset": 858 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "query",
              "location": {
                "end": { "col": 10, "line": 30, "offset": 791 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 5, "line": 30, "offset": 786 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 19, "line": 32, "offset": 858 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 14, "line": 32, "offset": 853 }
              },
              "query"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 20, "line": 30, "offset": 801 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 14, "line": 30, "offset": 795 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "8547e4ecce5db579424ed3640863fbf84651773d7d0671eb5586c7d8a22b20dc12e3175085f83e1e960a85fcb7ebb106c85b3883f5537512541dcb82ace23030_6",
        "is_ignored": false,
        "lines": "    con.exec(query)",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT requ AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "exec",
            "end": { "col": 5, "line": 1, "offset": 4 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 32, "offset": 847 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 28, "offset": 733 },
              "svalue_start": { "col": 11, "line": 28, "offset": 681 }
            },
            "start": { "col": 5, "line": 32, "offset": 844 }
          },
          "$METHOD": {
            "abstract_content": "exec",
            "end": { "col": 13, "line": 32, "offset": 852 },
            "start": { "col": 9, "line": 32, "offset": 848 }
          },
          "$X": {
            "abstract_content": "query",
            "end": { "col": 19, "line": 32, "offset": 858 },
            "start": { "col": 14, "line": 32, "offset": 853 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 14, "line": 32, "offset": 853 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 72, "line": 38, "offset": 1037 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 72, "line": 38, "offset": 1037 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 21, "line": 38, "offset": 986 }
              },
              "\"SELECT name FROM users WHERE age=\" + params['age']"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 65, "line": 38, "offset": 1030 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 59, "line": 38, "offset": 1024 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "0d601b165a448104f8ffd621cf4318054e39711933fef2cbb825e12cca5f0bc9f88e1167249ab050e01620f997b9108a871010e819d0a9350689aa0cc11c7833_1",
        "is_ignored": false,
        "lines": "    con.exec_params(\"SELECT name FROM users WHERE age=\" + params['age'])",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT $1 AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 38, "offset": 973 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 36, "offset": 938 },
              "svalue_start": { "col": 11, "line": 36, "offset": 886 }
            },
            "start": { "col": 5, "line": 38, "offset": 970 }
          },
          "$METHOD": {
            "abstract_content": "exec_params",
            "end": { "col": 20, "line": 38, "offset": 985 },
            "start": { "col": 9, "line": 38, "offset": 974 }
          },
          "$X": {
            "abstract_content": "\"SELECT name FROM users WHERE age=\"+params[[['age']",
            "end": { "col": 72, "line": 38, "offset": 1037 },
            "start": { "col": 21, "line": 38, "offset": 986 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 21, "line": 38, "offset": 986 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 72, "line": 38, "offset": 1037 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 72, "line": 38, "offset": 1037 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 21, "line": 38, "offset": 986 }
              },
              "\"SELECT name FROM users WHERE age=\" + params['age']"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 65, "line": 38, "offset": 1030 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 59, "line": 38, "offset": 1024 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "0d601b165a448104f8ffd621cf4318054e39711933fef2cbb825e12cca5f0bc9f88e1167249ab050e01620f997b9108a871010e819d0a9350689aa0cc11c7833_0",
        "is_ignored": false,
        "lines": "    con.exec_params(\"SELECT name FROM users WHERE age=\" + params['age'])",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT require 'pg AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "exec_params",
            "end": { "col": 12, "line": 1, "offset": 11 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 38, "offset": 973 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 36, "offset": 938 },
              "svalue_start": { "col": 11, "line": 36, "offset": 886 }
            },
            "start": { "col": 5, "line": 38, "offset": 970 }
          },
          "$METHOD": {
            "abstract_content": "exec_params",
            "end": { "col": 20, "line": 38, "offset": 985 },
            "start": { "col": 9, "line": 38, "offset": 974 }
          },
          "$X": {
            "abstract_content": "\"SELECT name FROM users WHERE age=\"+params[[['age']",
            "end": { "col": 72, "line": 38, "offset": 1037 },
            "start": { "col": 21, "line": 38, "offset": 986 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 21, "line": 38, "offset": 986 }
    },
    {
      "check_id": "ruby.rails.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 72, "line": 38, "offset": 1037 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 72, "line": 38, "offset": 1037 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 59, "line": 38, "offset": 1024 }
              },
              "params['age']"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 65, "line": 38, "offset": 1030 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 59, "line": 38, "offset": 1024 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "1675e954bb97fee60aa752430e41993d83fe1d022982fd87e23c94666ec788e3b1807df521de89622ba46fb06dd9193ddbe45ddbf9bc55b783157cdf4fa20942_1",
        "is_ignored": false,
        "lines": "    con.exec_params(\"SELECT name FROM users WHERE age=\" + params['age'])",
        "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as ActiveRecord which will protect your queries.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://rorsecurity.info/portfolio/ruby-on-rails-sql-injection-cheat-sheet"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "bwU8gl",
              "url": "https://semgrep.dev/playground/r/YDTpZBw/ruby.rails.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "YDTpZBw"
            }
          },
          "shortlink": "https://sg.run/Y85o",
          "source": "https://semgrep.dev/r/ruby.rails.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "SELECT",
            "end": { "col": 7, "line": 1, "offset": 6 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$EXPR": {
            "abstract_content": "params[[['age']",
            "end": { "col": 72, "line": 38, "offset": 1037 },
            "start": { "col": 59, "line": 38, "offset": 1024 }
          },
          "$SQLSTR": {
            "abstract_content": "SELECT name FROM users WHERE age=",
            "end": { "col": 55, "line": 38, "offset": 1020 },
            "start": { "col": 22, "line": 38, "offset": 987 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 59, "line": 38, "offset": 1024 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 78, "line": 44, "offset": 1222 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 78, "line": 44, "offset": 1222 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 21, "line": 44, "offset": 1165 }
              },
              "\"SELECT name FROM users WHERE age=\".concat(params['age'])"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 70, "line": 44, "offset": 1214 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 64, "line": 44, "offset": 1208 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "382265c7abe72cd6b63e2d7a0d5b03760f24e5fa2b10e4b7022939d41ed6088a3b1fc9cd8c2e2867dad4da9a5408256d859f3eec7626b470eb49a7ff5e01b8d7_1",
        "is_ignored": false,
        "lines": "    con.exec_params(\"SELECT name FROM users WHERE age=\".concat(params['age']))",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT $1 AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 44, "offset": 1152 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 42, "offset": 1117 },
              "svalue_start": { "col": 11, "line": 42, "offset": 1065 }
            },
            "start": { "col": 5, "line": 44, "offset": 1149 }
          },
          "$METHOD": {
            "abstract_content": "exec_params",
            "end": { "col": 20, "line": 44, "offset": 1164 },
            "start": { "col": 9, "line": 44, "offset": 1153 }
          },
          "$X": {
            "abstract_content": "\"SELECT name FROM users WHERE age=\".concat(params[[['age'])",
            "end": { "col": 78, "line": 44, "offset": 1222 },
            "start": { "col": 21, "line": 44, "offset": 1165 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 21, "line": 44, "offset": 1165 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 78, "line": 44, "offset": 1222 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 78, "line": 44, "offset": 1222 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 21, "line": 44, "offset": 1165 }
              },
              "\"SELECT name FROM users WHERE age=\".concat(params['age'])"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 70, "line": 44, "offset": 1214 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 64, "line": 44, "offset": 1208 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "382265c7abe72cd6b63e2d7a0d5b03760f24e5fa2b10e4b7022939d41ed6088a3b1fc9cd8c2e2867dad4da9a5408256d859f3eec7626b470eb49a7ff5e01b8d7_0",
        "is_ignored": false,
        "lines": "    con.exec_params(\"SELECT name FROM users WHERE age=\".concat(params['age']))",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT require 'pg AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "exec_params",
            "end": { "col": 12, "line": 1, "offset": 11 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 44, "offset": 1152 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 42, "offset": 1117 },
              "svalue_start": { "col": 11, "line": 42, "offset": 1065 }
            },
            "start": { "col": 5, "line": 44, "offset": 1149 }
          },
          "$METHOD": {
            "abstract_content": "exec_params",
            "end": { "col": 20, "line": 44, "offset": 1164 },
            "start": { "col": 9, "line": 44, "offset": 1153 }
          },
          "$X": {
            "abstract_content": "\"SELECT name FROM users WHERE age=\".concat(params[[['age'])",
            "end": { "col": 78, "line": 44, "offset": 1222 },
            "start": { "col": 21, "line": 44, "offset": 1165 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 21, "line": 44, "offset": 1165 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 77, "line": 50, "offset": 1415 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 77, "line": 50, "offset": 1415 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 21, "line": 50, "offset": 1359 }
              },
              "\"SELECT name FROM users WHERE age=\" << params[userinput]"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 66, "line": 50, "offset": 1404 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 60, "line": 50, "offset": 1398 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "ef269f7770ef6122917bd9846277524dfa895c675a6c4f9272b218781b2051bbec78373c215a381280b46dcd78c230027ac3434dfc75922ea9f1c47dcec639fc_1",
        "is_ignored": false,
        "lines": "    con.exec_params(\"SELECT name FROM users WHERE age=\" << params[userinput])",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT $1 AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 50, "offset": 1346 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 48, "offset": 1311 },
              "svalue_start": { "col": 11, "line": 48, "offset": 1259 }
            },
            "start": { "col": 5, "line": 50, "offset": 1343 }
          },
          "$METHOD": {
            "abstract_content": "exec_params",
            "end": { "col": 20, "line": 50, "offset": 1358 },
            "start": { "col": 9, "line": 50, "offset": 1347 }
          },
          "$X": {
            "abstract_content": "\"SELECT name FROM users WHERE age=\"<<params[[[userinput]",
            "end": { "col": 77, "line": 50, "offset": 1415 },
            "start": { "col": 21, "line": 50, "offset": 1359 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 21, "line": 50, "offset": 1359 }
    },
    {
      "check_id": "ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
      "end": { "col": 77, "line": 50, "offset": 1415 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 77, "line": 50, "offset": 1415 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 21, "line": 50, "offset": 1359 }
              },
              "\"SELECT name FROM users WHERE age=\" << params[userinput]"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 66, "line": 50, "offset": 1404 },
                "path": "tests/rules/taint_ruby_concat.rb",
                "start": { "col": 60, "line": 50, "offset": 1398 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "ef269f7770ef6122917bd9846277524dfa895c675a6c4f9272b218781b2051bbec78373c215a381280b46dcd78c230027ac3434dfc75922ea9f1c47dcec639fc_0",
        "is_ignored": false,
        "lines": "    con.exec_params(\"SELECT name FROM users WHERE age=\" << params[userinput])",
        "message": "Detected string concatenation with a non-literal variable in a pg Ruby SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use parameterized queries like so: `conn.exec_params('SELECT require 'pg AS a, $2 AS b, $3 AS c', [1, 2, nil])` And you can use prepared statements with `exec_prepared`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://www.rubydoc.info/gems/pg/PG/Connection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUAz7",
              "url": "https://semgrep.dev/playground/r/vdTY8n2/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
              "version_id": "vdTY8n2"
            }
          },
          "shortlink": "https://sg.run/kL0o",
          "source": "https://semgrep.dev/r/ruby.rails.security.audit.sqli.ruby-pg-sqli.ruby-pg-sqli",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "exec_params",
            "end": { "col": 12, "line": 1, "offset": 11 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$CON": {
            "abstract_content": "con",
            "end": { "col": 8, "line": 50, "offset": 1346 },
            "propagated_value": {
              "svalue_abstract_content": "PG.connect dbname'testdb'user'janbodnar'",
              "svalue_end": { "col": 63, "line": 48, "offset": 1311 },
              "svalue_start": { "col": 11, "line": 48, "offset": 1259 }
            },
            "start": { "col": 5, "line": 50, "offset": 1343 }
          },
          "$METHOD": {
            "abstract_content": "exec_params",
            "end": { "col": 20, "line": 50, "offset": 1358 },
            "start": { "col": 9, "line": 50, "offset": 1347 }
          },
          "$X": {
            "abstract_content": "\"SELECT name FROM users WHERE age=\"<<params[[[userinput]",
            "end": { "col": 77, "line": 50, "offset": 1415 },
            "start": { "col": 21, "line": 50, "offset": 1359 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_concat.rb",
      "start": { "col": 21, "line": 50, "offset": 1359 }
    },
    {
      "check_id": "ruby.rails.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 57, "line": 6, "offset": 141 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 57, "line": 6, "offset": 141 },
                "path": "tests/rules/taint_ruby_hash_elem_ref.rb",
                "start": { "col": 27, "line": 6, "offset": 111 }
              },
              "\"id = '#{params[:user][:id]}'\""
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 42, "line": 6, "offset": 126 },
                "path": "tests/rules/taint_ruby_hash_elem_ref.rb",
                "start": { "col": 36, "line": 6, "offset": 120 }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "6199d15cc671a7eef5ada1fa1738db356a6b02b3cd3130723b56239107506984cc909be268d81bf434f5424077834d06b921d6fefd4833bd6349eaeb2d6f4c39_0",
        "is_ignored": false,
        "lines": "    all_user = User.where(\"id = '#{params[:user][:id]}'\").order(sort)",
        "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as ActiveRecord which will protect your queries.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://rorsecurity.info/portfolio/ruby-on-rails-sql-injection-cheat-sheet"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "bwU8gl",
              "url": "https://semgrep.dev/playground/r/YDTpZBw/ruby.rails.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "YDTpZBw"
            }
          },
          "shortlink": "https://sg.run/Y85o",
          "source": "https://semgrep.dev/r/ruby.rails.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["rails"],
          "vulnerability_class": ["SQL Injection"]
        },
        "metavars": {
          "$RECORD": {
            "abstract_content": "User",
            "end": { "col": 20, "line": 6, "offset": 104 },
            "start": { "col": 16, "line": 6, "offset": 100 }
          },
          "$X": {
            "abstract_content": "\"\"\"id = '#{params[[[:user][[[:id]}'\"",
            "end": { "col": 57, "line": 6, "offset": 141 },
            "start": { "col": 27, "line": 6, "offset": 111 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_ruby_hash_elem_ref.rb",
      "start": { "col": 27, "line": 6, "offset": 111 }
    },
    {
      "check_id": "typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
      "end": { "col": 45, "line": 11, "offset": 353 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "props",
              "location": {
                "end": { "col": 37, "line": 6, "offset": 121 },
                "path": "tests/rules/taint_spread_record_big.js",
                "start": { "col": 32, "line": 6, "offset": 116 }
              }
            },
            {
              "content": "text",
              "location": {
                "end": { "col": 23, "line": 7, "offset": 147 },
                "path": "tests/rules/taint_spread_record_big.js",
                "start": { "col": 19, "line": 7, "offset": 143 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 45, "line": 11, "offset": 353 },
                "path": "tests/rules/taint_spread_record_big.js",
                "start": { "col": 41, "line": 11, "offset": 349 }
              },
              "text"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 37, "line": 6, "offset": 121 },
                "path": "tests/rules/taint_spread_record_big.js",
                "start": { "col": 32, "line": 6, "offset": 116 }
              },
              "props"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "9639c5b849628db1ddd1f5eae8fa81f046542778a16b847c4368250aebe9318dd66d55c7e560919baf1adf6a7320d40226727f95a3425ccd0c54e6360332937c_0",
        "is_ignored": false,
        "lines": "      dangerouslySetInnerHTML: {__html: text} })",
        "message": "Detection of dangerouslySetInnerHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use dangerouslySetInnerHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://react.dev/reference/react-dom/components/common#dangerously-setting-the-inner-html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "x8UWvK",
              "url": "https://semgrep.dev/playground/r/A8T9XEl/typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
              "version_id": "A8T9XEl"
            }
          },
          "shortlink": "https://sg.run/rAx6",
          "source": "https://semgrep.dev/r/typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
          "subcategory": ["vuln"],
          "technology": ["react"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$X": {
            "abstract_content": "props",
            "end": { "col": 37, "line": 6, "offset": 121 },
            "start": { "col": 32, "line": 6, "offset": 116 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_spread_record_big.js",
      "start": { "col": 41, "line": 11, "offset": 349 }
    },
    {
      "check_id": "typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
      "end": { "col": 48, "line": 31, "offset": 847 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "props",
              "location": {
                "end": { "col": 37, "line": 26, "offset": 635 },
                "path": "tests/rules/taint_spread_record_big.js",
                "start": { "col": 32, "line": 26, "offset": 630 }
              }
            },
            {
              "content": "comment",
              "location": {
                "end": { "col": 16, "line": 27, "offset": 654 },
                "path": "tests/rules/taint_spread_record_big.js",
                "start": { "col": 9, "line": 27, "offset": 647 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 48, "line": 31, "offset": 847 },
                "path": "tests/rules/taint_spread_record_big.js",
                "start": { "col": 41, "line": 31, "offset": 840 }
              },
              "comment"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 37, "line": 26, "offset": 635 },
                "path": "tests/rules/taint_spread_record_big.js",
                "start": { "col": 32, "line": 26, "offset": 630 }
              },
              "props"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "9639c5b849628db1ddd1f5eae8fa81f046542778a16b847c4368250aebe9318dd66d55c7e560919baf1adf6a7320d40226727f95a3425ccd0c54e6360332937c_1",
        "is_ignored": false,
        "lines": "      dangerouslySetInnerHTML: {__html: comment} })",
        "message": "Detection of dangerouslySetInnerHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use dangerouslySetInnerHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://react.dev/reference/react-dom/components/common#dangerously-setting-the-inner-html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "x8UWvK",
              "url": "https://semgrep.dev/playground/r/A8T9XEl/typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
              "version_id": "A8T9XEl"
            }
          },
          "shortlink": "https://sg.run/rAx6",
          "source": "https://semgrep.dev/r/typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
          "subcategory": ["vuln"],
          "technology": ["react"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$X": {
            "abstract_content": "props",
            "end": { "col": 37, "line": 26, "offset": 635 },
            "start": { "col": 32, "line": 26, "offset": 630 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/taint_spread_record_big.js",
      "start": { "col": 41, "line": 31, "offset": 840 }
    },
    {
      "check_id": "java.spring.security.injection.tainted-file-path.tainted-file-path",
      "end": { "col": 32, "line": 5, "offset": 213 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "path",
              "location": {
                "end": { "col": 46, "line": 3, "offset": 142 },
                "path": "tests/rules/tainted-file-path.java",
                "start": { "col": 42, "line": 3, "offset": 138 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 32, "line": 5, "offset": 213 },
                "path": "tests/rules/tainted-file-path.java",
                "start": { "col": 18, "line": 5, "offset": 199 }
              },
              "new File(path)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 46, "line": 3, "offset": 142 },
                "path": "tests/rules/tainted-file-path.java",
                "start": { "col": 42, "line": 3, "offset": 138 }
              },
              "path"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "c49956e0a373d507485bf2402a50456cef00ba5eec90d46dfacb10a065d9ccaf544c748c3866f0a75bd35ec3e82657098605899b122417c372267fab5d540273_0",
        "is_ignored": false,
        "lines": "        File f = new File(path);",
        "message": "Detected user input controlling a file path. An attacker could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": ["CWE-23: Relative Path Traversal"],
          "impact": "HIGH",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "lBUxok",
              "url": "https://semgrep.dev/playground/r/DkT6nEd/java.spring.security.injection.tainted-file-path.tainted-file-path",
              "version_id": "DkT6nEd"
            }
          },
          "shortlink": "https://sg.run/x9o0",
          "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-file-path.tainted-file-path",
          "subcategory": ["vuln"],
          "technology": ["java", "spring"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "RequestParam",
            "end": { "col": 13, "line": 1, "offset": 12 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$METHODNAME": {
            "abstract_content": "bar",
            "end": { "col": 20, "line": 3, "offset": 116 },
            "start": { "col": 17, "line": 3, "offset": 113 }
          },
          "$REQ": {
            "abstract_content": "RequestParam",
            "end": { "col": 34, "line": 3, "offset": 130 },
            "start": { "col": 22, "line": 3, "offset": 118 }
          },
          "$SOURCE": {
            "abstract_content": "path",
            "end": { "col": 46, "line": 3, "offset": 142 },
            "start": { "col": 42, "line": 3, "offset": 138 }
          },
          "$TYPE": {
            "abstract_content": "String",
            "end": { "col": 41, "line": 3, "offset": 137 },
            "start": { "col": 35, "line": 3, "offset": 131 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/tainted-file-path.java",
      "start": { "col": 18, "line": 5, "offset": 199 }
    },
    {
      "check_id": "php.lang.security.injection.tainted-filename.tainted-filename",
      "end": { "col": 24, "line": 5, "offset": 81 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "$data",
              "location": {
                "end": { "col": 6, "line": 3, "offset": 12 },
                "path": "tests/rules/tainted-filename.php",
                "start": { "col": 1, "line": 3, "offset": 7 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 24, "line": 5, "offset": 81 },
                "path": "tests/rules/tainted-filename.php",
                "start": { "col": 19, "line": 5, "offset": 76 }
              },
              "$data"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 14, "line": 3, "offset": 20 },
                "path": "tests/rules/tainted-filename.php",
                "start": { "col": 9, "line": 3, "offset": 15 }
              },
              "$_GET"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "e76bb69096788186bfdc848ada7370296d36dc48f3a77ad384afb786f552ba5288505882e1fba0a2d8d82d12e23aea59bb1ae60df1faab9708dfc616cedd6eb8_0",
        "is_ignored": false,
        "lines": "hash_file('sha1', $data);",
        "message": "File name based on user input risks server-side request forgery.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"],
          "references": [
            "https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "5rUpro",
              "url": "https://semgrep.dev/playground/r/K3Tvjky/php.lang.security.injection.tainted-filename.tainted-filename",
              "version_id": "K3Tvjky"
            }
          },
          "shortlink": "https://sg.run/Ayqp",
          "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename",
          "subcategory": ["vuln"],
          "technology": ["php"],
          "vulnerability_class": ["Server-Side Request Forgery (SSRF)"]
        },
        "metavars": {
          "$ALGO": {
            "abstract_content": "'sha1'",
            "end": { "col": 17, "line": 5, "offset": 74 },
            "start": { "col": 11, "line": 5, "offset": 68 }
          },
          "$FILENAME": {
            "abstract_content": "$data",
            "end": { "col": 24, "line": 5, "offset": 81 },
            "propagated_value": {
              "svalue_abstract_content": "$_GET[\"data\"]",
              "svalue_end": { "col": 22, "line": 3, "offset": 28 },
              "svalue_start": { "col": 9, "line": 3, "offset": 15 }
            },
            "start": { "col": 19, "line": 5, "offset": 76 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/rules/tainted-filename.php",
      "start": { "col": 19, "line": 5, "offset": 76 }
    },
    {
      "check_id": "python.lang.security.audit.exec-detected.exec-detected",
      "end": { "col": 26, "line": 2, "offset": 54 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "cd62ff07992f175284a3746959ba48a4f0d855de65f5100a80e75cd5c06b85641a8e848a6cbfb0eefea3e95409c06c8250866e96d834617cae0973eb686876b3_0",
        "is_ignored": false,
        "lines": "safe_function(user_input)",
        "message": "Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "QrUzKv",
              "url": "https://semgrep.dev/playground/r/WrTW3zn/python.lang.security.audit.exec-detected.exec-detected",
              "version_id": "WrTW3zn"
            }
          },
          "shortlink": "https://sg.run/ndRX",
          "source": "https://semgrep.dev/r/python.lang.security.audit.exec-detected.exec-detected",
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
          "subcategory": ["audit"],
          "technology": ["python"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/synthesizing/import_as.py",
      "start": { "col": 1, "line": 2, "offset": 29 }
    },
    {
      "check_id": "go.lang.security.zip.path-traversal-inside-zip-extraction",
      "end": { "col": 3, "line": 42, "offset": 918 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "40669ad097ba2222f150ecac7ef3d3b198cc1d2954fc39d9c4bc4adcbd9d3d347043d302c288d122ab4363633917d689ec2f5788657d6c8451ef629b49d7050d_0",
        "is_ignored": false,
        "lines": "\treader, err := zip.OpenReader(\"example.zip\")\n\tif err := os.MkdirAll(target, 0750); err != nil {\n\t\treturn err\n\t}\n\tfor _, file := range reader.File {\n\t\tpath := filepath.Join(target, file.Name)\n\n\t\tif !strings.HasPrefix(path, filepath.Clean(target) + string(os.PathSeparator)){\n\t\t  return filenames, fmt.Errorf(\"%s is an illegal filepath\", path)\n\t\t}\n\n\t\tif file.FileInfo().IsDir() {\n\t\t\tos.MkdirAll(path, file.Mode())\n\t\t\tcontinue\n\t\t}\n\t\tfileReader, err := file.Open()\n\t\tdefer fileReader.Close()\n\t\t//OK:\n\t\ttargetFile, err := os.OpenFile(path, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, file.Mode())\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdefer targetFile.Close()\n\t\tif _, err := io.Copy(targetFile, fileReader); err != nil {\n\t\t\treturn err\n\t\t}\n\t}",
        "message": "File traversal when extracting zip archive",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdUkoR",
              "url": "https://semgrep.dev/playground/r/X0TQxjB/go.lang.security.zip.path-traversal-inside-zip-extraction",
              "version_id": "X0TQxjB"
            }
          },
          "shortlink": "https://sg.run/Av64",
          "source": "https://semgrep.dev/r/go.lang.security.zip.path-traversal-inside-zip-extraction",
          "source_rule_url": "https://github.com/securego/gosec/issues/205",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$ARCHIVE": {
            "abstract_content": "\"example.zip\"",
            "end": { "col": 45, "line": 16, "offset": 233 },
            "start": { "col": 32, "line": 16, "offset": 220 }
          },
          "$ERR": {
            "abstract_content": "err",
            "end": { "col": 13, "line": 16, "offset": 201 },
            "start": { "col": 10, "line": 16, "offset": 198 }
          },
          "$FILE": {
            "abstract_content": "file",
            "end": { "col": 13, "line": 20, "offset": 314 },
            "start": { "col": 9, "line": 20, "offset": 310 }
          },
          "$TARGET": {
            "abstract_content": "target",
            "end": { "col": 31, "line": 21, "offset": 368 },
            "start": { "col": 25, "line": 21, "offset": 362 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/go/zip-traversal.go",
      "start": { "col": 2, "line": 16, "offset": 190 }
    },
    {
      "check_id": "go.lang.security.decompression_bomb.potential-dos-via-decompression-bomb",
      "end": { "col": 47, "line": 39, "offset": 883 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "1ae2d21a52993849828b073cdb08a5bfaceed947f32645b4ab9eef1b8649047d84014b56b6f6dd2b21c76641d087a4ea70f4faf89d15f0d1c5a89832ce739905_0",
        "fix": "io.CopyN(io., io., 1024*1024*256)",
        "is_ignored": false,
        "lines": "\t\tif _, err := io.Copy(targetFile, fileReader); err != nil {",
        "message": "Detected a possible denial-of-service via a zip bomb attack. By limiting the max bytes read, you can mitigate this attack. `io.CopyN()` can specify a size. Refer to https://bomb.codes/ to learn more about this attack and other ways to mitigate it.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-400: Uncontrolled Resource Consumption"],
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "references": [
            "https://bomb.codes/",
            "https://golang.org/pkg/io/#CopyN",
            "https://github.com/securego/gosec/blob/master/rules/decompression-bomb.go"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "oqUeqn",
              "url": "https://semgrep.dev/playground/r/6xTvJlY/go.lang.security.decompression_bomb.potential-dos-via-decompression-bomb",
              "version_id": "6xTvJlY"
            }
          },
          "shortlink": "https://sg.run/RodK",
          "source": "https://semgrep.dev/r/go.lang.security.decompression_bomb.potential-dos-via-decompression-bomb",
          "source-rule-url": "https://github.com/securego/gosec",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["Denial-of-Service (DoS)"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/go/zip-traversal.go",
      "start": { "col": 16, "line": 39, "offset": 852 }
    },
    {
      "check_id": "go.lang.security.zip.path-traversal-inside-zip-extraction",
      "end": { "col": 3, "line": 71, "offset": 1608 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "40669ad097ba2222f150ecac7ef3d3b198cc1d2954fc39d9c4bc4adcbd9d3d347043d302c288d122ab4363633917d689ec2f5788657d6c8451ef629b49d7050d_1",
        "is_ignored": false,
        "lines": "\treader, err := zip.OpenReader(\"example.zip\")\n\tif err := os.MkdirAll(target, 0750); err != nil {\n\t\treturn err\n\t}\n\tfor _, file := range reader.File {\n\t\tpath := filepath.Join(target, file.Name)\n\n\t\t// No verification / sanitization this can \"slip\"\n\n\t\tif file.FileInfo().IsDir() {\n\t\t\tos.MkdirAll(path, file.Mode())\n\t\t\tcontinue\n\t\t}\n\t\tfileReader, err := file.Open()\n\t\tdefer fileReader.Close()\n\t\t//ERROR:\n\t\ttargetFile, err := os.OpenFile(path, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, file.Mode())\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdefer targetFile.Close()\n\t\tif _, err := io.Copy(targetFile, fileReader); err != nil {\n\t\t\treturn err\n\t\t}\n\t}",
        "message": "File traversal when extracting zip archive",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "zdUkoR",
              "url": "https://semgrep.dev/playground/r/X0TQxjB/go.lang.security.zip.path-traversal-inside-zip-extraction",
              "version_id": "X0TQxjB"
            }
          },
          "shortlink": "https://sg.run/Av64",
          "source": "https://semgrep.dev/r/go.lang.security.zip.path-traversal-inside-zip-extraction",
          "source_rule_url": "https://github.com/securego/gosec/issues/205",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["Path Traversal"]
        },
        "metavars": {
          "$ARCHIVE": {
            "abstract_content": "\"example.zip\"",
            "end": { "col": 45, "line": 47, "offset": 1022 },
            "start": { "col": 32, "line": 47, "offset": 1009 }
          },
          "$ERR": {
            "abstract_content": "err",
            "end": { "col": 13, "line": 47, "offset": 990 },
            "start": { "col": 10, "line": 47, "offset": 987 }
          },
          "$FILE": {
            "abstract_content": "file",
            "end": { "col": 13, "line": 51, "offset": 1103 },
            "start": { "col": 9, "line": 51, "offset": 1099 }
          },
          "$TARGET": {
            "abstract_content": "target",
            "end": { "col": 31, "line": 52, "offset": 1157 },
            "start": { "col": 25, "line": 52, "offset": 1151 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/go/zip-traversal.go",
      "start": { "col": 2, "line": 47, "offset": 979 }
    },
    {
      "check_id": "go.lang.security.decompression_bomb.potential-dos-via-decompression-bomb",
      "end": { "col": 47, "line": 68, "offset": 1573 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "1ae2d21a52993849828b073cdb08a5bfaceed947f32645b4ab9eef1b8649047d84014b56b6f6dd2b21c76641d087a4ea70f4faf89d15f0d1c5a89832ce739905_1",
        "fix": "io.CopyN(io., io., 1024*1024*256)",
        "is_ignored": false,
        "lines": "\t\tif _, err := io.Copy(targetFile, fileReader); err != nil {",
        "message": "Detected a possible denial-of-service via a zip bomb attack. By limiting the max bytes read, you can mitigate this attack. `io.CopyN()` can specify a size. Refer to https://bomb.codes/ to learn more about this attack and other ways to mitigate it.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-400: Uncontrolled Resource Consumption"],
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "references": [
            "https://bomb.codes/",
            "https://golang.org/pkg/io/#CopyN",
            "https://github.com/securego/gosec/blob/master/rules/decompression-bomb.go"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "oqUeqn",
              "url": "https://semgrep.dev/playground/r/6xTvJlY/go.lang.security.decompression_bomb.potential-dos-via-decompression-bomb",
              "version_id": "6xTvJlY"
            }
          },
          "shortlink": "https://sg.run/RodK",
          "source": "https://semgrep.dev/r/go.lang.security.decompression_bomb.potential-dos-via-decompression-bomb",
          "source-rule-url": "https://github.com/securego/gosec",
          "subcategory": ["audit"],
          "technology": ["go"],
          "vulnerability_class": ["Denial-of-Service (DoS)"]
        },
        "metavars": {},
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/go/zip-traversal.go",
      "start": { "col": 16, "line": 68, "offset": 1542 }
    },
    {
      "check_id": "javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage",
      "end": { "col": 22, "line": 2, "offset": 56 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "3e80f572fb61ad164d6ac1626cfc3298d06c4b459a7ef63981451a687f685873bb6b1087288c3f2824ef9c2a515fd03abadc5399700662aca21241be7c67c48e_0",
        "is_ignored": false,
        "lines": "const app = express()",
        "message": "A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.npmjs.com/package/csurf",
            "https://www.npmjs.com/package/csrf",
            "https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "wdUKEq",
              "url": "https://semgrep.dev/playground/r/5PTdAbp/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage",
              "version_id": "5PTdAbp"
            }
          },
          "shortlink": "https://sg.run/BxzR",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage",
          "subcategory": ["audit"],
          "technology": ["javascript", "typescript", "express"],
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]
        },
        "metavars": {
          "$APP": {
            "abstract_content": "app",
            "end": { "col": 10, "line": 2, "offset": 44 },
            "start": { "col": 7, "line": 2, "offset": 41 }
          },
          "$EXPRESS": {
            "abstract_content": "express",
            "end": { "col": 20, "line": 2, "offset": 54 },
            "start": { "col": 13, "line": 2, "offset": 47 }
          }
        },
        "severity": "INFO",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/await.js",
      "start": { "col": 7, "line": 2, "offset": 41 }
    },
    {
      "check_id": "javascript.express.security.audit.xss.direct-response-write.direct-response-write",
      "end": { "col": 79, "line": 10, "offset": 322 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 79, "line": 10, "offset": 322 },
                "path": "tests/tainting_rules/js/await.js",
                "start": { "col": 12, "line": 10, "offset": 255 }
              },
              "\"SELECT * FROM `users`\" + \" WHERE id = '\" + req.query.message + \"'\""
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 65, "line": 10, "offset": 308 },
                "path": "tests/tainting_rules/js/await.js",
                "start": { "col": 56, "line": 10, "offset": 299 }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "c14d24f5286e03c099fe6d8160a99781537526bb6e48ef35dd19aee152eb0b795e166c188451c80a25d19020f1b3a657754f01e0f730bcef90b0306eb9dc291b_0",
        "is_ignored": false,
        "lines": "  res.send(\"SELECT * FROM `users`\" + \" WHERE id = '\" + req.query.message + \"'\")",
        "message": "Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "3qUPA1",
              "url": "https://semgrep.dev/playground/r/rxTyLQd/javascript.express.security.audit.xss.direct-response-write.direct-response-write",
              "version_id": "rxTyLQd"
            }
          },
          "shortlink": "https://sg.run/vzGl",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write",
          "subcategory": ["vuln"],
          "technology": ["express"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "get",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$APP": {
            "abstract_content": "app",
            "end": { "col": 4, "line": 8, "offset": 203 },
            "propagated_value": {
              "svalue_abstract_content": "express()",
              "svalue_end": { "col": 22, "line": 2, "offset": 56 },
              "svalue_start": { "col": 13, "line": 2, "offset": 47 }
            },
            "start": { "col": 1, "line": 8, "offset": 200 }
          },
          "$ARG": {
            "abstract_content": "\"SELECT * FROM `users`\"+\" WHERE id = '\"+req.query.message+\"'\"",
            "end": { "col": 79, "line": 10, "offset": 322 },
            "start": { "col": 12, "line": 10, "offset": 255 }
          },
          "$METHOD": {
            "abstract_content": "get",
            "end": { "col": 8, "line": 8, "offset": 207 },
            "start": { "col": 5, "line": 8, "offset": 204 }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": { "col": 59, "line": 10, "offset": 302 },
            "start": { "col": 56, "line": 10, "offset": 299 }
          },
          "$RES": {
            "abstract_content": "res",
            "end": { "col": 27, "line": 8, "offset": 226 },
            "start": { "col": 24, "line": 8, "offset": 223 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/await.js",
      "start": { "col": 12, "line": 10, "offset": 255 }
    },
    {
      "check_id": "javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 73, "line": 10, "offset": 316 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 73, "line": 10, "offset": 316 },
                "path": "tests/tainting_rules/js/await.js",
                "start": { "col": 56, "line": 10, "offset": 299 }
              },
              "req.query.message"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 65, "line": 10, "offset": 308 },
                "path": "tests/tainting_rules/js/await.js",
                "start": { "col": 56, "line": 10, "offset": 299 }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "2768b3af35d469788dc9f8355714823901f585ace5cbe0d433d6b29f4e8d4950f68026bd414af5f8219e05394f1e542b4ca533410bdd38649af634f642f04176_0",
        "is_ignored": false,
        "lines": "  res.send(\"SELECT * FROM `users`\" + \" WHERE id = '\" + req.query.message + \"'\")",
        "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as Sequelize which will protect your queries.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/SQL_Injection"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUNpr",
              "url": "https://semgrep.dev/playground/r/DkT6nrY/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "DkT6nrY"
            }
          },
          "shortlink": "https://sg.run/66ZL",
          "source": "https://semgrep.dev/r/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["express"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "get",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$APP": {
            "abstract_content": "app",
            "end": { "col": 4, "line": 8, "offset": 203 },
            "propagated_value": {
              "svalue_abstract_content": "express()",
              "svalue_end": { "col": 22, "line": 2, "offset": 56 },
              "svalue_start": { "col": 13, "line": 2, "offset": 47 }
            },
            "start": { "col": 1, "line": 8, "offset": 200 }
          },
          "$EXPR": {
            "abstract_content": "req.query.message",
            "end": { "col": 73, "line": 10, "offset": 316 },
            "start": { "col": 56, "line": 10, "offset": 299 }
          },
          "$METHOD": {
            "abstract_content": "get",
            "end": { "col": 8, "line": 8, "offset": 207 },
            "start": { "col": 5, "line": 8, "offset": 204 }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": { "col": 59, "line": 10, "offset": 302 },
            "start": { "col": 56, "line": 10, "offset": 299 }
          },
          "$RES": {
            "abstract_content": "res",
            "end": { "col": 27, "line": 8, "offset": 226 },
            "start": { "col": 24, "line": 8, "offset": 223 }
          },
          "$SQLSTR": {
            "abstract_content": "\"SELECT * FROM `users`\"",
            "end": { "col": 35, "line": 10, "offset": 278 },
            "start": { "col": 12, "line": 10, "offset": 255 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/await.js",
      "start": { "col": 56, "line": 10, "offset": 299 }
    },
    {
      "check_id": "javascript.express.security.audit.xss.direct-response-write.direct-response-write",
      "end": { "col": 85, "line": 15, "offset": 457 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 85, "line": 15, "offset": 457 },
                "path": "tests/tainting_rules/js/await.js",
                "start": { "col": 18, "line": 15, "offset": 390 }
              },
              "\"SELECT * FROM `users`\" + \" WHERE id = '\" + req.query.message + \"'\""
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 71, "line": 15, "offset": 443 },
                "path": "tests/tainting_rules/js/await.js",
                "start": { "col": 62, "line": 15, "offset": 434 }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "c14d24f5286e03c099fe6d8160a99781537526bb6e48ef35dd19aee152eb0b795e166c188451c80a25d19020f1b3a657754f01e0f730bcef90b0306eb9dc291b_1",
        "is_ignored": false,
        "lines": "  await res.send(\"SELECT * FROM `users`\" + \" WHERE id = '\" + req.query.message + \"'\")",
        "message": "Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "3qUPA1",
              "url": "https://semgrep.dev/playground/r/rxTyLQd/javascript.express.security.audit.xss.direct-response-write.direct-response-write",
              "version_id": "rxTyLQd"
            }
          },
          "shortlink": "https://sg.run/vzGl",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write",
          "subcategory": ["vuln"],
          "technology": ["express"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "get",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$APP": {
            "abstract_content": "app",
            "end": { "col": 4, "line": 13, "offset": 331 },
            "propagated_value": {
              "svalue_abstract_content": "express()",
              "svalue_end": { "col": 22, "line": 2, "offset": 56 },
              "svalue_start": { "col": 13, "line": 2, "offset": 47 }
            },
            "start": { "col": 1, "line": 13, "offset": 328 }
          },
          "$ARG": {
            "abstract_content": "\"SELECT * FROM `users`\"+\" WHERE id = '\"+req.query.message+\"'\"",
            "end": { "col": 85, "line": 15, "offset": 457 },
            "start": { "col": 18, "line": 15, "offset": 390 }
          },
          "$METHOD": {
            "abstract_content": "get",
            "end": { "col": 8, "line": 13, "offset": 335 },
            "start": { "col": 5, "line": 13, "offset": 332 }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": { "col": 65, "line": 15, "offset": 437 },
            "start": { "col": 62, "line": 15, "offset": 434 }
          },
          "$RES": {
            "abstract_content": "res",
            "end": { "col": 28, "line": 13, "offset": 355 },
            "start": { "col": 25, "line": 13, "offset": 352 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/await.js",
      "start": { "col": 18, "line": 15, "offset": 390 }
    },
    {
      "check_id": "javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
      "end": { "col": 79, "line": 15, "offset": 451 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 79, "line": 15, "offset": 451 },
                "path": "tests/tainting_rules/js/await.js",
                "start": { "col": 62, "line": 15, "offset": 434 }
              },
              "req.query.message"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 71, "line": 15, "offset": 443 },
                "path": "tests/tainting_rules/js/await.js",
                "start": { "col": 62, "line": 15, "offset": 434 }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "2768b3af35d469788dc9f8355714823901f585ace5cbe0d433d6b29f4e8d4950f68026bd414af5f8219e05394f1e542b4ca533410bdd38649af634f642f04176_1",
        "is_ignored": false,
        "lines": "  await res.send(\"SELECT * FROM `users`\" + \" WHERE id = '\" + req.query.message + \"'\")",
        "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as Sequelize which will protect your queries.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/SQL_Injection"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "NbUNpr",
              "url": "https://semgrep.dev/playground/r/DkT6nrY/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "DkT6nrY"
            }
          },
          "shortlink": "https://sg.run/66ZL",
          "source": "https://semgrep.dev/r/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": ["vuln"],
          "technology": ["express"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "get",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$APP": {
            "abstract_content": "app",
            "end": { "col": 4, "line": 13, "offset": 331 },
            "propagated_value": {
              "svalue_abstract_content": "express()",
              "svalue_end": { "col": 22, "line": 2, "offset": 56 },
              "svalue_start": { "col": 13, "line": 2, "offset": 47 }
            },
            "start": { "col": 1, "line": 13, "offset": 328 }
          },
          "$EXPR": {
            "abstract_content": "req.query.message",
            "end": { "col": 79, "line": 15, "offset": 451 },
            "start": { "col": 62, "line": 15, "offset": 434 }
          },
          "$METHOD": {
            "abstract_content": "get",
            "end": { "col": 8, "line": 13, "offset": 335 },
            "start": { "col": 5, "line": 13, "offset": 332 }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": { "col": 65, "line": 15, "offset": 437 },
            "start": { "col": 62, "line": 15, "offset": 434 }
          },
          "$RES": {
            "abstract_content": "res",
            "end": { "col": 28, "line": 13, "offset": 355 },
            "start": { "col": 25, "line": 13, "offset": 352 }
          },
          "$SQLSTR": {
            "abstract_content": "\"SELECT * FROM `users`\"",
            "end": { "col": 41, "line": 15, "offset": 413 },
            "start": { "col": 18, "line": 15, "offset": 390 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/await.js",
      "start": { "col": 62, "line": 15, "offset": 434 }
    },
    {
      "check_id": "javascript.angular.security.detect-angular-trust-as-method.detect-angular-trust-as-method",
      "end": { "col": 36, "line": 6, "offset": 198 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "value",
              "location": {
                "end": { "col": 11, "line": 4, "offset": 134 },
                "path": "tests/tainting_rules/js/nested_function.js",
                "start": { "col": 6, "line": 4, "offset": 129 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 36, "line": 6, "offset": 198 },
                "path": "tests/tainting_rules/js/nested_function.js",
                "start": { "col": 6, "line": 6, "offset": 168 }
              },
              "$sce.trustAs($sce.HTML, value)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 25, "line": 4, "offset": 148 },
                "path": "tests/tainting_rules/js/nested_function.js",
                "start": { "col": 14, "line": 4, "offset": 137 }
              },
              "$scope.html"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "dae7899d20069c689b14a49e45730ce247d9b3a630776c8a5600b3392122ffec9440af40c619c0da06f985714ec31ee27bbbcb06cd1200b169df7aa07072c837_0",
        "is_ignored": false,
        "lines": "     $sce.trustAs($sce.HTML, value);",
        "message": "The use of $sce.trustAs can be dangerous if unsanitized user input flows through this API.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://docs.angularjs.org/api/ng/service/$sce",
            "https://owasp.org/www-chapter-london/assets/slides/OWASPLondon20170727_AngularJS.pdf"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "gxU1QX",
              "url": "https://semgrep.dev/playground/r/0bTLlno/javascript.angular.security.detect-angular-trust-as-method.detect-angular-trust-as-method",
              "version_id": "0bTLlno"
            }
          },
          "shortlink": "https://sg.run/OPW2",
          "source": "https://semgrep.dev/r/javascript.angular.security.detect-angular-trust-as-method.detect-angular-trust-as-method",
          "subcategory": ["vuln"],
          "technology": ["angular"],
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"]
        },
        "metavars": {
          "$X": {
            "abstract_content": "html",
            "end": { "col": 25, "line": 4, "offset": 148 },
            "start": { "col": 21, "line": 4, "offset": 144 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/nested_function.js",
      "start": { "col": 6, "line": 6, "offset": 168 }
    },
    {
      "check_id": "javascript.jsonwebtoken.security.audit.jwt-decode-without-verify.jwt-decode-without-verify",
      "end": { "col": 28, "line": 6, "offset": 155 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c98da2ee9158b3e180d44c39bad4370f52538fcd682552896c4e3c3ebabc474269ec2ea945840473929fc6f0e9e3d8667a9aca71617b8dd9cfa3e4eecc5b2f92_0",
        "is_ignored": false,
        "lines": "if (jwt.decode(token, true).param === true) {",
        "message": "Detected the decoding of a JWT token without a verify step. JWT tokens must be verified before use, otherwise the token's integrity is unknown. This means a malicious actor could forge a JWT token with any claims. Call '.verify()' before using the token.",
        "metadata": {
          "asvs": {
            "control_id": "3.5.3 Insecue Stateless Session Tokens",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v35-token-based-session-management",
            "section": "V3: Session Management Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-345: Insufficient Verification of Data Authenticity"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUbL3",
              "url": "https://semgrep.dev/playground/r/DkT6nrZ/javascript.jsonwebtoken.security.audit.jwt-decode-without-verify.jwt-decode-without-verify",
              "version_id": "DkT6nrZ"
            }
          },
          "shortlink": "https://sg.run/J9YP",
          "source": "https://semgrep.dev/r/javascript.jsonwebtoken.security.audit.jwt-decode-without-verify.jwt-decode-without-verify",
          "source-rule-url": "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/",
          "subcategory": ["audit"],
          "technology": ["jwt"],
          "vulnerability_class": ["Improper Authentication"]
        },
        "metavars": {
          "$JWT": {
            "abstract_content": "jwt",
            "end": { "col": 8, "line": 6, "offset": 135 },
            "start": { "col": 5, "line": 6, "offset": 132 }
          },
          "$TOKEN": {
            "abstract_content": "token",
            "end": { "col": 21, "line": 6, "offset": 148 },
            "propagated_value": {
              "svalue_abstract_content": "getToken()",
              "svalue_end": { "col": 19, "line": 4, "offset": 90 },
              "svalue_start": { "col": 9, "line": 4, "offset": 80 }
            },
            "start": { "col": 16, "line": 6, "offset": 143 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/sanitized_by_side_effect.js",
      "start": { "col": 5, "line": 6, "offset": 132 }
    },
    {
      "check_id": "javascript.jsonwebtoken.security.audit.jwt-decode-without-verify.jwt-decode-without-verify",
      "end": { "col": 32, "line": 31, "offset": 738 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c98da2ee9158b3e180d44c39bad4370f52538fcd682552896c4e3c3ebabc474269ec2ea945840473929fc6f0e9e3d8667a9aca71617b8dd9cfa3e4eecc5b2f92_1",
        "is_ignored": false,
        "lines": "    if (jwt.decode(token, true).param === true) {",
        "message": "Detected the decoding of a JWT token without a verify step. JWT tokens must be verified before use, otherwise the token's integrity is unknown. This means a malicious actor could forge a JWT token with any claims. Call '.verify()' before using the token.",
        "metadata": {
          "asvs": {
            "control_id": "3.5.3 Insecue Stateless Session Tokens",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v35-token-based-session-management",
            "section": "V3: Session Management Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-345: Insufficient Verification of Data Authenticity"],
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUbL3",
              "url": "https://semgrep.dev/playground/r/DkT6nrZ/javascript.jsonwebtoken.security.audit.jwt-decode-without-verify.jwt-decode-without-verify",
              "version_id": "DkT6nrZ"
            }
          },
          "shortlink": "https://sg.run/J9YP",
          "source": "https://semgrep.dev/r/javascript.jsonwebtoken.security.audit.jwt-decode-without-verify.jwt-decode-without-verify",
          "source-rule-url": "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/",
          "subcategory": ["audit"],
          "technology": ["jwt"],
          "vulnerability_class": ["Improper Authentication"]
        },
        "metavars": {
          "$JWT": {
            "abstract_content": "jwt",
            "end": { "col": 12, "line": 31, "offset": 718 },
            "start": { "col": 9, "line": 31, "offset": 715 }
          },
          "$TOKEN": {
            "abstract_content": "token",
            "end": { "col": 25, "line": 31, "offset": 731 },
            "start": { "col": 20, "line": 31, "offset": 726 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/sanitized_by_side_effect.js",
      "start": { "col": 9, "line": 31, "offset": 715 }
    },
    {
      "check_id": "javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage",
      "end": { "col": 22, "line": 3, "offset": 93 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "ff8ab3fbc708f0ba9c45f83a621801b22b4092d46847f8bc69518d506123a13d45d77191ae70477b3c70087321b64b410d6b51aab8d55416581acd26551c77be_0",
        "is_ignored": false,
        "lines": "const app = express();",
        "message": "A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.npmjs.com/package/csurf",
            "https://www.npmjs.com/package/csrf",
            "https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "wdUKEq",
              "url": "https://semgrep.dev/playground/r/5PTdAbp/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage",
              "version_id": "5PTdAbp"
            }
          },
          "shortlink": "https://sg.run/BxzR",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage",
          "subcategory": ["audit"],
          "technology": ["javascript", "typescript", "express"],
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]
        },
        "metavars": {
          "$APP": {
            "abstract_content": "app",
            "end": { "col": 10, "line": 3, "offset": 81 },
            "start": { "col": 7, "line": 3, "offset": 78 }
          },
          "$EXPRESS": {
            "abstract_content": "express",
            "end": { "col": 20, "line": 3, "offset": 91 },
            "start": { "col": 13, "line": 3, "offset": 84 }
          }
        },
        "severity": "INFO",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
      "start": { "col": 7, "line": 3, "offset": 78 }
    },
    {
      "check_id": "javascript.express.security.express-sandbox-injection.express-sandbox-code-injection",
      "end": { "col": 50, "line": 11, "offset": 270 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 50, "line": 11, "offset": 270 },
                "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
                "start": { "col": 5, "line": 11, "offset": 225 }
              },
              "s.run('lol(' + req.query.userInput + ')', cb)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 29, "line": 11, "offset": 249 },
                "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
                "start": { "col": 20, "line": 11, "offset": 240 }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "ddc7a7ce5e93f23c3e7d574aa2e47c0aefde0226d8357b118749f8b2a953fa547bbc4237693e246ec8c4ecf0093c55721bedd6edd5dfe5bdb04911dd05b48f3c_0",
        "is_ignored": false,
        "lines": "    s.run('lol(' + req.query.userInput + ')', cb);",
        "message": "Make sure that unverified user data can not reach `sandbox`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": ["A03:2021 - Injection"],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Injection_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "j2UvXB",
              "url": "https://semgrep.dev/playground/r/PkTJ1PB/javascript.express.security.express-sandbox-injection.express-sandbox-code-injection",
              "version_id": "PkTJ1PB"
            }
          },
          "shortlink": "https://sg.run/KlwL",
          "source": "https://semgrep.dev/r/javascript.express.security.express-sandbox-injection.express-sandbox-code-injection",
          "subcategory": ["vuln"],
          "technology": ["express"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "get",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$APP": {
            "abstract_content": "app",
            "end": { "col": 4, "line": 8, "offset": 142 },
            "propagated_value": {
              "svalue_abstract_content": "express()",
              "svalue_end": { "col": 22, "line": 3, "offset": 93 },
              "svalue_start": { "col": 13, "line": 3, "offset": 84 }
            },
            "start": { "col": 1, "line": 8, "offset": 139 }
          },
          "$METHOD": {
            "abstract_content": "get",
            "end": { "col": 8, "line": 8, "offset": 146 },
            "start": { "col": 5, "line": 8, "offset": 143 }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": { "col": 23, "line": 11, "offset": 243 },
            "start": { "col": 20, "line": 11, "offset": 240 }
          },
          "$RES": {
            "abstract_content": "res",
            "end": { "col": 37, "line": 8, "offset": 175 },
            "start": { "col": 34, "line": 8, "offset": 172 }
          },
          "$S": {
            "abstract_content": "s",
            "end": { "col": 6, "line": 11, "offset": 226 },
            "propagated_value": {
              "svalue_abstract_content": "new Sandbox()",
              "svalue_end": { "col": 28, "line": 9, "offset": 206 },
              "svalue_start": { "col": 15, "line": 9, "offset": 193 }
            },
            "start": { "col": 5, "line": 11, "offset": 225 }
          },
          "$SANDBOX": {
            "abstract_content": "Sandbox",
            "end": { "col": 26, "line": 9, "offset": 204 },
            "start": { "col": 19, "line": 9, "offset": 197 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
      "start": { "col": 5, "line": 11, "offset": 225 }
    },
    {
      "check_id": "javascript.sandbox.security.audit.sandbox-code-injection.sandbox-code-injection",
      "end": { "col": 51, "line": 11, "offset": 271 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "ff721ac48f96f0fb1fc4193a6db282f9c7515b53079a07ec2fb6f08bbcaff0d5c87a2d08db77b86f3a09694118edf3df1b2d1e140e024cf52e225142203a4083_0",
        "is_ignored": false,
        "lines": "    s.run('lol(' + req.query.userInput + ')', cb);",
        "message": "Make sure that unverified user data can not reach `sandbox`.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUbk3",
              "url": "https://semgrep.dev/playground/r/8KTQ9l5/javascript.sandbox.security.audit.sandbox-code-injection.sandbox-code-injection",
              "version_id": "8KTQ9l5"
            }
          },
          "shortlink": "https://sg.run/J9BP",
          "source": "https://semgrep.dev/r/javascript.sandbox.security.audit.sandbox-code-injection.sandbox-code-injection",
          "subcategory": ["audit"],
          "technology": ["sandbox"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$CODE": {
            "abstract_content": "'lol('+req.query.userInput+')'",
            "end": { "col": 45, "line": 11, "offset": 265 },
            "start": { "col": 11, "line": 11, "offset": 231 }
          },
          "$S": {
            "abstract_content": "s",
            "end": { "col": 6, "line": 11, "offset": 226 },
            "propagated_value": {
              "svalue_abstract_content": "new Sandbox()",
              "svalue_end": { "col": 28, "line": 9, "offset": 206 },
              "svalue_start": { "col": 15, "line": 9, "offset": 193 }
            },
            "start": { "col": 5, "line": 11, "offset": 225 }
          },
          "$SANDBOX": {
            "abstract_content": "Sandbox",
            "end": { "col": 26, "line": 9, "offset": 204 },
            "start": { "col": 19, "line": 9, "offset": 197 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
      "start": { "col": 5, "line": 11, "offset": 225 }
    },
    {
      "check_id": "javascript.express.security.express-sandbox-injection.express-sandbox-code-injection",
      "end": { "col": 20, "line": 19, "offset": 456 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "code",
              "location": {
                "end": { "col": 13, "line": 17, "offset": 386 },
                "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
                "start": { "col": 9, "line": 17, "offset": 382 }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 20, "line": 19, "offset": 456 },
                "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
                "start": { "col": 5, "line": 19, "offset": 441 }
              },
              "s.run(code, cb)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 34, "line": 17, "offset": 407 },
                "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
                "start": { "col": 25, "line": 17, "offset": 398 }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "ddc7a7ce5e93f23c3e7d574aa2e47c0aefde0226d8357b118749f8b2a953fa547bbc4237693e246ec8c4ecf0093c55721bedd6edd5dfe5bdb04911dd05b48f3c_1",
        "is_ignored": false,
        "lines": "    s.run(code, cb);",
        "message": "Make sure that unverified user data can not reach `sandbox`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": ["A03:2021 - Injection"],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Injection_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "j2UvXB",
              "url": "https://semgrep.dev/playground/r/PkTJ1PB/javascript.express.security.express-sandbox-injection.express-sandbox-code-injection",
              "version_id": "PkTJ1PB"
            }
          },
          "shortlink": "https://sg.run/KlwL",
          "source": "https://semgrep.dev/r/javascript.express.security.express-sandbox-injection.express-sandbox-code-injection",
          "subcategory": ["vuln"],
          "technology": ["express"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "get",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$APP": {
            "abstract_content": "app",
            "end": { "col": 4, "line": 15, "offset": 308 },
            "propagated_value": {
              "svalue_abstract_content": "express()",
              "svalue_end": { "col": 22, "line": 3, "offset": 93 },
              "svalue_start": { "col": 13, "line": 3, "offset": 84 }
            },
            "start": { "col": 1, "line": 15, "offset": 305 }
          },
          "$METHOD": {
            "abstract_content": "get",
            "end": { "col": 8, "line": 15, "offset": 312 },
            "start": { "col": 5, "line": 15, "offset": 309 }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": { "col": 28, "line": 17, "offset": 401 },
            "start": { "col": 25, "line": 17, "offset": 398 }
          },
          "$RES": {
            "abstract_content": "res",
            "end": { "col": 37, "line": 15, "offset": 341 },
            "start": { "col": 34, "line": 15, "offset": 338 }
          },
          "$S": {
            "abstract_content": "s",
            "end": { "col": 6, "line": 19, "offset": 442 },
            "propagated_value": {
              "svalue_abstract_content": "new Sandbox()",
              "svalue_end": { "col": 28, "line": 16, "offset": 372 },
              "svalue_start": { "col": 15, "line": 16, "offset": 359 }
            },
            "start": { "col": 5, "line": 19, "offset": 441 }
          },
          "$SANDBOX": {
            "abstract_content": "Sandbox",
            "end": { "col": 26, "line": 16, "offset": 370 },
            "start": { "col": 19, "line": 16, "offset": 363 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
      "start": { "col": 5, "line": 19, "offset": 441 }
    },
    {
      "check_id": "javascript.sandbox.security.audit.sandbox-code-injection.sandbox-code-injection",
      "end": { "col": 21, "line": 19, "offset": 457 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "a1c47109f38d078ace5789ccabd1916912112f9ec2806e4e4d736eb3cdca0a17098e45108181ea7ce5a79998c8679d8f6af52aafbc4a239f3a8573df75596e03_0",
        "is_ignored": false,
        "lines": "    s.run(code, cb);",
        "message": "Make sure that unverified user data can not reach `sandbox`.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUbk3",
              "url": "https://semgrep.dev/playground/r/8KTQ9l5/javascript.sandbox.security.audit.sandbox-code-injection.sandbox-code-injection",
              "version_id": "8KTQ9l5"
            }
          },
          "shortlink": "https://sg.run/J9BP",
          "source": "https://semgrep.dev/r/javascript.sandbox.security.audit.sandbox-code-injection.sandbox-code-injection",
          "subcategory": ["audit"],
          "technology": ["sandbox"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$CODE": {
            "abstract_content": "code",
            "end": { "col": 15, "line": 19, "offset": 451 },
            "propagated_value": {
              "svalue_abstract_content": "'lol('+req.query.userInput+')'",
              "svalue_end": { "col": 50, "line": 17, "offset": 423 },
              "svalue_start": { "col": 16, "line": 17, "offset": 389 }
            },
            "start": { "col": 11, "line": 19, "offset": 447 }
          },
          "$S": {
            "abstract_content": "s",
            "end": { "col": 6, "line": 19, "offset": 442 },
            "propagated_value": {
              "svalue_abstract_content": "new Sandbox()",
              "svalue_end": { "col": 28, "line": 16, "offset": 372 },
              "svalue_start": { "col": 15, "line": 16, "offset": 359 }
            },
            "start": { "col": 5, "line": 19, "offset": 441 }
          },
          "$SANDBOX": {
            "abstract_content": "Sandbox",
            "end": { "col": 26, "line": 16, "offset": 370 },
            "start": { "col": 19, "line": 16, "offset": 363 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
      "start": { "col": 5, "line": 19, "offset": 441 }
    },
    {
      "check_id": "javascript.express.security.express-sandbox-injection.express-sandbox-code-injection",
      "end": { "col": 45, "line": 26, "offset": 617 },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": { "col": 45, "line": 26, "offset": 617 },
                "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
                "start": { "col": 5, "line": 26, "offset": 577 }
              },
              "s.run(`lol(${req.query.userInput})`, cb)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": { "col": 27, "line": 26, "offset": 599 },
                "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
                "start": { "col": 18, "line": 26, "offset": 590 }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "ddc7a7ce5e93f23c3e7d574aa2e47c0aefde0226d8357b118749f8b2a953fa547bbc4237693e246ec8c4ecf0093c55721bedd6edd5dfe5bdb04911dd05b48f3c_2",
        "is_ignored": false,
        "lines": "    s.run(`lol(${req.query.userInput})`, cb);",
        "message": "Make sure that unverified user data can not reach `sandbox`.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": ["A03:2021 - Injection"],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Injection_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "j2UvXB",
              "url": "https://semgrep.dev/playground/r/PkTJ1PB/javascript.express.security.express-sandbox-injection.express-sandbox-code-injection",
              "version_id": "PkTJ1PB"
            }
          },
          "shortlink": "https://sg.run/KlwL",
          "source": "https://semgrep.dev/r/javascript.express.security.express-sandbox-injection.express-sandbox-code-injection",
          "subcategory": ["vuln"],
          "technology": ["express"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$1": {
            "abstract_content": "get",
            "end": { "col": 4, "line": 1, "offset": 3 },
            "start": { "col": 1, "line": 1, "offset": 0 }
          },
          "$APP": {
            "abstract_content": "app",
            "end": { "col": 4, "line": 23, "offset": 494 },
            "propagated_value": {
              "svalue_abstract_content": "express()",
              "svalue_end": { "col": 22, "line": 3, "offset": 93 },
              "svalue_start": { "col": 13, "line": 3, "offset": 84 }
            },
            "start": { "col": 1, "line": 23, "offset": 491 }
          },
          "$METHOD": {
            "abstract_content": "get",
            "end": { "col": 8, "line": 23, "offset": 498 },
            "start": { "col": 5, "line": 23, "offset": 495 }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": { "col": 21, "line": 26, "offset": 593 },
            "start": { "col": 18, "line": 26, "offset": 590 }
          },
          "$RES": {
            "abstract_content": "res",
            "end": { "col": 37, "line": 23, "offset": 527 },
            "start": { "col": 34, "line": 23, "offset": 524 }
          },
          "$S": {
            "abstract_content": "s",
            "end": { "col": 6, "line": 26, "offset": 578 },
            "propagated_value": {
              "svalue_abstract_content": "new Sandbox()",
              "svalue_end": { "col": 28, "line": 24, "offset": 558 },
              "svalue_start": { "col": 15, "line": 24, "offset": 545 }
            },
            "start": { "col": 5, "line": 26, "offset": 577 }
          },
          "$SANDBOX": {
            "abstract_content": "Sandbox",
            "end": { "col": 26, "line": 24, "offset": 556 },
            "start": { "col": 19, "line": 24, "offset": 549 }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
      "start": { "col": 5, "line": 26, "offset": 577 }
    },
    {
      "check_id": "javascript.sandbox.security.audit.sandbox-code-injection.sandbox-code-injection",
      "end": { "col": 46, "line": 26, "offset": 618 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "fff29c84631dcc0cd020926a3207058ad71a4199f10bc446393b99002818a61887796c7c077102c71481bab6032b49534773ec526f691bb91ef1b93d1b1b8b47_0",
        "is_ignored": false,
        "lines": "    s.run(`lol(${req.query.userInput})`, cb);",
        "message": "Make sure that unverified user data can not reach `sandbox`.",
        "metadata": {
          "category": "security",
          "confidence": "LOW",
          "cwe": [
            "CWE-94: Improper Control of Generation of Code ('Code Injection')"
          ],
          "cwe2022-top25": true,
          "impact": "LOW",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "KxUbk3",
              "url": "https://semgrep.dev/playground/r/8KTQ9l5/javascript.sandbox.security.audit.sandbox-code-injection.sandbox-code-injection",
              "version_id": "8KTQ9l5"
            }
          },
          "shortlink": "https://sg.run/J9BP",
          "source": "https://semgrep.dev/r/javascript.sandbox.security.audit.sandbox-code-injection.sandbox-code-injection",
          "subcategory": ["audit"],
          "technology": ["sandbox"],
          "vulnerability_class": ["Code Injection"]
        },
        "metavars": {
          "$CODE": {
            "abstract_content": "`lol(req.query.userInput)",
            "end": { "col": 39, "line": 26, "offset": 611 },
            "start": { "col": 11, "line": 26, "offset": 583 }
          },
          "$S": {
            "abstract_content": "s",
            "end": { "col": 6, "line": 26, "offset": 578 },
            "propagated_value": {
              "svalue_abstract_content": "new Sandbox()",
              "svalue_end": { "col": 28, "line": 24, "offset": 558 },
              "svalue_start": { "col": 15, "line": 24, "offset": 545 }
            },
            "start": { "col": 5, "line": 26, "offset": 577 }
          },
          "$SANDBOX": {
            "abstract_content": "Sandbox",
            "end": { "col": 26, "line": 24, "offset": 556 },
            "start": { "col": 19, "line": 24, "offset": 549 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/js/simpl_nodejs_eval.js",
      "start": { "col": 5, "line": 26, "offset": 577 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 25, "line": 9, "offset": 262 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "e16aa9d92388990a933a4649cd7adf6e14061c74b6195b2f1fbd40de53544640dbaf5048f27c0be9949f09a876599076851eb6139a2a1b2dfb550e6c98f018ee_0",
        "is_ignored": false,
        "lines": "    url = request.headers.get('referrer')\n    print(\"something\")\n    #ERROR:\n    return redirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 6, "offset": 168 },
            "start": { "col": 5, "line": 6, "offset": 165 }
          },
          "$FUNC": {
            "abstract_content": "unsafe",
            "end": { "col": 11, "line": 5, "offset": 150 },
            "start": { "col": 5, "line": 5, "offset": 144 }
          },
          "$W": {
            "abstract_content": "headers",
            "end": { "col": 26, "line": 6, "offset": 186 },
            "start": { "col": 19, "line": 6, "offset": 179 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/python/simpl_django_redirect.py",
      "start": { "col": 5, "line": 6, "offset": 165 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 37, "line": 19, "offset": 452 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "48c5bb9007a0e0b8b9b122ee7cba85d0a7521ba833c46ebe0a9faf82c2535ec3cc3541046f59e764271003d9f91b015f7ab0e2f8717e85d3dd6dade53b8633d8_0",
        "is_ignored": false,
        "lines": "    url = request.POST.get(\"url\")\n    #ERROR:\n    return HttpResponseRedirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 17, "offset": 377 },
            "start": { "col": 5, "line": 17, "offset": 374 }
          },
          "$FUNC": {
            "abstract_content": "unsafe2",
            "end": { "col": 12, "line": 16, "offset": 359 },
            "start": { "col": 5, "line": 16, "offset": 352 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 23, "line": 17, "offset": 392 },
            "start": { "col": 19, "line": 17, "offset": 388 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/python/simpl_django_redirect.py",
      "start": { "col": 5, "line": 17, "offset": 374 }
    },
    {
      "check_id": "python.django.security.injection.open-redirect.open-redirect",
      "end": { "col": 37, "line": 24, "offset": 554 },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "465eaf393e0231bb68c4d2e2c801f9986a439ae42807a4f4d287a685727c57f13ad6d4e85d20ffc5e389f532c04feaacabe7a78dd08d3ffcf77b26bdd14f485e_0",
        "is_ignored": false,
        "lines": "    url = request.POST[\"url\"]\n    #ERROR:\n    return HttpResponseRedirect(url)",
        "message": "Data from request (url) is passed to redirect(). This is an open redirect and could be exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url(). See https://cwe.mitre.org/data/definitions/601.html for more information.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "LOW",
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://www.djm.org.uk/posts/djangos-little-protections-word-redirect-dangers/",
            "https://github.com/django/django/blob/d1b7bd030b1db111e1a3505b1fc029ab964382cc/django/utils/http.py#L231"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "rule_id": "PeUZgr",
              "url": "https://semgrep.dev/playground/r/O9TNOyj/python.django.security.injection.open-redirect.open-redirect",
              "version_id": "O9TNOyj"
            }
          },
          "shortlink": "https://sg.run/Ave2",
          "source": "https://semgrep.dev/r/python.django.security.injection.open-redirect.open-redirect",
          "subcategory": ["vuln"],
          "technology": ["django"],
          "vulnerability_class": ["Open Redirect"]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "url",
            "end": { "col": 8, "line": 22, "offset": 483 },
            "start": { "col": 5, "line": 22, "offset": 480 }
          },
          "$FUNC": {
            "abstract_content": "unsafe3",
            "end": { "col": 12, "line": 21, "offset": 465 },
            "start": { "col": 5, "line": 21, "offset": 458 }
          },
          "$W": {
            "abstract_content": "POST",
            "end": { "col": 23, "line": 22, "offset": 498 },
            "start": { "col": 19, "line": 22, "offset": 494 }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "tests/tainting_rules/python/simpl_django_redirect.py",
      "start": { "col": 5, "line": 22, "offset": 480 }
    }
  ],
  "skipped_rules": [],
  "version": "1.51.0"
}
